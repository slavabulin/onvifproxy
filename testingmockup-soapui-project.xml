<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="testingmockup" resourceRoot="" soapui-version="4.5.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="DeviceBinding" type="wsdl" bindingName="{http://www.onvif.org/ver10/device/wsdl}DeviceBinding" soapVersion="1_2" anonymous="optional" definition="file:/D:/work/Onvif/frresh_onvif/new_wsdl/devicemgmt.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/D:/work/Onvif/frresh_onvif/new_wsdl/devicemgmt.wsdl"><con:part><con:url>file:/D:/work/Onvif/frresh_onvif/new_wsdl/devicemgmt.wsdl</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
<!--Copyright (c) 2008-2012 by ONVIF: Open Network Video Interface Forum. All rights reserved.

Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.

THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.-->
<wsdl:definitions targetNamespace="http://www.onvif.org/ver10/device/wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tds="http://www.onvif.org/ver10/device/wsdl">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.onvif.org/ver10/device/wsdl" elementFormDefault="qualified" version="2.3" xmlns:tt="http://www.onvif.org/ver10/schema">
      <xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
      <!--===============================-->
      <xs:element name="GetServices">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IncludeCapability" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicates if the service capabilities (untyped) should be included in the response.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Service" type="tds:Service" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Each Service element contains information about one service.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:complexType name="Service">
        <xs:sequence>
          <xs:element name="Namespace" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="XAddr" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Capabilities" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:any namespace="##any" processContents="lax">
                  <xs:annotation>
                    <xs:documentation>The placeholder for the service capabilities. The service capability element shall be returned here. For example for the device service that would be the tds:DeviceServiceCapabilities element (not complextype).</xs:documentation>
                  </xs:annotation>
                </xs:any>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Version" type="tt:OnvifVersion">
            <xs:annotation>
              <xs:documentation>The version of the service (not the ONVIF core spec version).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:complexType>
      <!--===============================-->
      <xs:element name="GetServiceCapabilities">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetServiceCapabilitiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Capabilities" type="tds:DeviceServiceCapabilities">
              <xs:annotation>
                <xs:documentation>The capabilities for the device service is returned in the Capabilities element.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:complexType name="DeviceServiceCapabilities">
        <xs:sequence>
          <xs:element name="Network" type="tds:NetworkCapabilities">
            <xs:annotation>
              <xs:documentation>Network capabilities.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Security" type="tds:SecurityCapabilities">
            <xs:annotation>
              <xs:documentation>Security capabilities.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="System" type="tds:SystemCapabilities">
            <xs:annotation>
              <xs:documentation>System capabilities.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Misc" type="tds:MiscCapabilities" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Capabilities that do not fit in any of the other categories.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Capabilities" type="tds:DeviceServiceCapabilities"/>
      <!--===============================-->
      <xs:complexType name="NetworkCapabilities">
        <xs:attribute name="IPFilter" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for IP filtering.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ZeroConfiguration" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for zeroconf.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="IPVersion6" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for IPv6.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DynDNS" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for dynamic DNS configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Dot11Configuration" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for IEEE 802.11 configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Dot1XConfigurations" type="xs:int">
          <xs:annotation>
            <xs:documentation>Indicates the maximum number of Dot1X configurations supported by the device</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HostnameFromDHCP" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for retrieval of hostname from DHCP.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="NTP" type="xs:int">
          <xs:annotation>
            <xs:documentation>Maximum number of NTP servers supported by the devices SetNTP command.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DHCPv6" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for Stateful IPv6 DHCP.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute processContents="lax"/>
      </xs:complexType>
      <!--===============================-->
      <xs:simpleType name="EAPMethodTypes">
        <xs:list itemType="xs:int"/>
      </xs:simpleType>
      <xs:complexType name="SecurityCapabilities">
        <xs:attribute name="TLS1.0" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for TLS 1.0.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="TLS1.1" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for TLS 1.1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="TLS1.2" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for TLS 1.2.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="OnboardKeyGeneration" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for onboard key generation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="AccessPolicyConfig" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for access policy configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DefaultAccessPolicy" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for the ONVIF default access policy.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Dot1X" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for IEEE 802.1X configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RemoteUserHandling" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for remote user configuration. Used when accessing another device.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="X.509Token" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Security X.509 token.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SAMLToken" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Security SAML token.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="KerberosToken" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Security Kerberos token.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="UsernameToken" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Security Username token.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HttpDigest" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS over HTTP digest authenticated communication layer.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RELToken" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Security REL token.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SupportedEAPMethods" type="tds:EAPMethodTypes">
          <xs:annotation>
            <xs:documentation>
              EAP Methods supported by the device. The int values refer to the
              <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>
              .
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute processContents="lax"/>
      </xs:complexType>
      <!--===============================-->
      <xs:complexType name="SystemCapabilities">
        <xs:attribute name="DiscoveryResolve" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS Discovery resolve requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DiscoveryBye" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for WS-Discovery Bye.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="RemoteDiscovery" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for remote discovery, see WS-Discovery.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SystemBackup" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for system backup through MTOM.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SystemLogging" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for retrieval of system logging through MTOM.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="FirmwareUpgrade" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for firmware upgrade through MTOM.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HttpFirmwareUpgrade" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for system backup through MTOM.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HttpSystemBackup" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for system backup through HTTP.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HttpSystemLogging" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for retrieval of system logging through HTTP.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="HttpSupportInformation" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indicates support for retrieving support information through HTTP.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute processContents="lax"/>
      </xs:complexType>
      <!--===============================-->
      <xs:complexType name="MiscCapabilities">
        <xs:attribute name="AuxiliaryCommands" type="tt:StringAttrList">
          <xs:annotation>
            <xs:documentation>Lists of commands supported by SendAuxiliaryCommand.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute processContents="lax"/>
      </xs:complexType>
      <!--===============================-->
      <xs:element name="GetDeviceInformation">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDeviceInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Manufacturer" type="xs:string">
              <xs:annotation>
                <xs:documentation>The manufactor of the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Model" type="xs:string">
              <xs:annotation>
                <xs:documentation>The device model.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="FirmwareVersion" type="xs:string">
              <xs:annotation>
                <xs:documentation>The firmware version in the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="SerialNumber" type="xs:string">
              <xs:annotation>
                <xs:documentation>The serial number of the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="HardwareId" type="xs:string">
              <xs:annotation>
                <xs:documentation>The hardware ID of the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetSystemDateAndTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DateTimeType" type="tt:SetDateTimeType">
              <xs:annotation>
                <xs:documentation>Defines if the date and time is set via NTP or manually.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DaylightSavings" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Automatically adjust Daylight savings if defined in TimeZone.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="TimeZone" type="tt:TimeZone" minOccurs="0">
              <xs:annotation>
                <xs:documentation>The time zone in POSIX 1003.1 format</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="UTCDateTime" type="tt:DateTime" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetSystemDateAndTimeResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetSystemDateAndTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSystemDateAndTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SystemDateAndTime" type="tt:SystemDateTime">
              <xs:annotation>
                <xs:documentation>Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetSystemFactoryDefault">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FactoryDefault" type="tt:FactoryDefaultType">
              <xs:annotation>
                <xs:documentation>Specifies the factory default action type.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetSystemFactoryDefaultResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="UpgradeSystemFirmware">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Firmware" type="tt:AttachmentData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpgradeSystemFirmwareResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Message" type="xs:string" minOccurs="0" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SystemReboot">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="SystemRebootResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Message" type="xs:string">
              <xs:annotation>
                <xs:documentation>Contains the reboot message sent by the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="RestoreSystem">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BackupFiles" type="tt:BackupFile" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RestoreSystemResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetSystemBackup">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSystemBackupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BackupFiles" type="tt:BackupFile" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetSystemSupportInformation">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSystemSupportInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SupportInformation" type="tt:SupportInformation">
              <xs:annotation>
                <xs:documentation>Contains the arbitary device diagnostics information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetSystemLog">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LogType" type="tt:SystemLogType">
              <xs:annotation>
                <xs:documentation>Specifies the type of system log to get.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSystemLogResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SystemLog" type="tt:SystemLog">
              <xs:annotation>
                <xs:documentation>Contains the system log information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetScopes">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetScopesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Scopes" type="tt:Scope" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetScopes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Scopes" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains a list of scope parameters that will replace all existing configurable scope parameters.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetScopesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="AddScopes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ScopeItem" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains a list of new configurable scope parameters that will be added to the existing configurable scope.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddScopesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="RemoveScopes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ScopeItem" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  Contains a list of URIs that should be removed from the device scope.
                  <br/>
                  Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveScopesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ScopeItem" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains a list of URIs that has been removed from the device scope</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDiscoveryMode">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDiscoveryModeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DiscoveryMode" type="tt:DiscoveryMode">
              <xs:annotation>
                <xs:documentation>Indicator of discovery mode: Discoverable, NonDiscoverable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetDiscoveryMode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DiscoveryMode" type="tt:DiscoveryMode">
              <xs:annotation>
                <xs:documentation>Indicator of discovery mode: Discoverable, NonDiscoverable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDiscoveryModeResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetRemoteDiscoveryMode">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRemoteDiscoveryModeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RemoteDiscoveryMode" type="tt:DiscoveryMode">
              <xs:annotation>
                <xs:documentation>Indicator of discovery mode: Discoverable, NonDiscoverable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetRemoteDiscoveryMode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RemoteDiscoveryMode" type="tt:DiscoveryMode">
              <xs:annotation>
                <xs:documentation>Indicator of discovery mode: Discoverable, NonDiscoverable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRemoteDiscoveryModeResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDPAddresses">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDPAddressesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DPAddress" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetDPAddresses">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DPAddress" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDPAddressesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetEndpointReference">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEndpointReferenceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="GUID" type="xs:string"/>
            <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetRemoteUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRemoteUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RemoteUser" type="tt:RemoteUser" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetRemoteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RemoteUser" type="tt:RemoteUser" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRemoteUserResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetUsers">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="User" type="tt:User" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains a list of the onvif users and following information is included in each entry: username and user level.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="CreateUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="User" type="tt:User" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateUsersResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="DeleteUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Username" type="xs:string" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteUsersResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="User" type="tt:User" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetWsdlUrl">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetWsdlUrlResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="WsdlUrl" type="xs:anyURI"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetCapabilities">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Category" type="tt:CapabilityCategory" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>List of categories to retrieve capability information on.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCapabilitiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Capabilities" type="tt:Capabilities">
              <xs:annotation>
                <xs:documentation>Capability information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetHostname">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetHostnameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="HostnameInformation" type="tt:HostnameInformation">
              <xs:annotation>
                <xs:documentation>Contains the hostname information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetHostname">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Name" type="xs:token">
              <xs:annotation>
                <xs:documentation>The hostname to set.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetHostnameResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetHostnameFromDHCP">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FromDHCP" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>True if the hostname shall be obtained via DHCP.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetHostnameFromDHCPResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RebootNeeded" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicates whether or not a reboot is required after configuration updates.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDNS">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDNSResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DNSInformation" type="tt:DNSInformation">
              <xs:annotation>
                <xs:documentation>DNS information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetDNS">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FromDHCP" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicate if the DNS address is to be retrieved using DHCP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="SearchDomain" type="xs:token" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>DNS search domain.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DNSManual" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>DNS address(es) set manually.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDNSResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetNTP">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNTPResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NTPInformation" type="tt:NTPInformation">
              <xs:annotation>
                <xs:documentation>NTP information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetNTP">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FromDHCP" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicate if NTP address information is to be retrieved using DHCP.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="NTPManual" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Manual NTP settings.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetNTPResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDynamicDNS">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDynamicDNSResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DynamicDNSInformation" type="tt:DynamicDNSInformation">
              <xs:annotation>
                <xs:documentation>Dynamic DNS information.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetDynamicDNS">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="tt:DynamicDNSType">
              <xs:annotation>
                <xs:documentation>Dynamic DNS type.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Name" type="tt:DNSName" minOccurs="0">
              <xs:annotation>
                <xs:documentation>DNS name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="TTL" type="xs:duration" minOccurs="0">
              <xs:annotation>
                <xs:documentation>DNS record time to live.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDynamicDNSResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetNetworkInterfaces">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNetworkInterfacesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NetworkInterfaces" type="tt:NetworkInterface" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>List of network interfaces.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetNetworkInterfaces">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="InterfaceToken" type="tt:ReferenceToken">
              <xs:annotation>
                <xs:documentation>Symbolic network interface name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="NetworkInterface" type="tt:NetworkInterfaceSetConfiguration">
              <xs:annotation>
                <xs:documentation>Network interface name.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetNetworkInterfacesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RebootNeeded" type="xs:boolean" minOccurs="1" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>Indicates whether or not a reboot is required after configuration updates.
									If a device responds with RebootNeeded set to false, the device can be reached
									via the new IP address without further action. A client should be aware that a device
									may not be responsive for a short period of time until it signals availability at
									the new address via the discovery Hello messages.
									If a device responds with RebootNeeded set to true, it will be further available under
									its previous IP address. The settings will only be activated when the device is
									rebooted via the SystemReboot command.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetNetworkProtocols">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNetworkProtocolsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NetworkProtocols" type="tt:NetworkProtocol" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetNetworkProtocols">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NetworkProtocols" type="tt:NetworkProtocol" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetNetworkProtocolsResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetNetworkDefaultGateway">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetNetworkDefaultGatewayResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NetworkGateway" type="tt:NetworkGateway">
              <xs:annotation>
                <xs:documentation>Gets the default IPv4 and IPv6 gateway settings from the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetNetworkDefaultGateway">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Sets IPv4 gateway address used as default setting.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Sets IPv6 gateway address used as default setting.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetNetworkDefaultGatewayResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetZeroConfiguration">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetZeroConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ZeroConfiguration" type="tt:NetworkZeroConfiguration">
              <xs:annotation>
                <xs:documentation>Contains the zero-configuration.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetZeroConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="InterfaceToken" type="tt:ReferenceToken">
              <xs:annotation>
                <xs:documentation>Unique identifier referencing the physical interface.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Enabled" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Specifies if the zero-configuration should be enabled or not.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetZeroConfigurationResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetIPAddressFilter">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetIPAddressFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetIPAddressFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetIPAddressFilterResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="AddIPAddressFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddIPAddressFilterResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="RemoveIPAddressFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveIPAddressFilterResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetAccessPolicy">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAccessPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PolicyFile" type="tt:BinaryData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetAccessPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PolicyFile" type="tt:BinaryData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetAccessPolicyResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="CreateCertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateID" type="xs:token" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Certificate id.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Subject" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Identification of the entity associated with the public-key.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="ValidNotBefore" type="xs:dateTime" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Certificate validity start date.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="ValidNotAfter" type="xs:dateTime" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Certificate expiry start date.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateCertificateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NvtCertificate" type="tt:Certificate">
              <xs:annotation>
                <xs:documentation>base64 encoded DER representation of certificate.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetCertificates">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificatesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NvtCertificate" type="tt:Certificate" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Id and base64 encoded DER representation of all available certificates.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetCertificatesStatus">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificatesStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateStatus" type="tt:CertificateStatus" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Indicates if a certificate is used in an optional HTTPS configuration of the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetCertificatesStatus">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateStatus" type="tt:CertificateStatus" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Indicates if a certificate is to be used in an optional HTTPS configuration of the device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetCertificatesStatusResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="DeleteCertificates">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateID" type="xs:token" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>List of ids of certificates to delete.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteCertificatesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetPkcs10Request">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateID" type="xs:token">
              <xs:annotation>
                <xs:documentation>List of ids of certificates to delete.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Subject" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Relative Dinstinguished Name(RDN) CommonName(CN).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Attributes" type="tt:BinaryData" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Optional base64 encoded DER attributes.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPkcs10RequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Pkcs10Request" type="tt:BinaryData">
              <xs:annotation>
                <xs:documentation>base64 encoded DER representation of certificate.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="LoadCertificates">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="NVTCertificate" type="tt:Certificate" minOccurs="1" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Optional id and base64 encoded DER representation of certificate.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoadCertificatesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetClientCertificateMode">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetClientCertificateModeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Enabled" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicates whether or not client certificates are required by device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetClientCertificateMode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Enabled" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Indicates whether or not client certificates are required by device.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetClientCertificateModeResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetCACertificates">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCACertificatesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CACertificate" type="tt:Certificate" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="LoadCertificateWithPrivateKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateWithPrivateKey" type="tt:CertificateWithPrivateKey" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoadCertificateWithPrivateKeyResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetCertificateInformation">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateID" type="xs:token" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificateInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CertificateInformation" type="tt:CertificateInformation" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="LoadCACertificates">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CACertificate" type="tt:Certificate" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoadCACertificatesResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="CreateDot1XConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDot1XConfigurationResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetDot1XConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDot1XConfigurationResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDot1XConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDot1XConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDot1XConfigurations">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDot1XConfigurationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="DeleteDot1XConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDot1XConfigurationResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetRelayOutputs">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRelayOutputsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RelayOutputs" type="tt:RelayOutput" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetRelayOutputSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RelayOutputToken" type="tt:ReferenceToken"/>
            <xs:element name="Properties" type="tt:RelayOutputSettings"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRelayOutputSettingsResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SetRelayOutputState">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RelayOutputToken" type="tt:ReferenceToken" minOccurs="1" maxOccurs="1"/>
            <xs:element name="LogicalState" type="tt:RelayLogicalState" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetRelayOutputStateResponse">
        <xs:complexType>
          <xs:sequence></xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="SendAuxiliaryCommand">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AuxiliaryCommand" type="tt:AuxiliaryData" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SendAuxiliaryCommandResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="AuxiliaryCommandResponse" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="1"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDot11Capabilities">
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDot11CapabilitiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Capabilities" type="tt:Dot11Capabilities"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetDot11Status">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="InterfaceToken" type="tt:ReferenceToken"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDot11StatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Status" type="tt:Dot11Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="ScanAvailableDot11Networks">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="InterfaceToken" type="tt:ReferenceToken"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ScanAvailableDot11NetworksResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Networks" type="tt:Dot11AvailableNetworks" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="GetSystemUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSystemUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SystemLogUris" type="tt:SystemLogUriList" minOccurs="0" maxOccurs="1"/>
            <xs:element name="SupportInfoUri" type="xs:anyURI" minOccurs="0" maxOccurs="1"/>
            <xs:element name="SystemBackupUri" type="xs:anyURI" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Extension" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="StartFirmwareUpgrade">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="StartFirmwareUpgradeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="UploadUri" type="xs:anyURI"/>
            <xs:element name="UploadDelay" type="xs:duration"/>
            <xs:element name="ExpectedDownTime" type="xs:duration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!--===============================-->
      <xs:element name="StartSystemRestore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="StartSystemRestoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="UploadUri" type="xs:anyURI"/>
            <xs:element name="ExpectedDownTime" type="xs:duration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="GetServicesRequest">
    <wsdl:part name="parameters" element="tds:GetServices"/>
  </wsdl:message>
  <wsdl:message name="GetServicesResponse">
    <wsdl:part name="parameters" element="tds:GetServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetServiceCapabilitiesRequest">
    <wsdl:part name="parameters" element="tds:GetServiceCapabilities"/>
  </wsdl:message>
  <wsdl:message name="GetServiceCapabilitiesResponse">
    <wsdl:part name="parameters" element="tds:GetServiceCapabilitiesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDeviceInformationRequest">
    <wsdl:part name="parameters" element="tds:GetDeviceInformation"/>
  </wsdl:message>
  <wsdl:message name="GetDeviceInformationResponse">
    <wsdl:part name="parameters" element="tds:GetDeviceInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="SetSystemDateAndTimeRequest">
    <wsdl:part name="parameters" element="tds:SetSystemDateAndTime"/>
  </wsdl:message>
  <wsdl:message name="SetSystemDateAndTimeResponse">
    <wsdl:part name="parameters" element="tds:SetSystemDateAndTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSystemDateAndTimeRequest">
    <wsdl:part name="parameters" element="tds:GetSystemDateAndTime"/>
  </wsdl:message>
  <wsdl:message name="GetSystemDateAndTimeResponse">
    <wsdl:part name="parameters" element="tds:GetSystemDateAndTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="SetSystemFactoryDefaultRequest">
    <wsdl:part name="parameters" element="tds:SetSystemFactoryDefault"/>
  </wsdl:message>
  <wsdl:message name="SetSystemFactoryDefaultResponse">
    <wsdl:part name="parameters" element="tds:SetSystemFactoryDefaultResponse"/>
  </wsdl:message>
  <wsdl:message name="UpgradeSystemFirmwareRequest">
    <wsdl:part name="parameters" element="tds:UpgradeSystemFirmware"/>
  </wsdl:message>
  <wsdl:message name="UpgradeSystemFirmwareResponse">
    <wsdl:part name="parameters" element="tds:UpgradeSystemFirmwareResponse"/>
  </wsdl:message>
  <wsdl:message name="SystemRebootRequest">
    <wsdl:part name="parameters" element="tds:SystemReboot"/>
  </wsdl:message>
  <wsdl:message name="SystemRebootResponse">
    <wsdl:part name="parameters" element="tds:SystemRebootResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSystemBackupRequest">
    <wsdl:part name="parameters" element="tds:GetSystemBackup"/>
  </wsdl:message>
  <wsdl:message name="GetSystemBackupResponse">
    <wsdl:part name="parameters" element="tds:GetSystemBackupResponse"/>
  </wsdl:message>
  <wsdl:message name="RestoreSystemRequest">
    <wsdl:part name="parameters" element="tds:RestoreSystem"/>
  </wsdl:message>
  <wsdl:message name="RestoreSystemResponse">
    <wsdl:part name="parameters" element="tds:RestoreSystemResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSystemSupportInformationRequest">
    <wsdl:part name="parameters" element="tds:GetSystemSupportInformation"/>
  </wsdl:message>
  <wsdl:message name="GetSystemSupportInformationResponse">
    <wsdl:part name="parameters" element="tds:GetSystemSupportInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSystemLogRequest">
    <wsdl:part name="parameters" element="tds:GetSystemLog"/>
  </wsdl:message>
  <wsdl:message name="GetSystemLogResponse">
    <wsdl:part name="parameters" element="tds:GetSystemLogResponse"/>
  </wsdl:message>
  <wsdl:message name="GetScopesRequest">
    <wsdl:part name="parameters" element="tds:GetScopes"/>
  </wsdl:message>
  <wsdl:message name="GetScopesResponse">
    <wsdl:part name="parameters" element="tds:GetScopesResponse"/>
  </wsdl:message>
  <wsdl:message name="SetScopesRequest">
    <wsdl:part name="parameters" element="tds:SetScopes"/>
  </wsdl:message>
  <wsdl:message name="SetScopesResponse">
    <wsdl:part name="parameters" element="tds:SetScopesResponse"/>
  </wsdl:message>
  <wsdl:message name="AddScopesRequest">
    <wsdl:part name="parameters" element="tds:AddScopes"/>
  </wsdl:message>
  <wsdl:message name="AddScopesResponse">
    <wsdl:part name="parameters" element="tds:AddScopesResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoveScopesRequest">
    <wsdl:part name="parameters" element="tds:RemoveScopes"/>
  </wsdl:message>
  <wsdl:message name="RemoveScopesResponse">
    <wsdl:part name="parameters" element="tds:RemoveScopesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDiscoveryModeRequest">
    <wsdl:part name="parameters" element="tds:GetDiscoveryMode"/>
  </wsdl:message>
  <wsdl:message name="GetDiscoveryModeResponse">
    <wsdl:part name="parameters" element="tds:GetDiscoveryModeResponse"/>
  </wsdl:message>
  <wsdl:message name="SetDiscoveryModeRequest">
    <wsdl:part name="parameters" element="tds:SetDiscoveryMode"/>
  </wsdl:message>
  <wsdl:message name="SetDiscoveryModeResponse">
    <wsdl:part name="parameters" element="tds:SetDiscoveryModeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetRemoteDiscoveryModeRequest">
    <wsdl:part name="parameters" element="tds:GetRemoteDiscoveryMode"/>
  </wsdl:message>
  <wsdl:message name="GetRemoteDiscoveryModeResponse">
    <wsdl:part name="parameters" element="tds:GetRemoteDiscoveryModeResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRemoteDiscoveryModeRequest">
    <wsdl:part name="parameters" element="tds:SetRemoteDiscoveryMode"/>
  </wsdl:message>
  <wsdl:message name="SetRemoteDiscoveryModeResponse">
    <wsdl:part name="parameters" element="tds:SetRemoteDiscoveryModeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDPAddressesRequest">
    <wsdl:part name="parameters" element="tds:GetDPAddresses"/>
  </wsdl:message>
  <wsdl:message name="GetDPAddressesResponse">
    <wsdl:part name="parameters" element="tds:GetDPAddressesResponse"/>
  </wsdl:message>
  <wsdl:message name="SetDPAddressesRequest">
    <wsdl:part name="parameters" element="tds:SetDPAddresses"/>
  </wsdl:message>
  <wsdl:message name="SetDPAddressesResponse">
    <wsdl:part name="parameters" element="tds:SetDPAddressesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetEndpointReferenceRequest">
    <wsdl:part name="parameters" element="tds:GetEndpointReference"/>
  </wsdl:message>
  <wsdl:message name="GetEndpointReferenceResponse">
    <wsdl:part name="parameters" element="tds:GetEndpointReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="GetRemoteUserRequest">
    <wsdl:part name="parameters" element="tds:GetRemoteUser"/>
  </wsdl:message>
  <wsdl:message name="GetRemoteUserResponse">
    <wsdl:part name="parameters" element="tds:GetRemoteUserResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRemoteUserRequest">
    <wsdl:part name="parameters" element="tds:SetRemoteUser"/>
  </wsdl:message>
  <wsdl:message name="SetRemoteUserResponse">
    <wsdl:part name="parameters" element="tds:SetRemoteUserResponse"/>
  </wsdl:message>
  <wsdl:message name="GetUsersRequest">
    <wsdl:part name="parameters" element="tds:GetUsers"/>
  </wsdl:message>
  <wsdl:message name="GetUsersResponse">
    <wsdl:part name="parameters" element="tds:GetUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="CreateUsersRequest">
    <wsdl:part name="parameters" element="tds:CreateUsers"/>
  </wsdl:message>
  <wsdl:message name="CreateUsersResponse">
    <wsdl:part name="parameters" element="tds:CreateUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteUsersRequest">
    <wsdl:part name="parameters" element="tds:DeleteUsers"/>
  </wsdl:message>
  <wsdl:message name="DeleteUsersResponse">
    <wsdl:part name="parameters" element="tds:DeleteUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="SetUserRequest">
    <wsdl:part name="parameters" element="tds:SetUser"/>
  </wsdl:message>
  <wsdl:message name="SetUserResponse">
    <wsdl:part name="parameters" element="tds:SetUserResponse"/>
  </wsdl:message>
  <wsdl:message name="GetWsdlUrlRequest">
    <wsdl:part name="parameters" element="tds:GetWsdlUrl"/>
  </wsdl:message>
  <wsdl:message name="GetWsdlUrlResponse">
    <wsdl:part name="parameters" element="tds:GetWsdlUrlResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCapabilitiesRequest">
    <wsdl:part name="parameters" element="tds:GetCapabilities"/>
  </wsdl:message>
  <wsdl:message name="GetCapabilitiesResponse">
    <wsdl:part name="parameters" element="tds:GetCapabilitiesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetHostnameRequest">
    <wsdl:part name="parameters" element="tds:GetHostname"/>
  </wsdl:message>
  <wsdl:message name="GetHostnameResponse">
    <wsdl:part name="parameters" element="tds:GetHostnameResponse"/>
  </wsdl:message>
  <wsdl:message name="SetHostnameRequest">
    <wsdl:part name="parameters" element="tds:SetHostname"/>
  </wsdl:message>
  <wsdl:message name="SetHostnameResponse">
    <wsdl:part name="parameters" element="tds:SetHostnameResponse"/>
  </wsdl:message>
  <wsdl:message name="SetHostnameFromDHCPRequest">
    <wsdl:part name="parameters" element="tds:SetHostnameFromDHCP"/>
  </wsdl:message>
  <wsdl:message name="SetHostnameFromDHCPResponse">
    <wsdl:part name="parameters" element="tds:SetHostnameFromDHCPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDNSRequest">
    <wsdl:part name="parameters" element="tds:GetDNS"/>
  </wsdl:message>
  <wsdl:message name="GetDNSResponse">
    <wsdl:part name="parameters" element="tds:GetDNSResponse"/>
  </wsdl:message>
  <wsdl:message name="SetDNSRequest">
    <wsdl:part name="parameters" element="tds:SetDNS"/>
  </wsdl:message>
  <wsdl:message name="SetDNSResponse">
    <wsdl:part name="parameters" element="tds:SetDNSResponse"/>
  </wsdl:message>
  <wsdl:message name="GetNTPRequest">
    <wsdl:part name="parameters" element="tds:GetNTP"/>
  </wsdl:message>
  <wsdl:message name="GetNTPResponse">
    <wsdl:part name="parameters" element="tds:GetNTPResponse"/>
  </wsdl:message>
  <wsdl:message name="SetNTPRequest">
    <wsdl:part name="parameters" element="tds:SetNTP"/>
  </wsdl:message>
  <wsdl:message name="SetNTPResponse">
    <wsdl:part name="parameters" element="tds:SetNTPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDynamicDNSRequest">
    <wsdl:part name="parameters" element="tds:GetDynamicDNS"/>
  </wsdl:message>
  <wsdl:message name="GetDynamicDNSResponse">
    <wsdl:part name="parameters" element="tds:GetDynamicDNSResponse"/>
  </wsdl:message>
  <wsdl:message name="SetDynamicDNSRequest">
    <wsdl:part name="parameters" element="tds:SetDynamicDNS"/>
  </wsdl:message>
  <wsdl:message name="SetDynamicDNSResponse">
    <wsdl:part name="parameters" element="tds:SetDynamicDNSResponse"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkInterfacesRequest">
    <wsdl:part name="parameters" element="tds:GetNetworkInterfaces"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkInterfacesResponse">
    <wsdl:part name="parameters" element="tds:GetNetworkInterfacesResponse"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkInterfacesRequest">
    <wsdl:part name="parameters" element="tds:SetNetworkInterfaces"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkInterfacesResponse">
    <wsdl:part name="parameters" element="tds:SetNetworkInterfacesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkProtocolsRequest">
    <wsdl:part name="parameters" element="tds:GetNetworkProtocols"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkProtocolsResponse">
    <wsdl:part name="parameters" element="tds:GetNetworkProtocolsResponse"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkProtocolsRequest">
    <wsdl:part name="parameters" element="tds:SetNetworkProtocols"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkProtocolsResponse">
    <wsdl:part name="parameters" element="tds:SetNetworkProtocolsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkDefaultGatewayRequest">
    <wsdl:part name="parameters" element="tds:GetNetworkDefaultGateway"/>
  </wsdl:message>
  <wsdl:message name="GetNetworkDefaultGatewayResponse">
    <wsdl:part name="parameters" element="tds:GetNetworkDefaultGatewayResponse"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkDefaultGatewayRequest">
    <wsdl:part name="parameters" element="tds:SetNetworkDefaultGateway"/>
  </wsdl:message>
  <wsdl:message name="SetNetworkDefaultGatewayResponse">
    <wsdl:part name="parameters" element="tds:SetNetworkDefaultGatewayResponse"/>
  </wsdl:message>
  <wsdl:message name="GetZeroConfigurationRequest">
    <wsdl:part name="parameters" element="tds:GetZeroConfiguration"/>
  </wsdl:message>
  <wsdl:message name="GetZeroConfigurationResponse">
    <wsdl:part name="parameters" element="tds:GetZeroConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="SetZeroConfigurationRequest">
    <wsdl:part name="parameters" element="tds:SetZeroConfiguration"/>
  </wsdl:message>
  <wsdl:message name="SetZeroConfigurationResponse">
    <wsdl:part name="parameters" element="tds:SetZeroConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetIPAddressFilterRequest">
    <wsdl:part name="parameters" element="tds:GetIPAddressFilter"/>
  </wsdl:message>
  <wsdl:message name="GetIPAddressFilterResponse">
    <wsdl:part name="parameters" element="tds:GetIPAddressFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="SetIPAddressFilterRequest">
    <wsdl:part name="parameters" element="tds:SetIPAddressFilter"/>
  </wsdl:message>
  <wsdl:message name="SetIPAddressFilterResponse">
    <wsdl:part name="parameters" element="tds:SetIPAddressFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="AddIPAddressFilterRequest">
    <wsdl:part name="parameters" element="tds:AddIPAddressFilter"/>
  </wsdl:message>
  <wsdl:message name="AddIPAddressFilterResponse">
    <wsdl:part name="parameters" element="tds:AddIPAddressFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoveIPAddressFilterRequest">
    <wsdl:part name="parameters" element="tds:RemoveIPAddressFilter"/>
  </wsdl:message>
  <wsdl:message name="RemoveIPAddressFilterResponse">
    <wsdl:part name="parameters" element="tds:RemoveIPAddressFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="GetAccessPolicyRequest">
    <wsdl:part name="parameters" element="tds:GetAccessPolicy"/>
  </wsdl:message>
  <wsdl:message name="GetAccessPolicyResponse">
    <wsdl:part name="parameters" element="tds:GetAccessPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="SetAccessPolicyRequest">
    <wsdl:part name="parameters" element="tds:SetAccessPolicy"/>
  </wsdl:message>
  <wsdl:message name="SetAccessPolicyResponse">
    <wsdl:part name="parameters" element="tds:SetAccessPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="CreateCertificateRequest">
    <wsdl:part name="parameters" element="tds:CreateCertificate"/>
  </wsdl:message>
  <wsdl:message name="CreateCertificateResponse">
    <wsdl:part name="parameters" element="tds:CreateCertificateResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCertificatesRequest">
    <wsdl:part name="parameters" element="tds:GetCertificates"/>
  </wsdl:message>
  <wsdl:message name="GetCertificatesResponse">
    <wsdl:part name="parameters" element="tds:GetCertificatesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCertificatesStatusRequest">
    <wsdl:part name="parameters" element="tds:GetCertificatesStatus"/>
  </wsdl:message>
  <wsdl:message name="GetCertificatesStatusResponse">
    <wsdl:part name="parameters" element="tds:GetCertificatesStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="SetCertificatesStatusRequest">
    <wsdl:part name="parameters" element="tds:SetCertificatesStatus"/>
  </wsdl:message>
  <wsdl:message name="SetCertificatesStatusResponse">
    <wsdl:part name="parameters" element="tds:SetCertificatesStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteCertificatesRequest">
    <wsdl:part name="parameters" element="tds:DeleteCertificates"/>
  </wsdl:message>
  <wsdl:message name="DeleteCertificatesResponse">
    <wsdl:part name="parameters" element="tds:DeleteCertificatesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetPkcs10RequestRequest">
    <wsdl:part name="parameters" element="tds:GetPkcs10Request"/>
  </wsdl:message>
  <wsdl:message name="GetPkcs10RequestResponse">
    <wsdl:part name="parameters" element="tds:GetPkcs10RequestResponse"/>
  </wsdl:message>
  <wsdl:message name="LoadCertificatesRequest">
    <wsdl:part name="parameters" element="tds:LoadCertificates"/>
  </wsdl:message>
  <wsdl:message name="LoadCertificatesResponse">
    <wsdl:part name="parameters" element="tds:LoadCertificatesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetClientCertificateModeRequest">
    <wsdl:part name="parameters" element="tds:GetClientCertificateMode"/>
  </wsdl:message>
  <wsdl:message name="GetClientCertificateModeResponse">
    <wsdl:part name="parameters" element="tds:GetClientCertificateModeResponse"/>
  </wsdl:message>
  <wsdl:message name="SetClientCertificateModeRequest">
    <wsdl:part name="parameters" element="tds:SetClientCertificateMode"/>
  </wsdl:message>
  <wsdl:message name="SetClientCertificateModeResponse">
    <wsdl:part name="parameters" element="tds:SetClientCertificateModeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetRelayOutputsRequest">
    <wsdl:part name="parameters" element="tds:GetRelayOutputs"/>
  </wsdl:message>
  <wsdl:message name="GetRelayOutputsResponse">
    <wsdl:part name="parameters" element="tds:GetRelayOutputsResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRelayOutputSettingsRequest">
    <wsdl:part name="parameters" element="tds:SetRelayOutputSettings"/>
  </wsdl:message>
  <wsdl:message name="SetRelayOutputSettingsResponse">
    <wsdl:part name="parameters" element="tds:SetRelayOutputSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRelayOutputStateRequest">
    <wsdl:part name="parameters" element="tds:SetRelayOutputState"/>
  </wsdl:message>
  <wsdl:message name="SetRelayOutputStateResponse">
    <wsdl:part name="parameters" element="tds:SetRelayOutputStateResponse"/>
  </wsdl:message>
  <wsdl:message name="SendAuxiliaryCommandRequest">
    <wsdl:part name="parameters" element="tds:SendAuxiliaryCommand"/>
  </wsdl:message>
  <wsdl:message name="SendAuxiliaryCommandResponse">
    <wsdl:part name="parameters" element="tds:SendAuxiliaryCommandResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCACertificatesRequest">
    <wsdl:part name="parameters" element="tds:GetCACertificates"/>
  </wsdl:message>
  <wsdl:message name="GetCACertificatesResponse">
    <wsdl:part name="parameters" element="tds:GetCACertificatesResponse"/>
  </wsdl:message>
  <wsdl:message name="LoadCertificateWithPrivateKeyRequest">
    <wsdl:part name="parameters" element="tds:LoadCertificateWithPrivateKey"/>
  </wsdl:message>
  <wsdl:message name="LoadCertificateWithPrivateKeyResponse">
    <wsdl:part name="parameters" element="tds:LoadCertificateWithPrivateKeyResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCertificateInformationRequest">
    <wsdl:part name="parameters" element="tds:GetCertificateInformation"/>
  </wsdl:message>
  <wsdl:message name="GetCertificateInformationResponse">
    <wsdl:part name="parameters" element="tds:GetCertificateInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="LoadCACertificatesRequest">
    <wsdl:part name="parameters" element="tds:LoadCACertificates"/>
  </wsdl:message>
  <wsdl:message name="LoadCACertificatesResponse">
    <wsdl:part name="parameters" element="tds:LoadCACertificatesResponse"/>
  </wsdl:message>
  <wsdl:message name="CreateDot1XConfigurationRequest">
    <wsdl:part name="parameters" element="tds:CreateDot1XConfiguration"/>
  </wsdl:message>
  <wsdl:message name="CreateDot1XConfigurationResponse">
    <wsdl:part name="parameters" element="tds:CreateDot1XConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="SetDot1XConfigurationRequest">
    <wsdl:part name="parameters" element="tds:SetDot1XConfiguration"/>
  </wsdl:message>
  <wsdl:message name="SetDot1XConfigurationResponse">
    <wsdl:part name="parameters" element="tds:SetDot1XConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDot1XConfigurationRequest">
    <wsdl:part name="parameters" element="tds:GetDot1XConfiguration"/>
  </wsdl:message>
  <wsdl:message name="GetDot1XConfigurationResponse">
    <wsdl:part name="parameters" element="tds:GetDot1XConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDot1XConfigurationsRequest">
    <wsdl:part name="parameters" element="tds:GetDot1XConfigurations"/>
  </wsdl:message>
  <wsdl:message name="GetDot1XConfigurationsResponse">
    <wsdl:part name="parameters" element="tds:GetDot1XConfigurationsResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteDot1XConfigurationRequest">
    <wsdl:part name="parameters" element="tds:DeleteDot1XConfiguration"/>
  </wsdl:message>
  <wsdl:message name="DeleteDot1XConfigurationResponse">
    <wsdl:part name="parameters" element="tds:DeleteDot1XConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDot11CapabilitiesRequest">
    <wsdl:part name="parameters" element="tds:GetDot11Capabilities"/>
  </wsdl:message>
  <wsdl:message name="GetDot11CapabilitiesResponse">
    <wsdl:part name="parameters" element="tds:GetDot11CapabilitiesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetDot11StatusRequest">
    <wsdl:part name="parameters" element="tds:GetDot11Status"/>
  </wsdl:message>
  <wsdl:message name="GetDot11StatusResponse">
    <wsdl:part name="parameters" element="tds:GetDot11StatusResponse"/>
  </wsdl:message>
  <wsdl:message name="ScanAvailableDot11NetworksRequest">
    <wsdl:part name="parameters" element="tds:ScanAvailableDot11Networks"/>
  </wsdl:message>
  <wsdl:message name="ScanAvailableDot11NetworksResponse">
    <wsdl:part name="parameters" element="tds:ScanAvailableDot11NetworksResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSystemUrisRequest">
    <wsdl:part name="parameters" element="tds:GetSystemUris"/>
  </wsdl:message>
  <wsdl:message name="GetSystemUrisResponse">
    <wsdl:part name="parameters" element="tds:GetSystemUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="StartFirmwareUpgradeRequest">
    <wsdl:part name="parameters" element="tds:StartFirmwareUpgrade"/>
  </wsdl:message>
  <wsdl:message name="StartFirmwareUpgradeResponse">
    <wsdl:part name="parameters" element="tds:StartFirmwareUpgradeResponse"/>
  </wsdl:message>
  <wsdl:message name="StartSystemRestoreRequest">
    <wsdl:part name="parameters" element="tds:StartSystemRestore"/>
  </wsdl:message>
  <wsdl:message name="StartSystemRestoreResponse">
    <wsdl:part name="parameters" element="tds:StartSystemRestoreResponse"/>
  </wsdl:message>
  <wsdl:portType name="Device">
    <wsdl:operation name="GetServices">
      <wsdl:documentation>Returns information about services on the device.</wsdl:documentation>
      <wsdl:input message="tds:GetServicesRequest"/>
      <wsdl:output message="tds:GetServicesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetServiceCapabilities">
      <wsdl:documentation>Returns the capabilities of the device service. The result is returned in a typed answer.</wsdl:documentation>
      <wsdl:input message="tds:GetServiceCapabilitiesRequest"/>
      <wsdl:output message="tds:GetServiceCapabilitiesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDeviceInformation">
      <wsdl:documentation>This operation gets basic device information from the device.</wsdl:documentation>
      <wsdl:input message="tds:GetDeviceInformationRequest"/>
      <wsdl:output message="tds:GetDeviceInformationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetSystemDateAndTime">
      <wsdl:documentation>
        This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and of the manual system date and time (if
				applicable) or indication of NTP time (if applicable) through the SetSystemDateAndTime
				command.
        <br/>
        If system time and date are set manually, the client shall include UTCDateTime in the request.
        <br/>
        A TimeZone token which is not formed according to the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.
        <br/>
        The DayLightSavings flag should be set to true to activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion of the TimeZone settings should be ignored.
      </wsdl:documentation>
      <wsdl:input message="tds:SetSystemDateAndTimeRequest"/>
      <wsdl:output message="tds:SetSystemDateAndTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemDateAndTime">
      <wsdl:documentation>
        This operation gets the device system date and time. The device shall support the return of
				the daylight saving setting and of the manual system date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime command.
        <br/>
        A device shall provide the UTCDateTime information.
      </wsdl:documentation>
      <wsdl:input message="tds:GetSystemDateAndTimeRequest"/>
      <wsdl:output message="tds:GetSystemDateAndTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetSystemFactoryDefault">
      <wsdl:documentation>This operation reloads the parameters on the device to their factory default values.</wsdl:documentation>
      <wsdl:input message="tds:SetSystemFactoryDefaultRequest"/>
      <wsdl:output message="tds:SetSystemFactoryDefaultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="UpgradeSystemFirmware">
      <wsdl:documentation>This operation upgrades a device firmware version. After a successful upgrade the response
				message is sent before the device reboots. The device should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact format of the firmware data is
				outside the scope of this standard.</wsdl:documentation>
      <wsdl:input message="tds:UpgradeSystemFirmwareRequest"/>
      <wsdl:output message="tds:UpgradeSystemFirmwareResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SystemReboot">
      <wsdl:documentation>This operation reboots the device.</wsdl:documentation>
      <wsdl:input message="tds:SystemRebootRequest"/>
      <wsdl:output message="tds:SystemRebootResponse"/>
    </wsdl:operation>
    <wsdl:operation name="RestoreSystem">
      <wsdl:documentation>This operation restores the system backup configuration files(s) previously retrieved from a
				device. The device should support restore of backup configuration file(s) through the
				RestoreSystem command. The exact format of the backup configuration file(s) is outside the
				scope of this standard. If the command is supported, it shall accept backup files returned by
				the GetSystemBackup command.</wsdl:documentation>
      <wsdl:input message="tds:RestoreSystemRequest"/>
      <wsdl:output message="tds:RestoreSystemResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemBackup">
      <wsdl:documentation>This operation is retrieves system backup configuration file(s) from a device. The device
				should support return of back up configuration file(s) through the GetSystemBackup command.
				The backup is returned with reference to a name and mime-type together with binary data.
				The exact format of the backup configuration files is outside the scope of this standard.</wsdl:documentation>
      <wsdl:input message="tds:GetSystemBackupRequest"/>
      <wsdl:output message="tds:GetSystemBackupResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemLog">
      <wsdl:documentation>This operation gets a system log from the device. The exact format of the system logs is outside the scope of this standard.</wsdl:documentation>
      <wsdl:input message="tds:GetSystemLogRequest"/>
      <wsdl:output message="tds:GetSystemLogResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemSupportInformation">
      <wsdl:documentation>This operation gets arbitary device diagnostics information from the device.</wsdl:documentation>
      <wsdl:input message="tds:GetSystemSupportInformationRequest"/>
      <wsdl:output message="tds:GetSystemSupportInformationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetScopes">
      <wsdl:documentation>
        This operation requests the scope parameters of a device. The scope parameters are used in
				the device discovery to match a probe message, see Section 7. The Scope parameters are of
				two different types:
        <ul>
          <li>Fixed</li>
          <li>Configurable</li>
        </ul>
        Fixed scope parameters cannot be altered through the device management interface but are
				permanent device characteristics part of the device firmware configurations. The scope type is
				indicated in the scope list returned in the get scope parameters response. Configurable scope
				parameters can be set throught the set and add scope parameters operations. 
				The device shall support retrieval of discovery scope parameters
				through the GetScopes command. As some scope parameters are mandatory, the client
				always expects a scope list in the response.
      </wsdl:documentation>
      <wsdl:input message="tds:GetScopesRequest"/>
      <wsdl:output message="tds:GetScopesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetScopes">
      <wsdl:documentation>This operation sets the scope parameters of a device. The scope parameters are used in the
				device discovery to match a probe message.
				This operation replaces all existing configurable scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope add command instead. The device shall
				support configuration of discovery scope parameters through the SetScopes command.</wsdl:documentation>
      <wsdl:input message="tds:SetScopesRequest"/>
      <wsdl:output message="tds:SetScopesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="AddScopes">
      <wsdl:documentation>This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe message. The device shall
				support addition of discovery scope parameters through the AddScopes command.</wsdl:documentation>
      <wsdl:input message="tds:AddScopesRequest"/>
      <wsdl:output message="tds:AddScopesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="RemoveScopes">
      <wsdl:documentation>This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match a probe message, see Section 7. The
				device shall support deletion of discovery scope parameters through the RemoveScopes
				command.
				Table</wsdl:documentation>
      <wsdl:input message="tds:RemoveScopesRequest"/>
      <wsdl:output message="tds:RemoveScopesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDiscoveryMode">
      <wsdl:documentation>This operation gets the discovery mode of a device. See Section 7.2 for the definition of the
				different device discovery modes. The device shall support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.</wsdl:documentation>
      <wsdl:input message="tds:GetDiscoveryModeRequest"/>
      <wsdl:output message="tds:GetDiscoveryModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetDiscoveryMode">
      <wsdl:documentation>This operation sets the discovery mode operation of a device. See Section 7.2 for the
				definition of the different device discovery modes. The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode command.</wsdl:documentation>
      <wsdl:input message="tds:SetDiscoveryModeRequest"/>
      <wsdl:output message="tds:SetDiscoveryModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetRemoteDiscoveryMode">
      <wsdl:documentation>This operation gets the remote discovery mode of a device. See Section 7.4 for the definition
				of remote discovery extensions. A device that supports remote discovery shall support
				retrieval of the remote discovery mode setting through the GetRemoteDiscoveryMode
				command.</wsdl:documentation>
      <wsdl:input message="tds:GetRemoteDiscoveryModeRequest"/>
      <wsdl:output message="tds:GetRemoteDiscoveryModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetRemoteDiscoveryMode">
      <wsdl:documentation>This operation sets the remote discovery mode of operation of a device. See Section 7.4 for
				the definition of remote discovery remote extensions. A device that supports remote discovery
				shall support configuration of the discovery mode setting through the
				SetRemoteDiscoveryMode command.</wsdl:documentation>
      <wsdl:input message="tds:SetRemoteDiscoveryModeRequest"/>
      <wsdl:output message="tds:SetRemoteDiscoveryModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDPAddresses">
      <wsdl:documentation>This operation gets the remote DP address or addresses from a device. If the device supports
				remote discovery, as specified in Section 7.4, the device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.</wsdl:documentation>
      <wsdl:input message="tds:GetDPAddressesRequest"/>
      <wsdl:output message="tds:GetDPAddressesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetDPAddresses">
      <wsdl:documentation>This operation sets the remote DP address or addresses on a device. If the device supports
				remote discovery, as specified in Section 7.4, the device shall support configuration of the
				remote DP address(es) through the SetDPAddresses command.</wsdl:documentation>
      <wsdl:input message="tds:SetDPAddressesRequest"/>
      <wsdl:output message="tds:SetDPAddressesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetEndpointReference">
      <wsdl:documentation>A client can ask for the device service endpoint reference address property that can be used
				to derive the password equivalent for remote user operation. The device shall support the
				GetEndpointReference command returning the address property of the device service
				endpoint reference.</wsdl:documentation>
      <wsdl:input message="tds:GetEndpointReferenceRequest"/>
      <wsdl:output message="tds:GetEndpointReferenceResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetRemoteUser">
      <wsdl:documentation>
        This operation returns the configured remote user (if any). A device supporting remote user
				handling shall support this operation. The user is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.
        <br/>
        The algorithm to use for deriving the password is described in section 5.12.2.1 of the core specification.
      </wsdl:documentation>
      <wsdl:input message="tds:GetRemoteUserRequest"/>
      <wsdl:output message="tds:GetRemoteUserResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetRemoteUser">
      <wsdl:documentation>
        This operation sets the remote user. A device supporting remote user handling shall support this
				operation. The user is only valid for the WS-UserToken profile or as a HTTP / RTSP user.
        <br/>
        The password that is set shall always be the original (not derived) password.
        <br/>
        If UseDerivedPassword is set password derivation shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving the password is described in section 5.12.2.1 of the core specification.
        <br/>
        To remove the remote user SetRemoteUser should be called without the RemoteUser parameter.
      </wsdl:documentation>
      <wsdl:input message="tds:SetRemoteUserRequest"/>
      <wsdl:output message="tds:SetRemoteUserResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <wsdl:documentation>This operation lists the registered users and corresponding credentials on a device. The
				device shall support retrieval of registered device users and their credentials for the user
				token through the GetUsers command.</wsdl:documentation>
      <wsdl:input message="tds:GetUsersRequest"/>
      <wsdl:output message="tds:GetUsersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="CreateUsers">
      <wsdl:documentation>
        This operation creates new device users and corresponding credentials on a device for authentication purposes. 
				The device shall support creation of device users and their credentials through the CreateUsers
				command. Either all users are created successfully or a fault message shall be returned
				without creating any user.
        <br/>
        ONVIF compliant devices are recommended to support password length of at least 28 bytes,
				as clients may follow the password derivation mechanism which results in 'password
				equivalent' of length 28 bytes, as described in section 3.1.2 of the ONVIF security white paper.
      </wsdl:documentation>
      <wsdl:input message="tds:CreateUsersRequest"/>
      <wsdl:output message="tds:CreateUsersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteUsers">
      <wsdl:documentation>This operation deletes users on a device. The device shall support deletion of device users and their credentials 
				through the DeleteUsers command. A device may have one or more fixed users
				that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a
				fault message shall be returned and no users be deleted.</wsdl:documentation>
      <wsdl:input message="tds:DeleteUsersRequest"/>
      <wsdl:output message="tds:DeleteUsersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetUser">
      <wsdl:documentation>This operation updates the settings for one or several users on a device for authentication purposes.
				The device shall support update of device users and their credentials through the SetUser command. 
				Either all change requests are processed successfully or a fault message shall be returned and no change requests be processed.</wsdl:documentation>
      <wsdl:input message="tds:SetUserRequest"/>
      <wsdl:output message="tds:SetUserResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetWsdlUrl">
      <wsdl:documentation>It is possible for an endpoint to request a URL that can be used to retrieve the complete
				schema and WSDL definitions of a device. The command gives in return a URL entry point
				where all the necessary product specific WSDL and schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download through the GetWsdlUrl command.</wsdl:documentation>
      <wsdl:input message="tds:GetWsdlUrlRequest"/>
      <wsdl:output message="tds:GetWsdlUrlResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetCapabilities">
      <wsdl:documentation>Any endpoint can ask for the capabilities of a device using the capability exchange request
				response operation. The device shall indicate all its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses (XAddr) of the service implementing
				the interface operations in the category. Apart from the addresses, the
				capabilities only reflect optional functions.</wsdl:documentation>
      <wsdl:input message="tds:GetCapabilitiesRequest"/>
      <wsdl:output message="tds:GetCapabilitiesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetHostname">
      <wsdl:documentation>This operation is used by an endpoint to get the hostname from a device. The device shall
				return its hostname configurations through the GetHostname command.</wsdl:documentation>
      <wsdl:input message="tds:GetHostnameRequest"/>
      <wsdl:output message="tds:GetHostnameResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetHostname">
      <wsdl:documentation>
        This operation sets the hostname on a device. It shall be possible to set the device hostname
				configurations through the SetHostname command.
        <br/>
        A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
      </wsdl:documentation>
      <wsdl:input message="tds:SetHostnameRequest"/>
      <wsdl:output message="tds:SetHostnameResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetHostnameFromDHCP">
      <wsdl:documentation>This operation controls whether the hostname is set manually or retrieved via DHCP.</wsdl:documentation>
      <wsdl:input message="tds:SetHostnameFromDHCPRequest"/>
      <wsdl:output message="tds:SetHostnameFromDHCPResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDNS">
      <wsdl:documentation>This operation gets the DNS settings from a device. The device shall return its DNS
				configurations through the GetDNS command.</wsdl:documentation>
      <wsdl:input message="tds:GetDNSRequest"/>
      <wsdl:output message="tds:GetDNSResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetDNS">
      <wsdl:documentation>This operation sets the DNS settings on a device. It shall be possible to set the device DNS
				configurations through the SetDNS command.</wsdl:documentation>
      <wsdl:input message="tds:SetDNSRequest"/>
      <wsdl:output message="tds:SetDNSResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetNTP">
      <wsdl:documentation>This operation gets the NTP settings from a device. If the device supports NTP, it shall be
				possible to get the NTP server settings through the GetNTP command.</wsdl:documentation>
      <wsdl:input message="tds:GetNTPRequest"/>
      <wsdl:output message="tds:GetNTPResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetNTP">
      <wsdl:documentation>
        This operation sets the NTP settings on a device. If the device supports NTP, it shall be
				possible to set the NTP server settings through the SetNTP command.
        <br/>
        A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
        <br/>
        Changes to the NTP server list will not affect the clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
      </wsdl:documentation>
      <wsdl:input message="tds:SetNTPRequest"/>
      <wsdl:output message="tds:SetNTPResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDynamicDNS">
      <wsdl:documentation>This operation gets the dynamic DNS settings from a device. If the device supports dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.</wsdl:documentation>
      <wsdl:input message="tds:GetDynamicDNSRequest"/>
      <wsdl:output message="tds:GetDynamicDNSResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetDynamicDNS">
      <wsdl:documentation>This operation sets the dynamic DNS settings on a device. If the device supports dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.</wsdl:documentation>
      <wsdl:input message="tds:SetDynamicDNSRequest"/>
      <wsdl:output message="tds:SetDynamicDNSResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkInterfaces">
      <wsdl:documentation>This operation gets the network interface configuration from a device. The device shall
				support return of network interface configuration settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.</wsdl:documentation>
      <wsdl:input message="tds:GetNetworkInterfacesRequest"/>
      <wsdl:output message="tds:GetNetworkInterfacesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkInterfaces">
      <wsdl:documentation>
        This operation sets the network interface configuration on a device. The device shall support
				network configuration of supported network interfaces through the SetNetworkInterfaces
				command.
        <br/>
        For interoperability with a client unaware of the IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11 configuration element isn’t present in the
				request.
      </wsdl:documentation>
      <wsdl:input message="tds:SetNetworkInterfacesRequest"/>
      <wsdl:output message="tds:SetNetworkInterfacesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkProtocols">
      <wsdl:documentation>This operation gets defined network protocols from a device. The device shall support the
				GetNetworkProtocols command returning configured network protocols.</wsdl:documentation>
      <wsdl:input message="tds:GetNetworkProtocolsRequest"/>
      <wsdl:output message="tds:GetNetworkProtocolsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkProtocols">
      <wsdl:documentation>This operation configures defined network protocols on a device. The device shall support
				configuration of defined network protocols through the SetNetworkProtocols command.</wsdl:documentation>
      <wsdl:input message="tds:SetNetworkProtocolsRequest"/>
      <wsdl:output message="tds:SetNetworkProtocolsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkDefaultGateway">
      <wsdl:documentation>This operation gets the default gateway settings from a device. The device shall support the
				GetNetworkDefaultGateway command returning configured default gateway address(es).</wsdl:documentation>
      <wsdl:input message="tds:GetNetworkDefaultGatewayRequest"/>
      <wsdl:output message="tds:GetNetworkDefaultGatewayResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkDefaultGateway">
      <wsdl:documentation>This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway command.</wsdl:documentation>
      <wsdl:input message="tds:SetNetworkDefaultGatewayRequest"/>
      <wsdl:output message="tds:SetNetworkDefaultGatewayResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetZeroConfiguration">
      <wsdl:documentation>
        This operation gets the zero-configuration from a device. If the device supports dynamic IP
				configuration according to [RFC3927], it shall support the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration command.
        <br/>
        Use GetCapalities to check if zero-zero-configuration is supported.
        <br/>
        Devices supporting zero configuration on more than one interface shall use the extension to list the additional interface settings.
      </wsdl:documentation>
      <wsdl:input message="tds:GetZeroConfigurationRequest"/>
      <wsdl:output message="tds:GetZeroConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetZeroConfiguration">
      <wsdl:documentation>This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration is supported or not.</wsdl:documentation>
      <wsdl:input message="tds:SetZeroConfigurationRequest"/>
      <wsdl:output message="tds:SetZeroConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetIPAddressFilter">
      <wsdl:documentation>This operation gets the IP address filter settings from a device. If the device supports device
				access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.</wsdl:documentation>
      <wsdl:input message="tds:GetIPAddressFilterRequest"/>
      <wsdl:output message="tds:GetIPAddressFilterResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetIPAddressFilter">
      <wsdl:documentation>This operation sets the IP address filter settings on a device. If the device supports device
				access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering rules through the SetIPAddressFilter
				command.</wsdl:documentation>
      <wsdl:input message="tds:SetIPAddressFilterRequest"/>
      <wsdl:output message="tds:SetIPAddressFilterResponse"/>
    </wsdl:operation>
    <wsdl:operation name="AddIPAddressFilter">
      <wsdl:documentation>This operation adds an IP filter address to a device. If the device supports device access
				control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
				shall support adding of IP filtering addresses through the AddIPAddressFilter command.</wsdl:documentation>
      <wsdl:input message="tds:AddIPAddressFilterRequest"/>
      <wsdl:output message="tds:AddIPAddressFilterResponse"/>
    </wsdl:operation>
    <wsdl:operation name="RemoveIPAddressFilter">
      <wsdl:documentation>This operation deletes an IP filter address from a device. If the device supports device access
				control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
				shall support deletion of IP filtering addresses through the RemoveIPAddressFilter command.</wsdl:documentation>
      <wsdl:input message="tds:RemoveIPAddressFilterRequest"/>
      <wsdl:output message="tds:RemoveIPAddressFilterResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetAccessPolicy">
      <wsdl:documentation>Access to different services and sub-sets of services should be subject to access control. The
				WS-Security framework gives the prerequisite for end-point authentication. Authorization
				decisions can then be taken using an access security policy. This standard does not mandate
				any particular policy description format or security policy but this is up to the device
				manufacturer or system provider to choose policy and policy description format of choice.
				However, an access policy (in arbitrary format) can be requested using this command. If the
				device supports access policy settings based on WS-Security authentication, then the device
				shall support this command.</wsdl:documentation>
      <wsdl:input message="tds:GetAccessPolicyRequest"/>
      <wsdl:output message="tds:GetAccessPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetAccessPolicy">
      <wsdl:documentation>This command sets the device access security policy (for more details on the access security
				policy see the Get command). If the device supports access policy settings
				based on WS-Security authentication, then the device shall support this command.</wsdl:documentation>
      <wsdl:input message="tds:SetAccessPolicyRequest"/>
      <wsdl:output message="tds:SetAccessPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="CreateCertificate">
      <wsdl:documentation>
        This operation generates a private/public key pair and also can create a self-signed device
				certificate as a result of key pair generation. The certificate is created using a suitable
				onboard key pair generation mechanism.
        <br/>
        If a device supports onboard key pair generation, the device that supports TLS shall support
				this certificate creation command. And also, if a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support this command for the purpose of key pair
				generation. Certificates and key pairs are identified using certificate IDs. These IDs are either
				chosen by the certificate generation requester or by the device (in case that no ID value is
				given).
      </wsdl:documentation>
      <wsdl:input message="tds:CreateCertificateRequest"/>
      <wsdl:output message="tds:CreateCertificateResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetCertificates">
      <wsdl:documentation>This operation gets all device server certificates (including self-signed) for the purpose of TLS
				authentication and all device client certificates for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted root certificates). The certificates are
				returned as binary data. A device that supports TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
				rules.</wsdl:documentation>
      <wsdl:input message="tds:GetCertificatesRequest"/>
      <wsdl:output message="tds:GetCertificatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetCertificatesStatus">
      <wsdl:documentation>This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates. A device that supports TLS shall
				support this command.</wsdl:documentation>
      <wsdl:input message="tds:GetCertificatesStatusRequest"/>
      <wsdl:output message="tds:GetCertificatesStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetCertificatesStatus">
      <wsdl:documentation>This operation is specific to TLS functionality. This operation sets the status (enable/disable)
				of the device TLS server certificates. A device that supports TLS shall support this command.
				Typically only one device server certificate is allowed to be enabled at a time.</wsdl:documentation>
      <wsdl:input message="tds:SetCertificatesStatusRequest"/>
      <wsdl:output message="tds:SetCertificatesStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteCertificates">
      <wsdl:documentation>This operation deletes a certificate or multiple certificates. The device MAY also delete a
				private/public key pair which is coupled with the certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support the deletion of a certificate or multiple
				certificates through this command. Either all certificates are deleted successfully or a fault
				message shall be returned without deleting any certificate.</wsdl:documentation>
      <wsdl:input message="tds:DeleteCertificatesRequest"/>
      <wsdl:output message="tds:DeleteCertificatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetPkcs10Request">
      <wsdl:documentation>
        This operation requests a PKCS #10 certificate signature request from the device. The
				returned information field shall be either formatted exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command to work, the device must already have
				a private/public key pair. This key pair should be referred by CertificateID as specified in the
				input parameter description. This CertificateID refers to the key pair generated using
				CreateCertificate command.
        <br/>
        A device that support onboard key pair generation that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.
      </wsdl:documentation>
      <wsdl:input message="tds:GetPkcs10RequestRequest"/>
      <wsdl:output message="tds:GetPkcs10RequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="LoadCertificates">
      <wsdl:documentation>
        TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the PKCS#10
				certificate request command can be loaded into the device using this command (see Section
				8.4.13). The certificate ID in the request shall be present. The device may sort the received
				certificate(s) based on the public key and subject information in the certificate(s).
				The certificate ID in the request will be the ID value the client wish to have. The device is
				supposed to scan the generated key pairs present in the device to identify which is the
				correspondent key pair with the loaded certificate and then make the link between the
				certificate and the key pair.
        <br/>
        A device that supports onboard key pair generation that support either TLS or IEEE 802.1X
				shall support this command.
        <br/>
        The certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
				rules.
        <br/>
        This command is applicable to any device type, although the parameter name is called for
				historical reasons NVTCertificate.
      </wsdl:documentation>
      <wsdl:input message="tds:LoadCertificatesRequest"/>
      <wsdl:output message="tds:LoadCertificatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetClientCertificateMode">
      <wsdl:documentation>This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication. A device that supports TLS shall
				support this command.</wsdl:documentation>
      <wsdl:input message="tds:GetClientCertificateModeRequest"/>
      <wsdl:output message="tds:GetClientCertificateModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetClientCertificateMode">
      <wsdl:documentation>This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication. A device that supports TLS shall
				support this command.</wsdl:documentation>
      <wsdl:input message="tds:SetClientCertificateModeRequest"/>
      <wsdl:output message="tds:SetClientCertificateModeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetRelayOutputs">
      <wsdl:documentation>
        This operation gets a list of all available relay outputs and their settings.
        <br/>
        This method has been depricated with version 2.0. Refer to the DeviceIO service.
      </wsdl:documentation>
      <wsdl:input message="tds:GetRelayOutputsRequest"/>
      <wsdl:output message="tds:GetRelayOutputsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetRelayOutputSettings">
      <wsdl:documentation>
        This operation sets the settings of a relay output.
        <br/>
        This method has been depricated with version 2.0. Refer to the DeviceIO service.
      </wsdl:documentation>
      <wsdl:input message="tds:SetRelayOutputSettingsRequest"/>
      <wsdl:output message="tds:SetRelayOutputSettingsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetRelayOutputState">
      <wsdl:documentation>
        This operation sets the state of a relay output.
        <br/>
        This method has been depricated with version 2.0. Refer to the DeviceIO service.
      </wsdl:documentation>
      <wsdl:input message="tds:SetRelayOutputStateRequest"/>
      <wsdl:output message="tds:SetRelayOutputStateResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SendAuxiliaryCommand">
      <wsdl:documentation>
        Manage auxiliary commands supported by a device, such as controlling an Infrared (IR) lamp, 
				a heater or a wiper or a thermometer that is connected to the device.
        <br/>
        The supported commands can be retrieved via the AuxiliaryCommands capability.
        <br/>
        Although the name of the auxiliary commands can be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and these reserved commands shall all share the "tt:command|parameter" syntax.
        <ul>
          <li>tt:Wiper|On – Request to start the wiper.</li>
          <li>tt:Wiper|Off – Request to stop the wiper.</li>
          <li>tt:Washer|On – Request to start the washer.</li>
          <li>tt:Washer|Off – Request to stop the washe.</li>
          <li>tt:WashingProcedue|On – Request to start the washing procedue.</li>
          <li>tt: WashingProcedue |Off – Request to stop the washing procedue.</li>
        </ul>
        A device that indicates auxiliary service capability shall support this command.
      </wsdl:documentation>
      <wsdl:input message="tds:SendAuxiliaryCommandRequest"/>
      <wsdl:output message="tds:SendAuxiliaryCommandResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetCACertificates">
      <wsdl:documentation>CA certificates will be loaded into a device and be used for the sake of following two cases.
				The one is for the purpose of TLS client authentication in TLS server function. The other one
				is for the purpose of Authentication Server authentication in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding rules.</wsdl:documentation>
      <wsdl:input message="tds:GetCACertificatesRequest"/>
      <wsdl:output message="tds:GetCACertificatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="LoadCertificateWithPrivateKey">
      <wsdl:documentation>
        There might be some cases that a Certificate Authority or some other equivalent creates a
				certificate without having PKCS#10 certificate signing request. In such cases, the certificate
				will be bundled in conjunction with its private key. This command will be used for such use
				case scenarios. The certificate ID in the request is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified in the request, device can choose the ID
				accordingly.
        <br/>
        This operation imports a private/public key pair into the device.
				The certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
				rules.
        <br/>
        A device that does not support onboard key pair generation and support either TLS or IEEE
				802.1X using client certificate shall support this command. A device that support onboard key
				pair generation MAY support this command. The security policy of a device that supports this
				operation should make sure that the private key is sufficiently protected.
      </wsdl:documentation>
      <wsdl:input message="tds:LoadCertificateWithPrivateKeyRequest"/>
      <wsdl:output message="tds:LoadCertificateWithPrivateKeyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetCertificateInformation">
      <wsdl:documentation>
        This operation requests the information of a certificate specified by certificate ID. The device
				should respond with its “Issuer DN”, “Subject DN”, “Key usage”, "Extended key usage”, “Key
				Length”, “Version”, “Serial Number”, “Signature Algorithm” and “Validity” data as the
				information of the certificate, as long as the device can retrieve such information from the
				specified certificate.
        <br/>
        A device that supports either TLS or IEEE 802.1X should support this command.
      </wsdl:documentation>
      <wsdl:input message="tds:GetCertificateInformationRequest"/>
      <wsdl:output message="tds:GetCertificateInformationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="LoadCACertificates">
      <wsdl:documentation>
        This command is used when it is necessary to load trusted CA certificates or trusted root
				certificates for the purpose of verification for its counterpart i.e. client certificate verification in
				TLS function or server certificate verification in IEEE 802.1X function.
        <br/>
        A device that support either TLS or IEEE 802.1X shall support this command. As for the
				supported certificate format, either DER format or PEM format is possible to be used. But a
				device that support this command shall support at least DER format as supported format type.
				The device may sort the received certificate(s) based on the public key and subject
				information in the certificate(s). Either all CA certificates are loaded successfully or a fault
				message shall be returned without loading any CA certificate.
      </wsdl:documentation>
      <wsdl:input message="tds:LoadCACertificatesRequest"/>
      <wsdl:output message="tds:LoadCACertificatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="CreateDot1XConfiguration">
      <wsdl:documentation>This operation newly creates IEEE 802.1X configuration parameter set of the device. The
				device shall support this command if it supports IEEE 802.1X. If the device receives this
				request with already existing configuration token (Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken ' error to indicate there is some configuration
				conflict.</wsdl:documentation>
      <wsdl:input message="tds:CreateDot1XConfigurationRequest"/>
      <wsdl:output message="tds:CreateDot1XConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="SetDot1XConfiguration">
      <wsdl:documentation>While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall support this command.</wsdl:documentation>
      <wsdl:input message="tds:SetDot1XConfigurationRequest"/>
      <wsdl:output message="tds:SetDot1XConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDot1XConfiguration">
      <wsdl:documentation>
        This operation gets one IEEE 802.1X configuration parameter set from the device by
				specifying the configuration token (Dot1XConfigurationToken).
        <br/>
        A device that supports IEEE 802.1X shall support this command.
				Regardless of whether the 802.1X method in the retrieved configuration has a password or
				not, the device shall not include the Password element in the response.
      </wsdl:documentation>
      <wsdl:input message="tds:GetDot1XConfigurationRequest"/>
      <wsdl:output message="tds:GetDot1XConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDot1XConfigurations">
      <wsdl:documentation>
        This operation gets all the existing IEEE 802.1X configuration parameter sets from the device.
				The device shall respond with all the IEEE 802.1X configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing and how they are configured.
        <br/>
        A device that support IEEE 802.1X shall support this command.
        <br/>
        Regardless of whether the 802.1X method in the retrieved configuration has a password or
				not, the device shall not include the Password element in the response.
      </wsdl:documentation>
      <wsdl:input message="tds:GetDot1XConfigurationsRequest"/>
      <wsdl:output message="tds:GetDot1XConfigurationsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteDot1XConfiguration">
      <wsdl:documentation>This operation deletes an IEEE 802.1X configuration parameter set from the device. Which
				configuration should be deleted is specified by the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support this command.</wsdl:documentation>
      <wsdl:input message="tds:DeleteDot1XConfigurationRequest"/>
      <wsdl:output message="tds:DeleteDot1XConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDot11Capabilities">
      <wsdl:documentation>This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.</wsdl:documentation>
      <wsdl:input message="tds:GetDot11CapabilitiesRequest"/>
      <wsdl:output message="tds:GetDot11CapabilitiesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetDot11Status">
      <wsdl:documentation>This operation returns the status of a wireless network interface. The device shall support this
				command.</wsdl:documentation>
      <wsdl:input message="tds:GetDot11StatusRequest"/>
      <wsdl:output message="tds:GetDot11StatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ScanAvailableDot11Networks">
      <wsdl:documentation>This operation returns a lists of the wireless networks in range of the device. A device should
				support this operation.</wsdl:documentation>
      <wsdl:input message="tds:ScanAvailableDot11NetworksRequest"/>
      <wsdl:output message="tds:ScanAvailableDot11NetworksResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetSystemUris">
      <wsdl:documentation>
        This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following system information:
        <br/>
        System Logs. Multiple system logs may be returned, of different types. The exact format of
				the system logs is outside the scope of this specification.
        <br/>
        Support Information. This consists of arbitrary device diagnostics information from a device.
				The exact format of the diagnostic information is outside the scope of this specification.
        <br/>
        System Backup. The received file is a backup file that can be used to restore the current
				device configuration at a later date. The exact format of the backup configuration file is
				outside the scope of this specification.
        <br/>
        If the device allows retrieval of system logs, support information or system backup data, it
				should make them available via HTTP GET. If it does, it shall support the GetSystemUris
				command.
      </wsdl:documentation>
      <wsdl:input message="tds:GetSystemUrisRequest"/>
      <wsdl:output message="tds:GetSystemUrisResponse"/>
    </wsdl:operation>
    <wsdl:operation name="StartFirmwareUpgrade">
      <wsdl:documentation>
        This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade command. The exact
				format of the firmware data is outside the scope of this specification.
				Firmware upgrade over HTTP may be achieved using the following steps:
        <ol>
          <li>Client calls StartFirmwareUpgrade.</li>
          <li>Server responds with upload URI and optional delay value.</li>
          <li>Client waits for delay duration if specified by server.</li>
          <li>Client transmits the firmware image to the upload URI using HTTP POST.</li>
          <li>Server reprograms itself using the uploaded image, then reboots.</li>
        </ol>
        If the firmware upgrade fails because the upgrade file was invalid, the HTTP POST response
				shall be “415 Unsupported Media Type”. If the firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be “500 Internal Server Error”.
        <br/>
        The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.
      </wsdl:documentation>
      <wsdl:input message="tds:StartFirmwareUpgradeRequest"/>
      <wsdl:output message="tds:StartFirmwareUpgradeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="StartSystemRestore">
      <wsdl:documentation>
        This operation initiates a system restore from backed up configuration data using the HTTP
				POST mechanism. The response to the command includes an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place as soon as the HTTP POST operation
				has completed. Devices should support system restore through the StartSystemRestore
				command. The exact format of the backup configuration data is outside the scope of this
				specification.
        <br/>
        System restore over HTTP may be achieved using the following steps:
        <ol>
          <li>Client calls StartSystemRestore.</li>
          <li>Server responds with upload URI.</li>
          <li>Client transmits the configuration data to the upload URI using HTTP POST.</li>
          <li>Server applies the uploaded configuration, then reboots if necessary.</li>
        </ol>
        If the system restore fails because the uploaded file was invalid, the HTTP POST response
				shall be “415 Unsupported Media Type”. If the system restore fails due to an error at the
				device, the HTTP POST response shall be “500 Internal Server Error”.
        <br/>
        The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.
      </wsdl:documentation>
      <wsdl:input message="tds:StartSystemRestoreRequest"/>
      <wsdl:output message="tds:StartSystemRestoreResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DeviceBinding" type="tds:Device">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetServices">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetServices"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetServiceCapabilities">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDeviceInformation">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetSystemDateAndTime">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemDateAndTime">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetSystemFactoryDefault">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpgradeSystemFirmware">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SystemReboot">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SystemReboot"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RestoreSystem">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RestoreSystem"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemBackup">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemLog">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemLog"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemSupportInformation">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScopes">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetScopes"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetScopes">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetScopes"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddScopes">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/AddScopes"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveScopes">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RemoveScopes"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDiscoveryMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDiscoveryMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRemoteDiscoveryMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRemoteDiscoveryMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDPAddresses">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEndpointReference">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRemoteUser">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRemoteUser">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetUsers"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateUsers">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateUsers"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteUsers">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteUsers"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetUser">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetUser"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetWsdlUrl">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCapabilities">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCapabilities"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDPAddresses">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHostname">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetHostname"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetHostname">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetHostname"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetHostnameFromDHCP">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDNS">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDNS"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDNS">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDNS"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNTP">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNTP"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetNTP">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNTP"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDynamicDNS">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDynamicDNS">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkInterfaces">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkInterfaces">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkProtocols">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkProtocols">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNetworkDefaultGateway">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetNetworkDefaultGateway">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetZeroConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetZeroConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIPAddressFilter">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetIPAddressFilter">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddIPAddressFilter">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveIPAddressFilter">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccessPolicy">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetAccessPolicy">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateCertificate">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateCertificate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCertificates">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCertificatesStatus">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetCertificatesStatus">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteCertificates">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPkcs10Request">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LoadCertificates">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCertificates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientCertificateMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetClientCertificateMode">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRelayOutputs">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRelayOutputSettings">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRelayOutputState">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendAuxiliaryCommand">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCACertificates">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCACertificates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LoadCertificateWithPrivateKey">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCertificateInformation">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LoadCACertificates">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDot1XConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDot1XConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDot1XConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDot1XConfigurations">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteDot1XConfiguration">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDot11Capabilities">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDot11Status">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot11Status"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ScanAvailableDot11Networks">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSystemUris">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemUris"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StartFirmwareUpgrade">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StartSystemRestore">
      <soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <!--===============================-->
  <!--===============================-->
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\D:\work\ver10\schema\onvif.xsd</con:url><con:content><![CDATA[<!--<?xml-stylesheet type="text/xsl" href="onvif-schema-viewer.xsl"?>-->
<!--Copyright (c) 2008-2012 by ONVIF: Open Network Video Interface Forum. All rights reserved.

Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.

THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.-->
<xs:schema targetNamespace="http://www.onvif.org/ver10/schema" elementFormDefault="qualified" version="2.4" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:xop="http://www.w3.org/2004/08/xop/include" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <xs:import namespace="http://www.w3.org/2005/05/xmlmime" schemaLocation="http://www.w3.org/2005/05/xmlmime"/>
  <xs:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="http://schemas.xmlsoap.org/soap/envelope/"/>
  <xs:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://docs.oasis-open.org/wsn/b-2.xsd"/>
  <xs:import namespace="http://www.w3.org/2004/08/xop/include" schemaLocation="http://www.w3.org/2004/08/xop/include"/>
  <!--===============================-->
  <!--Generic Types-->
  <!--===============================-->
  <xs:complexType name="DeviceEntity">
    <xs:annotation>
      <xs:documentation>Base class for physical entities like inputs and outputs.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="token" type="tt:ReferenceToken" use="required">
      <xs:annotation>
        <xs:documentation>Unique identifier referencing the physical entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ReferenceToken">
    <xs:annotation>
      <xs:documentation>Unique identifier for a physical or logical resource.
			Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
			Length up to 64 characters.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="64"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Name">
    <xs:annotation>
      <xs:documentation>User readable name. Length up to 64 characters.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="64"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="IntRectangle">
    <xs:annotation>
      <xs:documentation>Rectangle defined by lower left corner position and size. Units are pixel.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="x" type="xs:int" use="required"/>
    <xs:attribute name="y" type="xs:int" use="required"/>
    <xs:attribute name="width" type="xs:int" use="required"/>
    <xs:attribute name="height" type="xs:int" use="required"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IntRectangleRange">
    <xs:annotation>
      <xs:documentation>Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="XRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Range of X-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="YRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Range of Y-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WidthRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Range of width.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HeightRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Range of height.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IntRange">
    <xs:annotation>
      <xs:documentation>Range of values greater equal Min value and less equal Max value.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Min" type="xs:int"/>
      <xs:element name="Max" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FloatRange">
    <xs:annotation>
      <xs:documentation>Range of values greater equal Min value and less equal Max value.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Min" type="xs:float"/>
      <xs:element name="Max" type="xs:float"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DurationRange">
    <xs:annotation>
      <xs:documentation>Range of duration greater equal Min duration and less equal Max duration.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Min" type="xs:duration"/>
      <xs:element name="Max" type="xs:duration"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IntList">
    <xs:annotation>
      <xs:documentation>List of values.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Items" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="IntAttrList">
    <xs:list itemType="xs:int"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="FloatAttrList">
    <xs:list itemType="xs:float"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="StringAttrList">
    <xs:list itemType="xs:string"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="FloatList">
    <xs:sequence>
      <xs:element name="Items" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnyHolder">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Generic Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Media Related Types-->
  <!--===============================-->
  <xs:complexType name="VideoSource">
    <xs:annotation>
      <xs:documentation>Representation of a physical video input.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Framerate" type="xs:float">
            <xs:annotation>
              <xs:documentation>Frame rate in frames per second.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resolution" type="tt:VideoResolution">
            <xs:annotation>
              <xs:documentation>Horizontal and vertical resolution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Imaging" type="tt:ImagingSettings" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Optional configuration of the image sensor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:VideoSourceExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Imaging" type="tt:ImagingSettings20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoSourceExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioSource">
    <xs:annotation>
      <xs:documentation>Representation of a physical audio input.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Channels" type="xs:int">
            <xs:annotation>
              <xs:documentation>number of available audio channels. (1: mono, 2: stereo)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Profile">
    <xs:annotation>
      <xs:documentation>
        A media profile consists of a set of media configurations. Media profiles are used by a client
			to configure properties of a media stream from an NVT.
        <br/>
        An NVT shall provide at least one media profile at boot. An NVT should provide “ready to use”
			profiles for the most common media configurations that the device offers.
        <br/>
        A profile consists of a set of interconnected configuration entities. Configurations are provided
			by the NVT and can be either static or created dynamically by the NVT. For example, the
			dynamic configurations can be created by the NVT depending on current available encoding
			resources.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="tt:Name">
        <xs:annotation>
          <xs:documentation>User readable name of the profile.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoSourceConfiguration" type="tt:VideoSourceConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Video input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioSourceConfiguration" type="tt:AudioSourceConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Audio input.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoEncoderConfiguration" type="tt:VideoEncoderConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Video encoder.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Audio encoder.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the video analytics module and rule engine.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PTZConfiguration" type="tt:PTZConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the pan tilt zoom unit.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MetadataConfiguration" type="tt:MetadataConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the metadata stream.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ProfileExtension" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Extensions defined in ONVIF 2.0</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="token" type="tt:ReferenceToken" use="required">
      <xs:annotation>
        <xs:documentation>Unique identifier of the profile.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fixed" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>A value of true signals that the profile cannot be deleted. Default is false.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ProfileExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="AudioOutputConfiguration" type="tt:AudioOutputConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Audio output.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioDecoderConfiguration" type="tt:AudioDecoderConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional configuration of the Audio decoder.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ProfileExtension2" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ProfileExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:element name="VideoSourceConfiguration" type="tt:VideoSourceConfiguration"/>
  <xs:element name="AudioSourceConfiguration" type="tt:AudioSourceConfiguration"/>
  <xs:element name="VideoEncoderConfiguration" type="tt:VideoEncoderConfiguration"/>
  <xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration"/>
  <xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration"/>
  <xs:element name="PTZConfiguration" type="tt:PTZConfiguration"/>
  <xs:element name="MetadataConfiguration" type="tt:MetadataConfiguration"/>
  <xs:element name="AudioOutputConfiguration" type="tt:AudioOutputConfiguration"/>
  <xs:element name="AudioDecoderConfiguration" type="tt:AudioDecoderConfiguration"/>
  <!--===============================-->
  <xs:complexType name="ConfigurationEntity">
    <xs:annotation>
      <xs:documentation>Base type defining the common properties of a configuration.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="tt:Name">
        <xs:annotation>
          <xs:documentation>User readable name. Length up to 64 characters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UseCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>
            Number of internal references currently using this configuration.
            <br/>
            This parameter is read-only and cannot be changed by a set request.
            <br/>
            For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="token" type="tt:ReferenceToken" use="required">
      <xs:annotation>
        <xs:documentation>Token that uniquely refernces this configuration. Length up to 64 characters.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--===============================-->
  <!--VideoSourceConfiguration-->
  <!--===============================-->
  <xs:complexType name="VideoSourceConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="SourceToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Reference to the physical input.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Bounds" type="tt:IntRectangle">
            <xs:annotation>
              <xs:documentation>Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="Extension" type="tt:VideoSourceConfigurationExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceConfigurationExtension">
    <xs:sequence>
      <xs:element name="Rotate" type="tt:Rotate" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to configure rotation of captured image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoSourceConfigurationExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceConfigurationExtension2">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Rotate">
    <xs:sequence>
      <xs:element name="Mode" type="tt:RotateMode">
        <xs:annotation>
          <xs:documentation>Parameter to enable/disable Rotation feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Degree" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to configure how much degree of clockwise rotation of image  for On mode. Omitting this parameter for On mode means 180 degree rotation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RotateExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RotateExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="RotateMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="ON"/>
      <xs:enumeration value="AUTO"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="VideoSourceConfigurationOptions">
    <xs:sequence>
      <xs:element name="BoundsRange" type="tt:IntRectangleRange">
        <xs:annotation>
          <xs:documentation>Supported range for the capturing area.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoSourceTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of physical inputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoSourceConfigurationOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceConfigurationOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Rotate" type="tt:RotateOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Options of parameters for Rotation feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoSourceConfigurationOptionsExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoSourceConfigurationOptionsExtension2">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RotateOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:RotateMode" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Supported options of Rotate mode parameter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DegreeList" type="tt:IntList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of supported degree value for rotation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RotateOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RotateOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--VideoEncoderConfiguration-->
  <!--===============================-->
  <xs:complexType name="VideoEncoderConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="Encoding" type="tt:VideoEncoding">
            <xs:annotation>
              <xs:documentation>Used video codec, either Jpeg, H.264 or Mpeg4</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resolution" type="tt:VideoResolution">
            <xs:annotation>
              <xs:documentation>Configured video resolution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Quality" type="xs:float">
            <xs:annotation>
              <xs:documentation>Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RateControl" type="tt:VideoRateControl" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Optional element to configure rate control related parameters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MPEG4" type="tt:Mpeg4Configuration" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Optional element to configure Mpeg4 related parameters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="H264" type="tt:H264Configuration" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Optional element to configure H.264 related parameters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Multicast" type="tt:MulticastConfiguration">
            <xs:annotation>
              <xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SessionTimeout" type="xs:duration">
            <xs:annotation>
              <xs:documentation>The rtsp session timeout for the related video stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="VideoEncoding">
    <xs:restriction base="xs:string">
      <xs:enumeration value="JPEG"/>
      <xs:enumeration value="MPEG4"/>
      <xs:enumeration value="H264"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Mpeg4Profile">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SP"/>
      <xs:enumeration value="ASP"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="H264Profile">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Baseline"/>
      <xs:enumeration value="Main"/>
      <xs:enumeration value="Extended"/>
      <xs:enumeration value="High"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="VideoResolution">
    <xs:sequence>
      <xs:element name="Width" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of the columns of the Video image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Height" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of the lines of the Video image.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoRateControl">
    <xs:sequence>
      <xs:element name="FrameRateLimit" type="xs:int">
        <xs:annotation>
          <xs:documentation>Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EncodingInterval" type="xs:int">
        <xs:annotation>
          <xs:documentation>Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BitrateLimit" type="xs:int">
        <xs:annotation>
          <xs:documentation>the maximum output bitrate in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Mpeg4Configuration">
    <xs:sequence>
      <xs:element name="GovLength" type="xs:int">
        <xs:annotation>
          <xs:documentation>Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Mpeg4Profile" type="tt:Mpeg4Profile">
        <xs:annotation>
          <xs:documentation>the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="H264Configuration">
    <xs:sequence>
      <xs:element name="GovLength" type="xs:int">
        <xs:annotation>
          <xs:documentation>Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="H264Profile" type="tt:H264Profile">
        <xs:annotation>
          <xs:documentation>the H.264 profile, either baseline, main, extended or high</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoEncoderConfigurationOptions">
    <xs:sequence>
      <xs:element name="QualityRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Range of the quality values. A high value means higher quality.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="JPEG" type="tt:JpegOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional JPEG encoder settings ranges (See also Extension element).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MPEG4" type="tt:Mpeg4Options" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional MPEG-4 encoder settings ranges (See also Extension element).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="H264" type="tt:H264Options" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional H.264 encoder settings ranges (See also Extension element).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoEncoderOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoEncoderOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="JPEG" type="tt:JpegOptions2" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional JPEG encoder settings ranges.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MPEG4" type="tt:Mpeg4Options2" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional MPEG-4 encoder settings ranges.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="H264" type="tt:H264Options2" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional H.264 encoder settings ranges.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoEncoderOptionsExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoEncoderOptionsExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="JpegOptions">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported image sizes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FrameRateRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EncodingIntervalRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="JpegOptions2">
    <xs:complexContent>
      <xs:extension base="tt:JpegOptions">
        <xs:sequence>
          <xs:element name="BitrateRange" type="tt:IntRange">
            <xs:annotation>
              <xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Mpeg4Options">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported image sizes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GovLengthRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported group of Video frames length. This value typically corresponds to the I-Frame distance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FrameRateRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EncodingIntervalRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Mpeg4ProfilesSupported" type="tt:Mpeg4Profile" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported MPEG-4 profiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Mpeg4Options2">
    <xs:complexContent>
      <xs:extension base="tt:Mpeg4Options">
        <xs:sequence>
          <xs:element name="BitrateRange" type="tt:IntRange">
            <xs:annotation>
              <xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="H264Options">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported image sizes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GovLengthRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported group of Video frames length. This value typically corresponds to the I-Frame distance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FrameRateRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EncodingIntervalRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="H264ProfilesSupported" type="tt:H264Profile" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported H.264 profiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="H264Options2">
    <xs:complexContent>
      <xs:extension base="tt:H264Options">
        <xs:sequence>
          <xs:element name="BitrateRange" type="tt:IntRange">
            <xs:annotation>
              <xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--AudioSourceConfiguration-->
  <!--===============================-->
  <xs:complexType name="AudioSourceConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="SourceToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Token of the Audio Source the configuration applies to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioSourceConfigurationOptions">
    <xs:sequence>
      <xs:element name="InputTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Tokens of the audio source the configuration can be used for.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:AudioSourceOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioSourceOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--AudioEncoderConfiguration-->
  <!--===============================-->
  <xs:complexType name="AudioEncoderConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="Encoding" type="tt:AudioEncoding">
            <xs:annotation>
              <xs:documentation>Audio codec used for encoding the audio input (either G.711, G.726 or AAC)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Bitrate" type="xs:int">
            <xs:annotation>
              <xs:documentation>The output bitrate in kbps.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SampleRate" type="xs:int">
            <xs:annotation>
              <xs:documentation>The output sample rate in kHz.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Multicast" type="tt:MulticastConfiguration">
            <xs:annotation>
              <xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SessionTimeout" type="xs:duration">
            <xs:annotation>
              <xs:documentation>The rtsp session timeout for the related audio stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="AudioEncoding">
    <xs:restriction base="xs:string">
      <xs:enumeration value="G711"/>
      <xs:enumeration value="G726"/>
      <xs:enumeration value="AAC"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="AudioEncoderConfigurationOptions">
    <xs:sequence>
      <xs:element name="Options" type="tt:AudioEncoderConfigurationOption" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>list of supported AudioEncoderConfigurations</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioEncoderConfigurationOption">
    <xs:sequence>
      <xs:element name="Encoding" type="tt:AudioEncoding">
        <xs:annotation>
          <xs:documentation>The enoding used for audio data (either G.711, G.726 or AAC)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BitrateList" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported bitrates in kbps for the specified Encoding</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SampleRateList" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported Sample Rates in kHz for the specified Encoding</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--VideoAnalyticsConfiguration-->
  <!--===============================-->
  <xs:complexType name="VideoAnalyticsConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsEngineConfiguration"/>
          <xs:element name="RuleEngineConfiguration" type="tt:RuleEngineConfiguration"/>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--MetadataConfiguration-->
  <!--===============================-->
  <xs:complexType name="MetadataConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="PTZStatus" type="tt:PTZFilter" minOccurs="0">
            <xs:annotation>
              <xs:documentation>optional element to configure which PTZ related data is to include in the metadata stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Events" type="tt:EventSubscription" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                Optional element to configure the streaming of events. A client might be interested in receiving all, 
								none or some of the events produced by the device:
                <ul>
                  <li>To get all events: Include the Events element but do not include a filter.</li>
                  <li>To get no events: Do not include the Events element.</li>
                  <li>To get only some events: Include the Events element and include a filter in the element.</li>
                </ul>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Analytics" type="xs:boolean" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Defines if data to include from the analytics engine part shall be included in the stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Multicast" type="tt:MulticastConfiguration">
            <xs:annotation>
              <xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SessionTimeout" type="xs:duration">
            <xs:annotation>
              <xs:documentation>The rtsp session timeout for the related audio stream</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsEngineConfiguration" minOccurs="0"/>
          <xs:element name="Extension" type="tt:MetadataConfigurationExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZFilter">
    <xs:sequence>
      <xs:element name="Status" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Position" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>True if the metadata stream shall contain the PTZ position</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EventSubscription">
    <xs:annotation>
      <xs:documentation>Subcription handling in the same way as base notification subscription.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Filter" type="wsnt:FilterType" minOccurs="0"/>
      <xs:element name="SubscriptionPolicy" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataConfigurationOptions">
    <xs:sequence>
      <xs:element name="PTZStatusFilterOptions" type="tt:PTZStatusFilterOptions"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZStatusFilterOptions">
    <xs:sequence>
      <xs:element name="PanTiltStatusSupported" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>True if the device is able to stream pan or tilt status information.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZoomStatusSupported" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>True if the device is able to stream zoom status inforamtion.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PanTiltPositionSupported" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>True if the device is able to stream the pan or tilt position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZoomPositionSupported" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>True if the device is able to stream zoom position information.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZStatusFilterOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZStatusFilterOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--VideoOutput-->
  <!--===============================-->
  <xs:complexType name="VideoOutput">
    <xs:annotation>
      <xs:documentation>Representation of a physical video outputs.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Layout" type="tt:Layout"/>
          <xs:element name="Resolution" type="tt:VideoResolution" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Resolution of the display in Pixel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefreshRate" type="xs:float" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Refresh rate of the display in Hertz.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AspectRatio" type="xs:float" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Aspect ratio of the display as physical extent of width divided by height.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:VideoOutputExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoOutputExtension">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--VideoOutputConfiguration-->
  <!--===============================-->
  <xs:complexType name="VideoOutputConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="OutputToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Token of the Video Output the configuration applies to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--VideoOutputConfigurationOptions-->
  <!--===============================-->
  <xs:complexType name="VideoOutputConfigurationOptions">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--VideoDecoderConfigurationOptions-->
  <!--===============================-->
  <xs:complexType name="VideoDecoderConfigurationOptions">
    <xs:sequence>
      <xs:element name="JpegDecOptions" type="tt:JpegDecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode Jpeg streams this element describes the supported codecs and configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="H264DecOptions" type="tt:H264DecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode H.264 streams this element describes the supported codecs and configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Mpeg4DecOptions" type="tt:Mpeg4DecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:VideoDecoderConfigurationOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="H264DecOptions">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported H.264 Video Resolutions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedH264Profiles" type="tt:H264Profile" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported H264 Profiles (either baseline, main, extended or high)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedInputBitrate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported H.264 bitrate range in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedFrameRate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported H.264 framerate range in fps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="JpegDecOptions">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported Jpeg Video Resolutions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedInputBitrate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported Jpeg bitrate range in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedFrameRate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported Jpeg framerate range in fps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Mpeg4DecOptions">
    <xs:sequence>
      <xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported Mpeg4 Video Resolutions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedMpeg4Profiles" type="tt:Mpeg4Profile" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported Mpeg4 Profiles (either SP or ASP)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedInputBitrate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported Mpeg4 bitrate range in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedFrameRate" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Supported Mpeg4 framerate range in fps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoDecoderConfigurationOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--AudioOutputs-->
  <!--===============================-->
  <xs:complexType name="AudioOutput">
    <xs:annotation>
      <xs:documentation>Representation of a physical audio outputs.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--AudioOutputConfiguration-->
  <!--===============================-->
  <xs:complexType name="AudioOutputConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="OutputToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Token of the phsycial Audio output.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SendPrimacy" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                An audio channel MAY support different types of audio transmission. While for full duplex
						operation no special handling is required, in half duplex operation the transmission direction
						needs to be switched.
						The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
						direction is currently active. An NVC can switch between different modes by setting the
						AudioOutputConfiguration.
                <br/>
                The following modes for the Send-Primacy are defined:
                <ul>
                  <li>www.onvif.org/ver20/HalfDuplex/Server
						The server is allowed to send audio data to the client. The client shall not send
						audio data via the backchannel to the NVT in this mode.</li>
                  <li>www.onvif.org/ver20/HalfDuplex/Client
						The client is allowed to send audio data via the backchannel to the server. The
						NVT shall not send audio data to the client in this mode.</li>
                  <li>www.onvif.org/ver20/HalfDuplex/Auto
							It is up to the device how to deal with sending and receiving audio data.</li>
                </ul>
                Acoustic echo cancellation is out of ONVIF scope.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OutputLevel" type="xs:int">
            <xs:annotation>
              <xs:documentation>Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--AudioOutputConfigurationOptions-->
  <!--===============================-->
  <xs:complexType name="AudioOutputConfigurationOptions">
    <xs:sequence>
      <xs:element name="OutputTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Tokens of the physical Audio outputs (typically one).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SendPrimacyOptions" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            An
            <b>audio</b>
            channel MAY support different types of audio transmission. While for full duplex
				operation no special handling is required, in half duplex operation the transmission direction
				needs to be switched.
				The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
				direction is currently active. An NVC can switch between different modes by setting the
				AudioOutputConfiguration.
            <br/>
            The following modes for the Send-Primacy are defined:
            <ul>
              <li>www.onvif.org/ver20/HalfDuplex/Server
						The server is allowed to send audio data to the client. The client shall not send
						audio data via the backchannel to the NVT in this mode.</li>
              <li>www.onvif.org/ver20/HalfDuplex/Client
						The client is allowed to send audio data via the backchannel to the server. The
						NVT shall not send audio data to the client in this mode.</li>
              <li>www.onvif.org/ver20/HalfDuplex/Auto
						It is up to the device how to deal with sending and receiving audio data.</li>
            </ul>
            Acoustic echo cancellation is out of ONVIF scope.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OutputLevelRange" type="tt:IntRange">
        <xs:annotation>
          <xs:documentation>Minimum and maximum level range supported for this Output.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--AudioDecoderConfiguration-->
  <!--===============================-->
  <xs:complexType name="AudioDecoderConfiguration">
    <xs:annotation>
      <xs:documentation>The Audio Decoder Configuration does not contain any that parameter to configure the
decoding .A decoder shall decode every data it receives (according to its capabilities).</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--AudioDecoderConfigurationOptions-->
  <!--===============================-->
  <xs:complexType name="AudioDecoderConfigurationOptions">
    <xs:sequence>
      <xs:element name="AACDecOptions" type="tt:AACDecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode AAC encoded audio this section describes the supported configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="G711DecOptions" type="tt:G711DecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode G711 encoded audio this section describes the supported configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="G726DecOptions" type="tt:G726DecOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device is able to decode G726 encoded audio this section describes the supported configurations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:AudioDecoderConfigurationOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="G711DecOptions">
    <xs:sequence>
      <xs:element name="Bitrate" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported bitrates in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SampleRateRange" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported sample rates in kHz</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AACDecOptions">
    <xs:sequence>
      <xs:element name="Bitrate" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported bitrates in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SampleRateRange" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported sample rates in kHz</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="G726DecOptions">
    <xs:sequence>
      <xs:element name="Bitrate" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported bitrates in kbps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SampleRateRange" type="tt:IntList">
        <xs:annotation>
          <xs:documentation>List of supported sample rates in kHz</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioDecoderConfigurationOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--Streaming-->
  <!--===============================-->
  <xs:complexType name="MulticastConfiguration">
    <xs:sequence>
      <xs:element name="Address" type="tt:IPAddress">
        <xs:annotation>
          <xs:documentation>The multicast address (if this address is set to 0 no multicast streaming is enaled)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Port" type="xs:int">
        <xs:annotation>
          <xs:documentation>The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TTL" type="xs:int">
        <xs:annotation>
          <xs:documentation>In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AutoStart" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="StreamSetup">
    <xs:sequence>
      <xs:element name="Stream" type="tt:StreamType">
        <xs:annotation>
          <xs:documentation>Defines if a multicast or unicast stream is requested</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Transport" type="tt:Transport"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="StreamType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RTP-Unicast"/>
      <xs:enumeration value="RTP-Multicast"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Transport">
    <xs:sequence>
      <xs:element name="Protocol" type="tt:TransportProtocol">
        <xs:annotation>
          <xs:documentation>Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tunnel" type="tt:Transport" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to describe further tunnel options. This element is normally not needed</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="TransportProtocol">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UDP"/>
      <xs:enumeration value="TCP"/>
      <xs:enumeration value="RTSP"/>
      <xs:enumeration value="HTTP"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="MediaUri">
    <xs:sequence>
      <xs:element name="Uri" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Stable Uri to be used for requesting the media stream</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InvalidAfterConnect" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InvalidAfterReboot" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Timeout" type="xs:duration">
        <xs:annotation>
          <xs:documentation>Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Media Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Discovery Related Types-->
  <!--===============================-->
  <xs:simpleType name="ScopeDefinition">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Fixed"/>
      <xs:enumeration value="Configurable"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Scope">
    <xs:sequence>
      <xs:element name="ScopeDef" type="tt:ScopeDefinition">
        <xs:annotation>
          <xs:documentation>Indicates if the scope is fixed or configurable.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ScopeItem" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Scope item URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="DiscoveryMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Discoverable"/>
      <xs:enumeration value="NonDiscoverable"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <!--End, Discovery Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Network Related Types-->
  <!--===============================-->
  <xs:complexType name="NetworkInterface">
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Enabled" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not an interface is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Info" type="tt:NetworkInterfaceInfo" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Network interface information</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Link" type="tt:NetworkInterfaceLink" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Link configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="IPv4" type="tt:IPv4NetworkInterface" minOccurs="0">
            <xs:annotation>
              <xs:documentation>IPv4 network interface configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="IPv6" type="tt:IPv6NetworkInterface" minOccurs="0">
            <xs:annotation>
              <xs:documentation>IPv6 network interface configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:NetworkInterfaceExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="InterfaceType" type="tt:IANA-IfTypes"/>
      <xs:element name="Dot3" type="tt:Dot3Configuration" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Extension point prepared for future 802.3 configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Dot11" type="tt:Dot11Configuration" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:NetworkInterfaceExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="NetworkInterfaceConfigPriority">
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="31"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Dot3Configuration">
    <xs:sequence>
      <!--Placeholder for 802.3 configuration-->
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceLink">
    <xs:sequence>
      <xs:element name="AdminSettings" type="tt:NetworkInterfaceConnectionSetting">
        <xs:annotation>
          <xs:documentation>Configured link settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OperSettings" type="tt:NetworkInterfaceConnectionSetting">
        <xs:annotation>
          <xs:documentation>Current active link settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InterfaceType" type="tt:IANA-IfTypes">
        <xs:annotation>
          <xs:documentation>Integer indicating interface type, for example: 6 is ethernet.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceConnectionSetting">
    <xs:sequence>
      <xs:element name="AutoNegotiation" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Auto negotiation on/off.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="xs:int">
        <xs:annotation>
          <xs:documentation>Speed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Duplex" type="tt:Duplex">
        <xs:annotation>
          <xs:documentation>Duplex type, Half or Full.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Duplex">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Full"/>
      <xs:enumeration value="Half"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="IANA-IfTypes">
    <xs:restriction base="xs:int">
      <xs:annotation>
        <xs:documentation>For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.</xs:documentation>
      </xs:annotation>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceInfo">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Network interface name, for example eth0.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HwAddress" type="tt:HwAddress">
        <xs:annotation>
          <xs:documentation>Network interface MAC address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MTU" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Maximum transmission unit.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv6NetworkInterface">
    <xs:sequence>
      <xs:element name="Enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IPv6 is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Config" type="tt:IPv6Configuration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv6 configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv4NetworkInterface">
    <xs:sequence>
      <xs:element name="Enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IPv4 is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Config" type="tt:IPv4Configuration">
        <xs:annotation>
          <xs:documentation>IPv4 configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv4Configuration">
    <xs:sequence>
      <xs:element name="Manual" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually added IPv4 addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LinkLocal" type="tt:PrefixedIPv4Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Link local address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FromDHCP" type="tt:PrefixedIPv4Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv4 address configured by using DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DHCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not DHCP is used.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv6Configuration">
    <xs:sequence>
      <xs:element name="AcceptRouterAdvert" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether router advertisment is used.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DHCP" type="tt:IPv6DHCPConfiguration">
        <xs:annotation>
          <xs:documentation>DHCP configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Manual" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually entered IPv6 addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LinkLocal" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of link local IPv6 addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FromDHCP" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of IPv6 addresses configured by using DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FromRA" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of IPv6 addresses configured by using router advertisment.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:IPv6ConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv6ConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="IPv6DHCPConfiguration">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Auto"/>
      <xs:enumeration value="Stateful"/>
      <xs:enumeration value="Stateless"/>
      <xs:enumeration value="Off"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="NetworkProtocol">
    <xs:sequence>
      <xs:element name="Name" type="tt:NetworkProtocolType">
        <xs:annotation>
          <xs:documentation>Network protocol type string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates if the protocol is enabled or not.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Port" type="xs:int" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The port that is used by the protocol.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkProtocolExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkProtocolExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="NetworkProtocolType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HTTP"/>
      <xs:enumeration value="HTTPS"/>
      <xs:enumeration value="RTSP"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="NetworkHostType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IPv4"/>
      <xs:enumeration value="IPv6"/>
      <xs:enumeration value="DNS"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="NetworkHost">
    <xs:sequence>
      <xs:element name="Type" type="tt:NetworkHostType">
        <xs:annotation>
          <xs:documentation>Network host type: IPv4, IPv6 or DNS.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv4 address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv6 address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DNSname" type="tt:DNSName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>DNS name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkHostExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkHostExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPAddress">
    <xs:sequence>
      <xs:element name="Type" type="tt:IPType">
        <xs:annotation>
          <xs:documentation>Indicates if the address is an IPv4 or IPv6 address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv4 address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv6 address</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PrefixedIPv4Address">
    <xs:sequence>
      <xs:element name="Address" type="tt:IPv4Address">
        <xs:annotation>
          <xs:documentation>IPv4 address</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PrefixLength" type="xs:int">
        <xs:annotation>
          <xs:documentation>Prefix/submask length</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="IPv4Address">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="PrefixedIPv6Address">
    <xs:sequence>
      <xs:element name="Address" type="tt:IPv6Address">
        <xs:annotation>
          <xs:documentation>IPv6 address</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PrefixLength" type="xs:int">
        <xs:annotation>
          <xs:documentation>Prefix/submask length</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="IPv6Address">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="HwAddress">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="IPType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IPv4"/>
      <xs:enumeration value="IPv6"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="DNSName">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="HostnameInformation">
    <xs:sequence>
      <xs:element name="FromDHCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the hostname is obtained from DHCP or not.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name" type="xs:token" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates the hostname.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:HostnameInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="HostnameInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DNSInformation">
    <xs:sequence>
      <xs:element name="FromDHCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not DNS information is retrieved from DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SearchDomain" type="xs:token" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Search domain.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DNSFromDHCP" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of DNS addresses received from DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DNSManual" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually entered DNS addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:DNSInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DNSInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NTPInformation">
    <xs:sequence>
      <xs:element name="FromDHCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates if NTP information is to be retrieved by using DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NTPFromDHCP" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of NTP addresses retrieved by using DHCP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NTPManual" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually entered NTP addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NTPInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NTPInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Domain">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="IPAddressFilterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Allow"/>
      <xs:enumeration value="Deny"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="DynamicDNSInformation">
    <xs:sequence>
      <xs:element name="Type" type="tt:DynamicDNSType">
        <xs:annotation>
          <xs:documentation>Dynamic DNS type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name" type="tt:DNSName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>DNS name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TTL" type="xs:duration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Time to live.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:DynamicDNSInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DynamicDNSInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="DynamicDNSType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NoUpdate"/>
      <xs:enumeration value="ClientUpdates"/>
      <xs:enumeration value="ServerUpdates"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceSetConfiguration">
    <xs:sequence>
      <xs:element name="Enabled" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not an interface is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Link" type="tt:NetworkInterfaceConnectionSetting" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Link configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MTU" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Maximum transmission unit.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv4" type="tt:IPv4NetworkInterfaceSetConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv4 network interface configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv6" type="tt:IPv6NetworkInterfaceSetConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>IPv6 network interface configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkInterfaceSetConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceSetConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Dot3" type="tt:Dot3Configuration" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Dot11" type="tt:Dot11Configuration" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:NetworkInterfaceSetConfigurationExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv6NetworkInterfaceSetConfiguration">
    <xs:sequence>
      <xs:element name="Enabled" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IPv6 is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AcceptRouterAdvert" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether router advertisment is used.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Manual" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually added IPv6 addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DHCP" type="tt:IPv6DHCPConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>DHCP configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPv4NetworkInterfaceSetConfiguration">
    <xs:sequence>
      <xs:element name="Enabled" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IPv4 is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Manual" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of manually added IPv4 addresses.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DHCP" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not DHCP is used.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkGateway">
    <xs:sequence>
      <xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>IPv4 address string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>IPv6 address string.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkZeroConfiguration">
    <xs:sequence>
      <xs:element name="InterfaceToken" type="tt:ReferenceToken">
        <xs:annotation>
          <xs:documentation>Unique identifier of network interface.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the zero-configuration is enabled or not.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Addresses" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The zero-configuration IPv4 address(es)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkZeroConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkZeroConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Additional" type="tt:NetworkZeroConfiguration" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Optional array holding the configuration for the second and possibly further interfaces.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkZeroConfigurationExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkZeroConfigurationExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPAddressFilter">
    <xs:sequence>
      <xs:element name="Type" type="tt:IPAddressFilterType"/>
      <xs:element name="IPv4Address" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="IPv6Address" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:IPAddressFilterExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IPAddressFilterExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot11Configuration">
    <xs:sequence>
      <xs:element name="SSID" type="tt:Dot11SSIDType"/>
      <xs:element name="Mode" type="tt:Dot11StationMode"/>
      <xs:element name="Alias" type="tt:Name"/>
      <xs:element name="Priority" type="tt:NetworkInterfaceConfigPriority"/>
      <xs:element name="Security" type="tt:Dot11SecurityConfiguration"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Dot11SSIDType">
    <xs:restriction base="xs:hexBinary">
      <xs:minLength value="1"/>
      <xs:maxLength value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Dot11StationMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ad-hoc"/>
      <xs:enumeration value="Infrastructure"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Dot11SecurityConfiguration">
    <xs:sequence>
      <xs:element name="Mode" type="tt:Dot11SecurityMode"/>
      <xs:element name="Algorithm" type="tt:Dot11Cipher" minOccurs="0"/>
      <xs:element name="PSK" type="tt:Dot11PSKSet" minOccurs="0"/>
      <xs:element name="Dot1X" type="tt:ReferenceToken" minOccurs="0"/>
      <xs:element name="Extension" type="tt:Dot11SecurityConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot11SecurityConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Dot11SecurityMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="WEP"/>
      <xs:enumeration value="PSK"/>
      <xs:enumeration value="Dot1X"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Dot11Cipher">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CCMP"/>
      <xs:enumeration value="TKIP"/>
      <xs:enumeration value="Any"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Dot11PSK">
    <xs:restriction base="xs:hexBinary">
      <xs:length value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Dot11PSKPassphrase">
    <xs:restriction base="xs:string">
      <xs:pattern value="[ -~]{8,63}"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Dot11PSKSet">
    <xs:sequence>
      <xs:element name="Key" type="tt:Dot11PSK" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex
            <br/>
            Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Passphrase" type="tt:Dot11PSKPassphrase" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
					each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.
            <br/>
            If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:Dot11PSKSetExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot11PSKSetExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkInterfaceSetConfigurationExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot11Capabilities">
    <xs:sequence>
      <xs:element name="TKIP" type="xs:boolean"/>
      <xs:element name="ScanAvailableNetworks" type="xs:boolean"/>
      <xs:element name="MultipleConfiguration" type="xs:boolean"/>
      <xs:element name="AdHocStationMode" type="xs:boolean"/>
      <xs:element name="WEP" type="xs:boolean"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Dot11SignalStrength">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Very Bad"/>
      <xs:enumeration value="Bad"/>
      <xs:enumeration value="Good"/>
      <xs:enumeration value="Very Good"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Dot11Status">
    <xs:sequence>
      <xs:element name="SSID" type="tt:Dot11SSIDType"/>
      <xs:element name="BSSID" type="xs:string" minOccurs="0"/>
      <xs:element name="PairCipher" type="tt:Dot11Cipher" minOccurs="0"/>
      <xs:element name="GroupCipher" type="tt:Dot11Cipher" minOccurs="0"/>
      <xs:element name="SignalStrength" type="tt:Dot11SignalStrength" minOccurs="0"/>
      <xs:element name="ActiveConfigAlias" type="tt:ReferenceToken"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="Dot11AuthAndMangementSuite">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Dot1X"/>
      <xs:enumeration value="PSK"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Dot11AvailableNetworks">
    <xs:sequence>
      <xs:element name="SSID" type="tt:Dot11SSIDType"/>
      <xs:element name="BSSID" type="xs:string" minOccurs="0"/>
      <xs:element name="AuthAndMangementSuite" type="tt:Dot11AuthAndMangementSuite" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>See IEEE802.11 7.3.2.25.2 for details.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PairCipher" type="tt:Dot11Cipher" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="GroupCipher" type="tt:Dot11Cipher" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="SignalStrength" type="tt:Dot11SignalStrength" minOccurs="0"/>
      <xs:element name="Extension" type="tt:Dot11AvailableNetworksExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot11AvailableNetworksExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--===============================-->
  <!--End, network Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Capabilities Related Types-->
  <!--===============================-->
  <xs:simpleType name="CapabilityCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="All"/>
      <xs:enumeration value="Analytics"/>
      <xs:enumeration value="Device"/>
      <xs:enumeration value="Events"/>
      <xs:enumeration value="Imaging"/>
      <xs:enumeration value="Media"/>
      <xs:enumeration value="PTZ"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Capabilities">
    <xs:sequence>
      <xs:element name="Analytics" type="tt:AnalyticsCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Analytics capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Device" type="tt:DeviceCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Device capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Events" type="tt:EventCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Event capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Imaging" type="tt:ImagingCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Imaging capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Media" type="tt:MediaCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Media capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PTZ" type="tt:PTZCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>PTZ capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:CapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="DeviceIO" type="tt:DeviceIOCapabilities" minOccurs="0"/>
      <xs:element name="Display" type="tt:DisplayCapabilities" minOccurs="0"/>
      <xs:element name="Recording" type="tt:RecordingCapabilities" minOccurs="0"/>
      <xs:element name="Search" type="tt:SearchCapabilities" minOccurs="0"/>
      <xs:element name="Replay" type="tt:ReplayCapabilities" minOccurs="0"/>
      <xs:element name="Receiver" type="tt:ReceiverCapabilities" minOccurs="0"/>
      <xs:element name="AnalyticsDevice" type="tt:AnalyticsDeviceCapabilities" minOccurs="0"/>
      <xs:element name="Extensions" type="tt:CapabilitiesExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CapabilitiesExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Analytics service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RuleSupport" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not rules are supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AnalyticsModuleSupport" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not modules are supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DeviceCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Device service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Network" type="tt:NetworkCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Network capabilities.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="System" type="tt:SystemCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>System capabilities.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IO" type="tt:IOCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>I/O capabilities.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Security" type="tt:SecurityCapabilities" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Security capabilities.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:DeviceCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DeviceCapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EventCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Event service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WSSubscriptionPolicySupport" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS Subscription policy is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WSPullPointSupport" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS Pull Point is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WSPausableSubscriptionManagerInterfaceSupport" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS Pausable Subscription Manager Interface is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IOCapabilities">
    <xs:sequence>
      <xs:element name="InputConnectors" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Number of input connectors.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RelayOutputs" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Number of relay outputs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:IOCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IOCapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Auxiliary" type="xs:boolean" minOccurs="0"/>
      <xs:element name="AuxiliaryCommands" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:IOCapabilitiesExtension2"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IOCapabilitiesExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MediaCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Media service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StreamingCapabilities" type="tt:RealTimeStreamingCapabilities">
        <xs:annotation>
          <xs:documentation>Streaming capabilities.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:MediaCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MediaCapabilitiesExtension">
    <xs:sequence>
      <xs:element name="ProfileCapabilities" type="tt:ProfileCapabilities"/>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RealTimeStreamingCapabilities">
    <xs:sequence>
      <xs:element name="RTPMulticast" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not RTP multicast is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RTP_TCP" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not RTP over TCP is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RTP_RTSP_TCP" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not RTP/RTSP/TCP is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RealTimeStreamingCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RealTimeStreamingCapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ProfileCapabilities">
    <xs:sequence>
      <xs:element name="MaximumNumberOfProfiles" type="xs:int">
        <xs:annotation>
          <xs:documentation>Maximum number of profiles.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkCapabilities">
    <xs:sequence>
      <xs:element name="IPFilter" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IP filtering is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZeroConfiguration" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not zeroconf is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IPVersion6" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not IPv6 is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynDNS" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not  is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:NetworkCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkCapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Dot11Configuration" type="xs:boolean" minOccurs="0"/>
      <xs:element name="Extension" type="tt:NetworkCapabilitiesExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="NetworkCapabilitiesExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SecurityCapabilities">
    <xs:sequence>
      <xs:element name="TLS1.1" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not TLS 1.1 is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TLS1.2" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not TLS 1.2 is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OnboardKeyGeneration" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not onboard key generation is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AccessPolicyConfig" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not access policy configuration is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="X.509Token" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS-Security X.509 token is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SAMLToken" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS-Security SAML token is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="KerberosToken" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS-Security Kerberos token is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RELToken" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS-Security REL token is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:SecurityCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SecurityCapabilitiesExtension">
    <xs:sequence>
      <xs:element name="TLS1.0" type="xs:boolean"/>
      <xs:element name="Extension" type="tt:SecurityCapabilitiesExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SecurityCapabilitiesExtension2">
    <xs:sequence>
      <xs:element name="Dot1X" type="xs:boolean"/>
      <xs:element name="SupportedEAPMethod" type="xs:int" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            EAP Methods supported by the device. The int values refer to the
            <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>
            .
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RemoteUserHandling" type="xs:boolean"/>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemCapabilities">
    <xs:sequence>
      <xs:element name="DiscoveryResolve" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS Discovery resolve requests are supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DiscoveryBye" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not WS-Discovery Bye is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RemoteDiscovery" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not remote discovery, see WS-Discovery, is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SystemBackup" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not system backup is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SystemLogging" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not system logging is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FirmwareUpgrade" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not firmware upgrade is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedVersions" type="tt:OnvifVersion" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Indicates supported ONVIF version(s).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:SystemCapabilitiesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemCapabilitiesExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="HttpFirmwareUpgrade" type="xs:boolean" minOccurs="0"/>
      <xs:element name="HttpSystemBackup" type="xs:boolean" minOccurs="0"/>
      <xs:element name="HttpSystemLogging" type="xs:boolean" minOccurs="0"/>
      <xs:element name="HttpSupportInformation" type="xs:boolean" minOccurs="0"/>
      <xs:element name="Extension" type="tt:SystemCapabilitiesExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemCapabilitiesExtension2">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OnvifVersion">
    <xs:sequence>
      <xs:element name="Major" type="xs:int">
        <xs:annotation>
          <xs:documentation>Major version number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Minor" type="xs:int">
        <xs:annotation>
          <xs:documentation>Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Imaging service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>PTZ service URI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DeviceIOCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI"/>
      <xs:element name="VideoSources" type="xs:int"/>
      <xs:element name="VideoOutputs" type="xs:int"/>
      <xs:element name="AudioSources" type="xs:int"/>
      <xs:element name="AudioOutputs" type="xs:int"/>
      <xs:element name="RelayOutputs" type="xs:int"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DisplayCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI"/>
      <xs:element name="FixedLayout" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indication that the SetLayout command supports only predefined layouts.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI"/>
      <xs:element name="ReceiverSource" type="xs:boolean"/>
      <xs:element name="MediaProfileSource" type="xs:boolean"/>
      <xs:element name="DynamicRecordings" type="xs:boolean"/>
      <xs:element name="DynamicTracks" type="xs:boolean"/>
      <xs:element name="MaxStringLength" type="xs:int"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SearchCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI"/>
      <xs:element name="MetadataSearch" type="xs:boolean"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ReplayCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>The address of the replay service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ReceiverCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>The address of the receiver service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RTP_Multicast" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the device can receive RTP multicast streams.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RTP_TCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the device can receive RTP/TCP streams</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RTP_RTSP_TCP" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the device can receive RTP/RTSP/TCP streams.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupportedReceivers" type="xs:int">
        <xs:annotation>
          <xs:documentation>The maximum number of receivers supported by the device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaximumRTSPURILength" type="xs:int">
        <xs:annotation>
          <xs:documentation>The maximum allowed length for RTSP URIs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsDeviceCapabilities">
    <xs:sequence>
      <xs:element name="XAddr" type="xs:anyURI"/>
      <xs:element name="RuleSupport" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Obsolete property.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:AnalyticsDeviceExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsDeviceExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--===============================-->
  <!--End, Capabilities Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--System Related Types-->
  <!--===============================-->
  <xs:simpleType name="SystemLogType">
    <xs:annotation>
      <xs:documentation>Enumeration describing the available system log modes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="System">
        <xs:annotation>
          <xs:documentation>Indicates that a system log is requested.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Access">
        <xs:annotation>
          <xs:documentation>Indicates that a access log is requested.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="SystemLog">
    <xs:sequence>
      <xs:element name="Binary" type="tt:AttachmentData" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The log information as attachment data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="String" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The log information as character data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SupportInformation">
    <xs:sequence>
      <xs:element name="Binary" type="tt:AttachmentData" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The support information as attachment data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="String" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The support information as character data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BinaryData">
    <xs:sequence>
      <xs:element name="Data" type="xs:base64Binary" nillable="false">
        <xs:annotation>
          <xs:documentation>base64 encoded binary data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute ref="xmime:contentType" use="optional"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AttachmentData">
    <xs:sequence>
      <xs:element ref="xop:Include"/>
    </xs:sequence>
    <xs:attribute ref="xmime:contentType" use="optional"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BackupFile">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Data" type="tt:AttachmentData"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemLogUriList">
    <xs:sequence>
      <xs:element name="SystemLog" type="tt:SystemLogUri" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemLogUri">
    <xs:sequence>
      <xs:element name="Type" type="tt:SystemLogType"/>
      <xs:element name="Uri" type="xs:anyURI"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="FactoryDefaultType">
    <xs:annotation>
      <xs:documentation>Enumeration describing the available factory default modes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Hard">
        <xs:annotation>
          <xs:documentation>Indicates that a hard factory default is requested.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Soft">
        <xs:annotation>
          <xs:documentation>Indicates that a soft factory default is requested.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="SetDateTimeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Manual">
        <xs:annotation>
          <xs:documentation>Indicates that the date and time are set manually.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NTP">
        <xs:annotation>
          <xs:documentation>Indicates that the date and time are set through NTP</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="SystemDateTime">
    <xs:annotation>
      <xs:documentation>General date time inforamtion returned by the GetSystemDateTime method.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DateTimeType" type="tt:SetDateTimeType">
        <xs:annotation>
          <xs:documentation>Indicates if the time is set manully or through NTP.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DaylightSavings" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Informative indicator whether daylight savings is currently on/off.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TimeZone" type="tt:TimeZone" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Timezone information in Posix format.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UTCDateTime" type="tt:DateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Current system date and time in UTC format. This field is mandatory since version 2.0.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LocalDateTime" type="tt:DateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Date and time in local format.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:SystemDateTimeExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SystemDateTimeExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DateTime">
    <xs:sequence>
      <xs:element name="Time" type="tt:Time"/>
      <xs:element name="Date" type="tt:Date"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Date">
    <xs:sequence>
      <xs:element name="Year" type="xs:int"/>
      <xs:element name="Month" type="xs:int">
        <xs:annotation>
          <xs:documentation>Range is 1 to 12.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Day" type="xs:int">
        <xs:annotation>
          <xs:documentation>Range is 1 to 31.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Time">
    <xs:sequence>
      <xs:element name="Hour" type="xs:int">
        <xs:annotation>
          <xs:documentation>Range is 0 to 23.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Minute" type="xs:int">
        <xs:annotation>
          <xs:documentation>Range is 0 to 59.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Second" type="xs:int">
        <xs:annotation>
          <xs:documentation>Range is 0 to 61 (typically 59).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TimeZone">
    <xs:annotation>
      <xs:documentation>
        The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3
        <br/>
        Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3
        <br/>
        CET = designation for standard time when daylight saving is not in force
        <br/>
        -1 = offset in hours = negative so 1 hour east of Greenwich meridian
        <br/>
        CEST = designation when daylight saving is in force ("Central European Summer Time")
        <br/>
        , = no offset number between code and comma, so default to one hour ahead for daylight saving
        <br/>
        M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)
        <br/>
        /2, = the local time when the switch occurs = 2 a.m. in this case
        <br/>
        M10.5.0 = when daylight saving ends = the last Sunday in October.
        <br/>
        /3, = the local time when the switch occurs = 3 a.m. in this case
        <br/>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TZ" type="xs:token">
        <xs:annotation>
          <xs:documentation>Posix timezone string.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, System Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--RemoteUser Handling Types-->
  <!--===============================-->
  <xs:complexType name="RemoteUser">
    <xs:sequence>
      <xs:element name="Username" type="xs:string"/>
      <xs:element name="Password" type="xs:string" minOccurs="0"/>
      <xs:element name="UseDerivedPassword" type="xs:boolean"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, RemoteUser Handling Types-->
  <!--===============================-->
  <!--===============================-->
  <!--UserToken Handling Types-->
  <!--===============================-->
  <xs:simpleType name="UserLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Administrator"/>
      <xs:enumeration value="Operator"/>
      <xs:enumeration value="User"/>
      <xs:enumeration value="Anonymous"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="User">
    <xs:sequence>
      <xs:element name="Username" type="xs:string">
        <xs:annotation>
          <xs:documentation>Username string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Password" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Password string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UserLevel" type="tt:UserLevel">
        <xs:annotation>
          <xs:documentation>User level string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:UserExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="UserExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, UserToken Handling Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Security Management Types-->
  <!--===============================-->
  <xs:complexType name="CertificateGenerationParameters">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token" minOccurs="0"/>
      <xs:element name="Subject" type="xs:string" minOccurs="0"/>
      <xs:element name="ValidNotBefore" type="xs:token" minOccurs="0"/>
      <xs:element name="ValidNotAfter" type="xs:token" minOccurs="0"/>
      <xs:element name="Extension" type="tt:CertificateGenerationParametersExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateGenerationParametersExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Certificate">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Certificate id.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Certificate" type="tt:BinaryData">
        <xs:annotation>
          <xs:documentation>base64 encoded DER representation of certificate.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateStatus">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token">
        <xs:annotation>
          <xs:documentation>Certificate id.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not a certificate is used in a HTTPS configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateWithPrivateKey">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token" minOccurs="0"/>
      <xs:element name="Certificate" type="tt:BinaryData"/>
      <xs:element name="PrivateKey" type="tt:BinaryData"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateInformation">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token"/>
      <xs:element name="IssuerDN" type="xs:string" minOccurs="0"/>
      <xs:element name="SubjectDN" type="xs:string" minOccurs="0"/>
      <xs:element name="KeyUsage" type="tt:CertificateUsage" minOccurs="0"/>
      <xs:element name="ExtendedKeyUsage" type="tt:CertificateUsage" minOccurs="0"/>
      <xs:element name="KeyLength" type="xs:int" minOccurs="0"/>
      <xs:element name="Version" type="xs:string" minOccurs="0"/>
      <xs:element name="SerialNum" type="xs:string" minOccurs="0"/>
      <xs:element name="SignatureAlgorithm" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Validity" type="tt:DateTimeRange" minOccurs="0"/>
      <xs:element name="Extension" type="tt:CertificateInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateUsage">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="Critical" type="xs:boolean" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CertificateInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, Security management Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Start Dot1X related Types-->
  <!--===============================-->
  <xs:complexType name="Dot1XConfiguration">
    <xs:sequence>
      <xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken"/>
      <xs:element name="Identity" type="xs:string"/>
      <xs:element name="AnonymousID" type="xs:string" minOccurs="0"/>
      <xs:element name="EAPMethod" type="xs:int">
        <xs:annotation>
          <xs:documentation>
            EAP Method type as defined in
            <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>
            .
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CACertificateID" type="xs:token" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="EAPMethodConfiguration" type="tt:EAPMethodConfiguration" minOccurs="0"/>
      <xs:element name="Extension" type="tt:Dot1XConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Dot1XConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EAPMethodConfiguration">
    <xs:sequence>
      <xs:element name="TLSConfiguration" type="tt:TLSConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Confgiuration information for TLS Method.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Password" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Password for those EAP Methods that require a password. The password shall never be returned on a get method.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:EapMethodExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EapMethodExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TLSConfiguration">
    <xs:sequence>
      <xs:element name="CertificateID" type="xs:token"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="GenericEapPwdConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, Dot1X related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Start IO management Types-->
  <!--===============================-->
  <xs:simpleType name="RelayLogicalState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="active"/>
      <xs:enumeration value="inactive"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="RelayIdleState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="closed"/>
      <xs:enumeration value="open"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RelayOutputSettings">
    <xs:sequence>
      <xs:element name="Mode" type="tt:RelayMode">
        <xs:annotation>
          <xs:documentation>
            'Bistable' or 'Monostable'
            <ul>
              <li>Bistable – After setting the state, the relay remains in this state.</li>
              <li>Monostable – After setting the state, the relay returns to its idle state after the specified time.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DelayTime" type="xs:duration">
        <xs:annotation>
          <xs:documentation>Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IdleState" type="tt:RelayIdleState">
        <xs:annotation>
          <xs:documentation>
            'open' or 'closed'
            <ul>
              <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
              <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="RelayMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Monostable"/>
      <xs:enumeration value="Bistable"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RelayOutput">
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Properties" type="tt:RelayOutputSettings"/>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="DigitalInput">
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <!--End, IO management Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Start PTZ Related Types-->
  <!--===============================-->
  <xs:complexType name="PTZNode">
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="Name" type="tt:Name" minOccurs="0">
            <xs:annotation>
              <xs:documentation>A unique identifier that is used to reference PTZ Nodes.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SupportedPTZSpaces" type="tt:PTZSpaces">
            <xs:annotation>
              <xs:documentation>A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaximumNumberOfPresets" type="xs:int">
            <xs:annotation>
              <xs:documentation>All preset operations MUST be available for this PTZ Node if one preset is supported.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="HomeSupported" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AuxiliaryCommands" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:PTZNodeExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="FixedHomePosition" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZNodeExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="SupportedPresetTour" type="tt:PTZPresetTourSupported">
        <xs:annotation>
          <xs:documentation>Detail of supported Preset Tour feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZNodeExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZNodeExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourSupported">
    <xs:sequence>
      <xs:element name="MaximumNumberOfPresetTours" type="xs:int">
        <xs:annotation>
          <xs:documentation>Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PTZPresetTourOperation" type="tt:PTZPresetTourOperation" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Indicates which preset tour operations are available for this PTZ Node.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourSupportedExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourSupportedExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="NodeToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultAbsolutePantTiltPositionSpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultAbsoluteZoomPositionSpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultRelativePanTiltTranslationSpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultRelativeZoomTranslationSpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultContinuousPanTiltVelocitySpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultContinuousZoomVelocitySpace" type="xs:anyURI" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultPTZSpeed" type="tt:PTZSpeed" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DefaultPTZTimeout" type="xs:duration" minOccurs="0">
            <xs:annotation>
              <xs:documentation>If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PanTiltLimits" type="tt:PanTiltLimits" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to –INF or +INF.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ZoomLimits" type="tt:ZoomLimits" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:PTZConfigurationExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PTControlDirection" type="tt:PTControlDirection" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to configure PT Control Direction related features.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZConfigurationExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZConfigurationExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTControlDirection">
    <xs:sequence>
      <xs:element name="EFlip" type="tt:EFlip" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to configure related parameters for E-Flip.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Reverse" type="tt:Reverse" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to configure related parameters for reversing of PT Control Direction.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTControlDirectionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTControlDirectionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EFlip">
    <xs:sequence>
      <xs:element name="Mode" type="tt:EFlipMode">
        <xs:annotation>
          <xs:documentation>Parameter to enable/disable E-Flip feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Reverse">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ReverseMode">
        <xs:annotation>
          <xs:documentation>Parameter to enable/disable Reverse feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="EFlipMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="ON"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="ReverseMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="ON"/>
      <xs:enumeration value="AUTO"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="PTZConfigurationOptions">
    <xs:sequence>
      <xs:element name="Spaces" type="tt:PTZSpaces">
        <xs:annotation>
          <xs:documentation>A list of supported coordinate systems including their range limitations.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PTZTimeout" type="tt:DurationRange">
        <xs:annotation>
          <xs:documentation>A timeout Range within which Timeouts are accepted by the PTZ Node.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PTControlDirection" type="tt:PTControlDirectionOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported options for PT Direction Control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZConfigurationOptions2" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZConfigurationOptions2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTControlDirectionOptions">
    <xs:sequence>
      <xs:element name="EFlip" type="tt:EFlipOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported options for EFlip feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Reverse" type="tt:ReverseOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported options for Reverse feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTControlDirectionOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTControlDirectionOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EFlipOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:EFlipMode" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Options of EFlip mode parameter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:EFlipOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EFlipOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ReverseOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ReverseMode" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Options of Reverse mode parameter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ReverseOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ReverseOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PanTiltLimits">
    <xs:sequence>
      <xs:element name="Range" type="tt:Space2DDescription">
        <xs:annotation>
          <xs:documentation>A range of pan tilt limits.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ZoomLimits">
    <xs:sequence>
      <xs:element name="Range" type="tt:Space1DDescription">
        <xs:annotation>
          <xs:documentation>A range of zoom limit</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZSpaces">
    <xs:sequence>
      <xs:element name="AbsolutePanTiltPositionSpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. 
			Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AbsoluteZoomPositionSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. 
			Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). 
			There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RelativePanTiltTranslationSpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. 
			Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, 
			where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RelativeZoomTranslationSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. 
			Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, 
			where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). 
			There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ContinuousPanTiltVelocitySpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. 
			Instead, the range should be defined as a range of the PTZ unit’s speed normalized to the range -1 to 1, where a positive velocity would map to clockwise 
			rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ContinuousZoomVelocitySpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, 
			where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PanTiltSpeedSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. 
			In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt 
			movement is represented by a single non-negative scalar value.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZoomSpeedSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. 
			In contrast to the velocity spaces, speed spaces do not contain any directional information.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZSpacesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZSpacesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Space2DDescription">
    <xs:sequence>
      <xs:element name="URI" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>A URI of coordinate systems.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="XRange" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>A range of x-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="YRange" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>A range of y-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Space1DDescription">
    <xs:sequence>
      <xs:element name="URI" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>A URI of coordinate systems.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="XRange" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>A range of x-axis.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Vector2D">
    <xs:attribute name="x" type="xs:float" use="required"/>
    <xs:attribute name="y" type="xs:float" use="required"/>
    <xs:attribute name="space" type="xs:anyURI" use="optional">
      <xs:annotation>
        <xs:documentation>
          Pan/tilt coordinate space selector. The following options are defined:
          <ul>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
          </ul>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Vector1D">
    <xs:attribute name="x" type="xs:float" use="required"/>
    <xs:attribute name="space" type="xs:anyURI" use="optional">
      <xs:annotation>
        <xs:documentation>
          Pan/tilt coordinate space selector. The following options are defined:
          <ul style="">
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
            <li>http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
          </ul>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZVector">
    <xs:sequence>
      <xs:element name="PanTilt" type="tt:Vector2D" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Pan and tilt position. The x component corresponds to pan and the y component to tilt.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Zoom" type="tt:Vector1D" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A zoom position.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZSpeed">
    <xs:sequence>
      <xs:element name="PanTilt" type="tt:Vector2D" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Zoom" type="tt:Vector1D" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZStatus">
    <xs:sequence>
      <xs:element name="Position" type="tt:PTZVector" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MoveStatus" type="tt:PTZMoveStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>States a current PTZ error.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UtcTime" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Specifies the UTC time when this status was generated.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPreset">
    <xs:sequence>
      <xs:element name="Name" type="tt:Name" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A list of preset position name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PTZPosition" type="tt:PTZVector" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A list of preset position.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="token" type="tt:ReferenceToken">
      <xs:annotation>
        <xs:documentation></xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZMoveStatus">
    <xs:sequence>
      <xs:element name="PanTilt" type="tt:MoveStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Zoom" type="tt:MoveStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="AuxiliaryData">
    <xs:restriction base="xs:string">
      <xs:maxLength value="128"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="MoveStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IDLE"/>
      <xs:enumeration value="MOVING"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="PTZPresetTourState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Idle"/>
      <xs:enumeration value="Touring"/>
      <xs:enumeration value="Paused"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="PTZPresetTourDirection">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Forward"/>
      <xs:enumeration value="Backward"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="PTZPresetTourOperation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Start"/>
      <xs:enumeration value="Stop"/>
      <xs:enumeration value="Pause"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="PresetTour">
    <xs:sequence>
      <xs:element name="Name" type="tt:Name" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Readable name of the preset tour.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="tt:PTZPresetTourStatus">
        <xs:annotation>
          <xs:documentation>Read only parameters to indicate the status of the preset tour.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AutoStart" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Auto Start flag of the preset tour. True allows the preset tour to be activated always.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StartingCondition" type="tt:PTZPresetTourStartingCondition">
        <xs:annotation>
          <xs:documentation>Parameters to specify the detail behavior of the preset tour.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TourSpot" type="tt:PTZPresetTourSpot" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A list of detail of touring spots including preset positions.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="token" type="tt:ReferenceToken">
      <xs:annotation>
        <xs:documentation>Unique identifier of this preset tour.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourSpot">
    <xs:sequence>
      <xs:element name="PresetDetail" type="tt:PTZPresetTourPresetDetail">
        <xs:annotation>
          <xs:documentation>Detail definition of preset position of the tour spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StayTime" type="xs:duration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to specify time duration of staying on this tour sport.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourSpotExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourSpotExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourPresetDetail">
    <xs:sequence>
      <xs:choice>
        <xs:element name="PresetToken" type="tt:ReferenceToken">
          <xs:annotation>
            <xs:documentation>Option to specify the preset position with Preset Token defined in advance.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Home" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="PTZPosition" type="tt:PTZVector">
          <xs:annotation>
            <xs:documentation>Option to specify the preset position with vector of PTZ node directly.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="TypeExtension" type="tt:PTZPresetTourTypeExtension"/>
      </xs:choice>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourTypeExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStatus">
    <xs:sequence>
      <xs:element name="State" type="tt:PTZPresetTourState">
        <xs:annotation>
          <xs:documentation>Indicates state of this preset tour by Idle/Touring/Paused.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CurrentTourSpot" type="tt:PTZPresetTourSpot" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates a tour spot currently staying.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourStatusExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStatusExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStartingCondition">
    <xs:sequence>
      <xs:element name="RecurringTime" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to specify how many times the preset tour is recurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RecurringDuration" type="xs:duration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to specify how long time duration the preset tour is recurred.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Direction" type="tt:PTZPresetTourDirection" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourStartingConditionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStartingConditionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourOptions">
    <xs:sequence>
      <xs:element name="AutoStart" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not the AutoStart is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StartingCondition" type="tt:PTZPresetTourStartingConditionOptions">
        <xs:annotation>
          <xs:documentation>Supported options for Preset Tour Starting Condition.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TourSpot" type="tt:PTZPresetTourSpotOptions">
        <xs:annotation>
          <xs:documentation>Supported options for Preset Tour Spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourSpotOptions">
    <xs:sequence>
      <xs:element name="PresetDetail" type="tt:PTZPresetTourPresetDetailOptions">
        <xs:annotation>
          <xs:documentation>Supported options for detail definition of preset position of the tour spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StayTime" type="tt:DurationRange">
        <xs:annotation>
          <xs:documentation>Supported range of stay time for a tour spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourPresetDetailOptions">
    <xs:sequence>
      <xs:element name="PresetToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A list of available Preset Tokens for tour spots.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Home" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>An option to indicate Home postion for tour spots.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PanTiltPositionSpace" type="tt:Space2DDescription" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported range of Pan and Tilt for tour spots.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZoomPositionSpace" type="tt:Space1DDescription" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported range of Zoom for a tour spot.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourPresetDetailOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourPresetDetailOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStartingConditionOptions">
    <xs:sequence>
      <xs:element name="RecurringTime" type="tt:IntRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported range of Recurring Time.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RecurringDuration" type="tt:DurationRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported range of Recurring Duration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Direction" type="tt:PTZPresetTourDirection" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Supported options for Direction of Preset Tour.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PTZPresetTourStartingConditionOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPresetTourStartingConditionOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, PTZ Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Imaging Related Types-->
  <!--===============================-->
  <xs:complexType name="ImagingStatus">
    <xs:sequence>
      <xs:element name="FocusStatus" type="tt:FocusStatus"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusStatus">
    <xs:sequence>
      <xs:element name="Position" type="xs:float">
        <xs:annotation>
          <xs:documentation>Status of focus position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MoveStatus" type="tt:MoveStatus">
        <xs:annotation>
          <xs:documentation>Status of focus MoveStatus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Error" type="xs:string">
        <xs:annotation>
          <xs:documentation>Error status of focus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusConfiguration">
    <xs:sequence>
      <xs:element name="AutoFocusMode" type="tt:AutoFocusMode"/>
      <xs:element name="DefaultSpeed" type="xs:float"/>
      <xs:element name="NearLimit" type="xs:float">
        <xs:annotation>
          <xs:documentation>Parameter to set autofocus near limit (unit: meter).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FarLimit" type="xs:float">
        <xs:annotation>
          <xs:documentation>Parameter to set autofocus far limit (unit: meter).
If set to 0.0, infinity will be used.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="AutoFocusMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AUTO"/>
      <xs:enumeration value="MANUAL"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="ImagingSettings">
    <xs:sequence>
      <xs:element name="BacklightCompensation" type="tt:BacklightCompensation" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Enabled/disabled BLC mode (on/off).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Brightness" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Image brightness (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ColorSaturation" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Color saturation of the image (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Contrast" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Contrast of the image (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Exposure" type="tt:Exposure" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Exposure mode of the device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Focus" type="tt:FocusConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Focus configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IrCutFilter" type="tt:IrCutFilterMode" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Infrared Cutoff Filter settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Sharpness" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Sharpness of the Video image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WideDynamicRange" type="tt:WideDynamicRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>WDR settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WhiteBalance" type="tt:WhiteBalance" minOccurs="0">
        <xs:annotation>
          <xs:documentation>White balance settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingSettingsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingSettingsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Exposure">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ExposureMode">
        <xs:annotation>
          <xs:documentation>
            Exposure Mode
            <ul>
              <li>Auto – Enabled the exposure algorithm on the NVT.</li>
              <li>Manual – Disabled exposure algorithm on the NVT.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Priority" type="tt:ExposurePriority">
        <xs:annotation>
          <xs:documentation>The exposure priority mode (low noise/framerate).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Window" type="tt:Rectangle">
        <xs:annotation>
          <xs:documentation>Rectangular exposure mask.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinExposureTime" type="xs:float">
        <xs:annotation>
          <xs:documentation>Minimum value of exposure time range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxExposureTime" type="xs:float">
        <xs:annotation>
          <xs:documentation>Maximum value of exposure time range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinGain" type="xs:float">
        <xs:annotation>
          <xs:documentation>Minimum value of the sensor gain range that is allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxGain" type="xs:float">
        <xs:annotation>
          <xs:documentation>Maximum value of the sensor gain range that is allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinIris" type="xs:float">
        <xs:annotation>
          <xs:documentation>Minimum value of the iris range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxIris" type="xs:float">
        <xs:annotation>
          <xs:documentation>Maximum value of the iris range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ExposureTime" type="xs:float">
        <xs:annotation>
          <xs:documentation>The fixed exposure time used by the image sensor (μs).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Gain" type="xs:float">
        <xs:annotation>
          <xs:documentation>The fixed gain used by the image sensor (dB).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Iris" type="xs:float">
        <xs:annotation>
          <xs:documentation>The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="WideDynamicMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="ON"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="WideDynamicRange">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WideDynamicMode">
        <xs:annotation>
          <xs:documentation>White dynamic range (on/off)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="xs:float">
        <xs:annotation>
          <xs:documentation>Optional level parameter (unitless)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="BacklightCompensationMode">
    <xs:annotation>
      <xs:documentation>Enumeration describing the available backlight compenstation modes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF">
        <xs:annotation>
          <xs:documentation>Backlight compensation is disabled.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ON">
        <xs:annotation>
          <xs:documentation>Backlight compensation is enabled.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="BacklightCompensation">
    <xs:sequence>
      <xs:element name="Mode" type="tt:BacklightCompensationMode">
        <xs:annotation>
          <xs:documentation>Backlight compensation mode (on/off).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="xs:float">
        <xs:annotation>
          <xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ExposurePriority">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LowNoise"/>
      <xs:enumeration value="FrameRate"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="ImagingOptions">
    <xs:sequence>
      <xs:element name="BacklightCompensation" type="tt:BacklightCompensationOptions"/>
      <xs:element name="Brightness" type="tt:FloatRange"/>
      <xs:element name="ColorSaturation" type="tt:FloatRange"/>
      <xs:element name="Contrast" type="tt:FloatRange"/>
      <xs:element name="Exposure" type="tt:ExposureOptions"/>
      <xs:element name="Focus" type="tt:FocusOptions"/>
      <xs:element name="IrCutFilterModes" type="tt:IrCutFilterMode" maxOccurs="unbounded"/>
      <xs:element name="Sharpness" type="tt:FloatRange"/>
      <xs:element name="WideDynamicRange" type="tt:WideDynamicRangeOptions"/>
      <xs:element name="WhiteBalance" type="tt:WhiteBalanceOptions"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WideDynamicRangeOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
      <xs:element name="Level" type="tt:FloatRange"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BacklightCompensationOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
      <xs:element name="Level" type="tt:FloatRange"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusOptions">
    <xs:sequence>
      <xs:element name="AutoFocusModes" type="tt:AutoFocusMode" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="DefaultSpeed" type="tt:FloatRange"/>
      <xs:element name="NearLimit" type="tt:FloatRange"/>
      <xs:element name="FarLimit" type="tt:FloatRange"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ExposureOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ExposureMode" maxOccurs="unbounded"/>
      <xs:element name="Priority" type="tt:ExposurePriority" maxOccurs="unbounded"/>
      <xs:element name="MinExposureTime" type="tt:FloatRange"/>
      <xs:element name="MaxExposureTime" type="tt:FloatRange"/>
      <xs:element name="MinGain" type="tt:FloatRange"/>
      <xs:element name="MaxGain" type="tt:FloatRange"/>
      <xs:element name="MinIris" type="tt:FloatRange"/>
      <xs:element name="MaxIris" type="tt:FloatRange"/>
      <xs:element name="ExposureTime" type="tt:FloatRange"/>
      <xs:element name="Gain" type="tt:FloatRange"/>
      <xs:element name="Iris" type="tt:FloatRange"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WhiteBalanceOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WhiteBalanceMode" maxOccurs="unbounded"/>
      <xs:element name="YrGain" type="tt:FloatRange"/>
      <xs:element name="YbGain" type="tt:FloatRange"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusMove">
    <xs:sequence>
      <xs:element name="Absolute" type="tt:AbsoluteFocus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Parameters for the absolute focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Relative" type="tt:RelativeFocus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Parameters for the relative focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Continuous" type="tt:ContinuousFocus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Parameter for the continuous focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AbsoluteFocus">
    <xs:sequence>
      <xs:element name="Position" type="xs:float">
        <xs:annotation>
          <xs:documentation>Position parameter for the absolute focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Speed parameter for the absolute focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RelativeFocus">
    <xs:sequence>
      <xs:element name="Distance" type="xs:float">
        <xs:annotation>
          <xs:documentation>Distance parameter for the relative focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Speed parameter for the relative focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ContinuousFocus">
    <xs:sequence>
      <xs:element name="Speed" type="xs:float">
        <xs:annotation>
          <xs:documentation>Speed parameter for the Continuous focus control.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MoveOptions">
    <xs:sequence>
      <xs:element name="Absolute" type="tt:AbsoluteFocusOptions" minOccurs="0"/>
      <xs:element name="Relative" type="tt:RelativeFocusOptions" minOccurs="0"/>
      <xs:element name="Continuous" type="tt:ContinuousFocusOptions" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AbsoluteFocusOptions">
    <xs:sequence>
      <xs:element name="Position" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>Valid ranges of the position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid ranges of the speed.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RelativeFocusOptions">
    <xs:sequence>
      <xs:element name="Distance" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>Valid ranges of the distance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>Valid ranges of the speed.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ContinuousFocusOptions">
    <xs:sequence>
      <xs:element name="Speed" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>Valid ranges of the speed.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ExposureMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AUTO"/>
      <xs:enumeration value="MANUAL"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Enabled">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ENABLED"/>
      <xs:enumeration value="DISABLED"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="WhiteBalanceMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AUTO"/>
      <xs:enumeration value="MANUAL"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="IrCutFilterMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ON"/>
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="AUTO"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="WhiteBalance">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WhiteBalanceMode">
        <xs:annotation>
          <xs:documentation>Auto whitebalancing mode (auto/manual).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CrGain" type="xs:float">
        <xs:annotation>
          <xs:documentation>Rgain (unitless).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CbGain" type="xs:float">
        <xs:annotation>
          <xs:documentation>Bgain (unitless).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Imaging Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--Imaging Version 2.0 Related Types-->
  <!--===============================-->
  <xs:complexType name="ImagingStatus20">
    <xs:sequence>
      <xs:element name="FocusStatus20" type="tt:FocusStatus20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Status of focus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingStatus20Extension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingStatus20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusStatus20">
    <xs:sequence>
      <xs:element name="Position" type="xs:float">
        <xs:annotation>
          <xs:documentation>Status of focus position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MoveStatus" type="tt:MoveStatus">
        <xs:annotation>
          <xs:documentation>Status of focus MoveStatus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Error status of focus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:FocusStatus20Extension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusStatus20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingSettings20">
    <xs:annotation>
      <xs:documentation>Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="BacklightCompensation" type="tt:BacklightCompensation20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Enabled/disabled BLC mode (on/off).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Brightness" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Image brightness (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ColorSaturation" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Color saturation of the image (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Contrast" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Contrast of the image (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Exposure" type="tt:Exposure20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Exposure mode of the device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Focus" type="tt:FocusConfiguration20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Focus configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IrCutFilter" type="tt:IrCutFilterMode" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Infrared Cutoff Filter settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Sharpness" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Sharpness of the Video image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WideDynamicRange" type="tt:WideDynamicRange20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>WDR settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WhiteBalance" type="tt:WhiteBalance20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>White balance settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingSettingsExtension20" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingSettingsExtension20">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ImageStabilization" type="tt:ImageStabilization" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional element to configure Image Stabilization feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingSettingsExtension202" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingSettingsExtension202">
    <xs:sequence>
      <xs:element name="IrCutFilterAutoAdjustment" type="tt:IrCutFilterAutoAdjustment" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingSettingsExtension203" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingSettingsExtension203">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImageStabilization">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ImageStabilizationMode">
        <xs:annotation>
          <xs:documentation>Parameter to enable/disable Image Stabilization feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional level parameter (unit unspecified)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImageStabilizationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImageStabilizationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ImageStabilizationMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OFF"/>
      <xs:enumeration value="ON"/>
      <xs:enumeration value="AUTO"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="IrCutFilterAutoAdjustment">
    <xs:sequence>
      <xs:element name="BoundaryType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BoundaryOffset" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ResponseTime" type="xs:duration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:IrCutFilterAutoAdjustmentExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IrCutFilterAutoAdjustmentExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="IrCutFilterAutoBoundaryType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Common"/>
      <xs:enumeration value="ToOn"/>
      <xs:enumeration value="ToOff"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="WideDynamicRange20">
    <xs:annotation>
      <xs:documentation>Type describing whether WDR mode is enabled or disabled (on/off).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Mode" type="tt:WideDynamicMode">
        <xs:annotation>
          <xs:documentation>Wide dynamic range mode (on/off).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BacklightCompensation20">
    <xs:annotation>
      <xs:documentation>Type describing whether BLC mode is enabled or disabled (on/off).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Mode" type="tt:BacklightCompensationMode">
        <xs:annotation>
          <xs:documentation>Backlight compensation mode (on/off).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Exposure20">
    <xs:annotation>
      <xs:documentation>Type describing the exposure settings.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Mode" type="tt:ExposureMode">
        <xs:annotation>
          <xs:documentation>
            Exposure Mode
            <ul>
              <li>Auto – Enabled the exposure algorithm on the device.</li>
              <li>Manual – Disabled exposure algorithm on the device.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Priority" type="tt:ExposurePriority" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The exposure priority mode (low noise/framerate).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Window" type="tt:Rectangle" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Rectangular exposure mask.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinExposureTime" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Minimum value of exposure time range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxExposureTime" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Maximum value of exposure time range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinGain" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Minimum value of the sensor gain range that is allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxGain" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Maximum value of the sensor gain range that is allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinIris" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Minimum value of the iris range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxIris" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Maximum value of the iris range allowed to be used by the algorithm.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ExposureTime" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The fixed exposure time used by the image sensor (μs).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Gain" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The fixed gain used by the image sensor (dB).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Iris" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingOptions20">
    <xs:sequence>
      <xs:element name="BacklightCompensation" type="tt:BacklightCompensationOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Backlight Compensation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Brightness" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Brightness.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ColorSaturation" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Color Saturation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Contrast" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Contrast.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Exposure" type="tt:ExposureOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Exposure.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Focus" type="tt:FocusOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Focus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IrCutFilterModes" type="tt:IrCutFilterMode" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Valid range of IrCutFilterModes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Sharpness" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of Sharpness.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WideDynamicRange" type="tt:WideDynamicRangeOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of WideDynamicRange.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WhiteBalance" type="tt:WhiteBalanceOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of WhiteBalance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingOptions20Extension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingOptions20Extension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ImageStabilization" type="tt:ImageStabilizationOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Options of parameters for Image Stabilization feature.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingOptions20Extension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingOptions20Extension2">
    <xs:sequence>
      <xs:element name="IrCutFilterAutoAdjustment" type="tt:IrCutFilterAutoAdjustmentOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Options of parameters for adjustment of Ir cut filter auto mode.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImagingOptions20Extension3" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImagingOptions20Extension3">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImageStabilizationOptions">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ImageStabilizationMode" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Supported options of Image Stabilization mode parameter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Image Stabilization.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ImageStabilizationOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ImageStabilizationOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IrCutFilterAutoAdjustmentOptions">
    <xs:sequence>
      <xs:element name="BoundaryType" type="xs:string" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BoundaryOffset" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not boundary offset for toggling Ir cut filter is supported.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ResponseTimeRange" type="tt:DurationRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supported range of delay time for toggling Ir cut filter.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:IrCutFilterAutoAdjustmentOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="IrCutFilterAutoAdjustmentOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WideDynamicRangeOptions20">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
      <xs:element name="Level" type="tt:FloatRange" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BacklightCompensationOptions20">
    <xs:sequence>
      <xs:element name="Mode" type="tt:BacklightCompensationMode" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>'ON' or 'OFF'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Level" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Level range of BacklightCompensation.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ExposureOptions20">
    <xs:sequence>
      <xs:element name="Mode" type="tt:ExposureMode" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Exposure Mode
            <ul>
              <li>Auto – Enabled the exposure algorithm on the device.</li>
              <li>Manual – Disabled exposure algorithm on the device.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Priority" type="tt:ExposurePriority" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The exposure priority mode (low noise/framerate).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinExposureTime" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Minimum ExposureTime.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxExposureTime" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Maximum ExposureTime.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinGain" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Minimum Gain.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxGain" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Maximum Gain.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinIris" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Minimum Iris.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxIris" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Maximum Iris.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ExposureTime" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the ExposureTime.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Gain" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Gain.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Iris" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of the Iris.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MoveOptions20">
    <xs:sequence>
      <xs:element name="Absolute" type="tt:AbsoluteFocusOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid ranges for the absolute control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Relative" type="tt:RelativeFocusOptions20" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid ranges for the relative control.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Continuous" type="tt:ContinuousFocusOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid ranges for the continuous control.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RelativeFocusOptions20">
    <xs:sequence>
      <xs:element name="Distance" type="tt:FloatRange">
        <xs:annotation>
          <xs:documentation>Valid ranges of the distance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Speed" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid ranges of the speed.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WhiteBalance20">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WhiteBalanceMode">
        <xs:annotation>
          <xs:documentation>'AUTO' or 'MANUAL'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CrGain" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Rgain (unitless).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CbGain" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Bgain (unitless).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:WhiteBalance20Extension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WhiteBalance20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusConfiguration20">
    <xs:sequence>
      <xs:element name="AutoFocusMode" type="tt:AutoFocusMode">
        <xs:annotation>
          <xs:documentation>
            Mode of auto fucus.
            <ul>
              <li>AUTO</li>
              <li>MANUAL</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DefaultSpeed" type="xs:float" minOccurs="0"/>
      <xs:element name="NearLimit" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Parameter to set autofocus near limit (unit: meter).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FarLimit" type="xs:float" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Parameter to set autofocus far limit (unit: meter).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:FocusConfiguration20Extension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusConfiguration20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WhiteBalanceOptions20">
    <xs:sequence>
      <xs:element name="Mode" type="tt:WhiteBalanceMode" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Mode of WhiteBalance.
            <ul>
              <li>AUTO</li>
              <li>MANUAL</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="YrGain" type="tt:FloatRange" minOccurs="0"/>
      <xs:element name="YbGain" type="tt:FloatRange" minOccurs="0"/>
      <xs:element name="Extension" type="tt:WhiteBalanceOptions20Extension" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="WhiteBalanceOptions20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusOptions20">
    <xs:sequence>
      <xs:element name="AutoFocusModes" type="tt:AutoFocusMode" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Mode of Auto Focus.
            <ul>
              <li>AUTO</li>
              <li>MANUAL</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DefaultSpeed" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of DefaultSpeed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NearLimit" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of NearLimit.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FarLimit" type="tt:FloatRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valid range of FarLimit.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:FocusOptions20Extension" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FocusOptions20Extension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--===============================-->
  <!--End, Imaging Version 2.0 Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Event and Analytics Types-->
  <!--===============================-->
  <xs:simpleType name="TopicNamespaceLocation">
    <xs:restriction base="xs:anyURI"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="PropertyOperation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Initialized"/>
      <xs:enumeration value="Deleted"/>
      <xs:enumeration value="Changed"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:element name="Message">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Source" type="tt:ItemList" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Token value pairs that triggered this message. Typically only one item is present.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Key" type="tt:ItemList" minOccurs="0"/>
        <xs:element name="Data" type="tt:ItemList" minOccurs="0"/>
        <xs:element name="Extension" type="tt:MessageExtension" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="UtcTime" type="xs:dateTime" use="required"/>
      <xs:attribute name="PropertyOperation" type="tt:PropertyOperation"/>
      <xs:anyAttribute processContents="lax"/>
    </xs:complexType>
  </xs:element>
  <!--===============================-->
  <xs:complexType name="MessageExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ItemList">
    <xs:annotation>
      <xs:documentation>List of parameters according to the corresponding ItemListDescription.
			Each item in the list shall have a unique name.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SimpleItem" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Value name pair as defined by the corresponding description.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Item name.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Value" type="xs:anySimpleType" use="required">
            <xs:annotation>
              <xs:documentation>Item value. The type is defined in the corresponding description.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="ElementItem" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Complex value structure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##any">
              <xs:annotation>
                <xs:documentation>XML tree contiaing the element value as defined in the corresponding description.</xs:documentation>
              </xs:annotation>
            </xs:any>
          </xs:sequence>
          <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Item name.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:ItemListExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ItemListExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--Message Description-->
  <!--===============================-->
  <xs:complexType name="MessageDescription">
    <xs:sequence>
      <xs:element name="Source" type="tt:ItemListDescription" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Set of tokens producing this message. The list may only contain SimpleItemDescription items.
					The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.
            <br/>
            For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
					and the name of the analytics module or rule.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Key" type="tt:ItemListDescription" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Data" type="tt:ItemListDescription" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Describes the payload of the message.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:MessageDescriptionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="IsProperty" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.
          <br/>
          Default is false.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MessageDescriptionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ItemListDescription">
    <xs:annotation>
      <xs:documentation>Describes a list of items. Each item in the list shall have a unique name.
			The list is designed as linear structure without optional or unbounded elements.
			Use ElementItems only when complex structures are inevitable.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SimpleItemDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Item name. Must be unique within a list.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Type" type="xs:QName" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ElementItemDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Description of a complex type. The Type must reference a defined type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Item name. Must be unique within a list.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Type" type="xs:QName" use="required">
            <xs:annotation>
              <xs:documentation>The type of the item. The Type must reference a defined type.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:ItemListDescriptionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ItemListDescriptionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Vector">
    <xs:attribute name="x" type="xs:float"/>
    <xs:attribute name="y" type="xs:float"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Rectangle">
    <xs:attribute name="bottom" type="xs:float"/>
    <xs:attribute name="top" type="xs:float"/>
    <xs:attribute name="right" type="xs:float"/>
    <xs:attribute name="left" type="xs:float"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Polygon">
    <xs:sequence>
      <xs:element name="Point" type="tt:Vector" minOccurs="3" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Polygon" type="tt:Polygon"/>
  <!--===============================-->
  <xs:complexType name="Polyline">
    <xs:sequence>
      <xs:element name="Point" type="tt:Vector" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Polyline" type="tt:Polyline"/>
  <!--===============================-->
  <xs:simpleType name="Direction">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Left"/>
      <xs:enumeration value="Right"/>
      <xs:enumeration value="Any"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="Color">
    <xs:attribute name="X" type="xs:float" use="required"/>
    <xs:attribute name="Y" type="xs:float" use="required"/>
    <xs:attribute name="Z" type="xs:float" use="required"/>
    <xs:attribute name="Colorspace" type="xs:anyURI"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ColorCovariance">
    <xs:attribute name="XX" type="xs:float" use="required"/>
    <xs:attribute name="YY" type="xs:float" use="required"/>
    <xs:attribute name="ZZ" type="xs:float" use="required"/>
    <xs:attribute name="XY" type="xs:float"/>
    <xs:attribute name="XZ" type="xs:float"/>
    <xs:attribute name="YZ" type="xs:float"/>
    <xs:attribute name="Colorspace" type="xs:anyURI"/>
  </xs:complexType>
  <!--===============================-->
  <!--Scene Description-->
  <!--===============================-->
  <xs:complexType name="Appearance">
    <xs:sequence>
      <xs:element name="Transformation" type="tt:Transformation" minOccurs="0"/>
      <xs:element name="Shape" type="tt:ShapeDescriptor" minOccurs="0"/>
      <xs:element name="Color" type="tt:ColorDescriptor" minOccurs="0"/>
      <xs:element name="Class" type="tt:ClassDescriptor" minOccurs="0"/>
      <xs:element name="Extension" type="tt:AppearanceExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AppearanceExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ShapeDescriptor">
    <xs:sequence>
      <xs:element name="BoundingBox" type="tt:Rectangle"/>
      <xs:element name="CenterOfGravity" type="tt:Vector"/>
      <xs:element name="Polygon" type="tt:Polygon" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:ShapeDescriptorExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ShapeDescriptorExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ColorDescriptor">
    <xs:sequence>
      <xs:element name="ColorCluster" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Color" type="tt:Color"/>
            <xs:element name="Weight" type="xs:float" minOccurs="0"/>
            <xs:element name="Covariance" type="tt:ColorCovariance" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:ColorDescriptorExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ColorDescriptorExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ClassType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Animal"/>
      <xs:enumeration value="Face"/>
      <xs:enumeration value="Human"/>
      <xs:enumeration value="Vehical"/>
      <xs:enumeration value="Other"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="ClassDescriptor">
    <xs:sequence>
      <xs:element name="ClassCandidate" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="tt:ClassType"/>
            <xs:element name="Likelihood" type="xs:float"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:ClassDescriptorExtension" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ClassDescriptorExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="OtherTypes" type="tt:OtherType" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:ClassDescriptorExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ClassDescriptorExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OtherType">
    <xs:sequence>
      <xs:element name="Type" type="xs:string">
        <xs:annotation>
          <xs:documentation>Object Class Type</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Likelihood" type="xs:float">
        <xs:annotation>
          <xs:documentation>A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Object">
    <xs:complexContent>
      <xs:extension base="tt:ObjectId">
        <xs:sequence>
          <xs:element name="Appearance" type="tt:Appearance" minOccurs="0"/>
          <xs:element name="Behaviour" type="tt:Behaviour" minOccurs="0"/>
          <xs:element name="Extension" type="tt:ObjectExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ObjectExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Transformation">
    <xs:sequence>
      <xs:element name="Translate" type="tt:Vector" minOccurs="0"/>
      <xs:element name="Scale" type="tt:Vector" minOccurs="0"/>
      <xs:element name="Extension" type="tt:TransformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TransformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Frame">
    <xs:sequence>
      <xs:element name="PTZStatus" type="tt:PTZStatus" minOccurs="0"/>
      <xs:element name="Transformation" type="tt:Transformation" minOccurs="0"/>
      <xs:element name="Object" type="tt:Object" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ObjectTree" type="tt:ObjectTree" minOccurs="0"/>
      <xs:element name="Extension" type="tt:FrameExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="UtcTime" type="xs:dateTime" use="required"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FrameExtension">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="MotionInCells" type="tt:MotionInCells" minOccurs="0"/>
      <xs:element name="Extension" type="tt:FrameExtension2" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FrameExtension2">
    <xs:sequence>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Merge">
    <xs:sequence>
      <xs:element name="from" type="tt:ObjectId" minOccurs="2" maxOccurs="unbounded"/>
      <xs:element name="to" type="tt:ObjectId"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Split">
    <xs:sequence>
      <xs:element name="from" type="tt:ObjectId"/>
      <xs:element name="to" type="tt:ObjectId" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Rename">
    <xs:sequence>
      <xs:element name="from" type="tt:ObjectId"/>
      <xs:element name="to" type="tt:ObjectId"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ObjectId">
    <xs:attribute name="ObjectId" type="xs:integer"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Behaviour">
    <xs:sequence>
      <xs:element name="Removed" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Idle" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:BehaviourExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="BehaviourExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ObjectTree">
    <xs:sequence>
      <xs:element name="Rename" type="tt:Rename" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Split" type="tt:Split" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Merge" type="tt:Merge" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Delete" type="tt:ObjectId" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:ObjectTreeExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ObjectTreeExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MotionInCells">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Columns" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>Number of columns of the cell grid (x dimension)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Rows" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>Number of rows of the cell grid (y dimension)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Cells" type="xs:base64Binary" use="required">
      <xs:annotation>
        <xs:documentation>A “1” denotes a cell where motion is detected and a “0” an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down.  If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--Analytics Configuration-->
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineConfiguration">
    <xs:sequence>
      <xs:element name="AnalyticsModule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:AnalyticsEngineConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RuleEngineConfiguration">
    <xs:sequence>
      <xs:element name="Rule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:RuleEngineConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RuleEngineConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Config">
    <xs:sequence>
      <xs:element name="Parameters" type="tt:ItemList">
        <xs:annotation>
          <xs:documentation>List of configuration parameters as defined in the correspding description.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the configuration.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" type="xs:QName" use="required">
      <xs:annotation>
        <xs:documentation>Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ConfigDescription">
    <xs:sequence>
      <xs:element name="Parameters" type="tt:ItemListDescription">
        <xs:annotation>
          <xs:documentation>List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
						should be used to transport the information to ease parsing of dynamically defined messages by a client
						application.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Messages" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
						the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
						The name of all Items must be unique within all Items contained in any group of this Message.
						Depending on the component multiple parameters or none may be needed to identify the component uniquely.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tt:MessageDescription">
              <xs:sequence>
                <xs:element name="ParentTopic" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
											by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
											Even without knowing the complete topic name, the subscriber will be able to distiguish the
											messages produced by different rule instances of the same type via the Source fields of the message.
											There the name of the rule instance, which produced the message, must be listed.</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Extension" type="tt:ConfigDescriptionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:QName" use="required">
      <xs:annotation>
        <xs:documentation>XML Type of the Configuration (e.g. "tt::LineDetector").</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ConfigDescriptionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SupportedRules">
    <xs:sequence>
      <xs:element name="RuleContentSchemaLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Lists the location of all schemas that are referenced in the rules.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RuleDescription" type="tt:ConfigDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of rules supported by the Video Analytics configuration..</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:SupportedRulesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SupportedRulesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SupportedAnalyticsModules">
    <xs:sequence>
      <xs:element name="AnalyticsModuleContentSchemaLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>It optionally contains a list of URLs that provide the location of schema files.
        These schema files describe the types and elements used in the analytics module descriptions.
        If the analytics module descriptions reference types or elements of the ONVIF schema file,
        the ONVIF schema file MUST be explicitly listed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AnalyticsModuleDescription" type="tt:ConfigDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:SupportedAnalyticsModulesExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SupportedAnalyticsModulesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PolygonConfiguration">
    <xs:sequence>
      <xs:element name="Polygon" type="tt:Polygon">
        <xs:annotation>
          <xs:documentation>Contains Polygon configuration for rule parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PolylineArray">
    <xs:sequence>
      <xs:element name="Segment" type="tt:Polyline" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Contains array of Polyline</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PolylineArrayExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PolylineArrayExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PolylineArrayConfiguration">
    <xs:sequence>
      <xs:element name="PolylineArray" type="tt:PolylineArray">
        <xs:annotation>
          <xs:documentation>Contains PolylineArray configuration data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MotionExpression">
    <xs:sequence>
      <xs:element name="Expression" type="xs:string">
        <xs:annotation>
          <xs:documentation>Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:string"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MotionExpressionConfiguration">
    <xs:sequence>
      <xs:element name="MotionExpression" type="tt:MotionExpression">
        <xs:annotation>
          <xs:documentation>Contains Rule MotionExpression configuration</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CellLayout">
    <xs:sequence>
      <xs:element name="Transformation" type="tt:Transformation">
        <xs:annotation>
          <xs:documentation>Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Columns" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>Number of columns of the cell grid (x dimension)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Rows" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>Number of rows of the cell grid (y dimension)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Event and Analytics Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Metadata Streaming Types-->
  <!--===============================-->
  <xs:complexType name="MetadataStream">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="VideoAnalytics" type="tt:VideoAnalyticsStream"/>
        <xs:element name="PTZ" type="tt:PTZStream"/>
        <xs:element name="Event" type="tt:EventStream"/>
        <xs:element name="Extension" type="tt:MetadataStreamExtension"/>
      </xs:choice>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataStreamExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:element name="MetadataStream" type="tt:MetadataStream"/>
  <!--===============================-->
  <xs:complexType name="VideoAnalyticsStream">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Frame" type="tt:Frame"/>
      <xs:element name="Extension" type="tt:VideoAnalyticsStreamExtension"/>
    </xs:choice>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoAnalyticsStreamExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZStream">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="PTZStatus" type="tt:PTZStatus"/>
      <xs:element name="Extension" type="tt:PTZStreamExtension"/>
    </xs:choice>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZStreamExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EventStream">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="wsnt:NotificationMessage"/>
      <xs:element name="Extension" type="tt:EventStreamExtension"/>
    </xs:choice>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EventStreamExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, Metadata Streaming Types-->
  <!--===============================-->
  <!--===============================-->
  <!--Display Related Types-->
  <!--===============================-->
  <xs:complexType name="PaneConfiguration">
    <xs:annotation>
      <xs:documentation>Configuration of the streaming and coding settings of a Video window.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PaneName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional name of the pane configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioOutputToken" type="tt:ReferenceToken" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioSourceToken" type="tt:ReferenceToken" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
DeviceIO service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The configuration of the audio encoder including codec, bitrate
and sample rate.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReceiverToken" type="tt:ReferenceToken" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A pointer to a Receiver that has the necessary information to receive
				data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
				GetReceivers command of the Receiver Service.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Token" type="tt:ReferenceToken">
        <xs:annotation>
          <xs:documentation>A unique identifier in the display device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PaneLayout">
    <xs:annotation>
      <xs:documentation>A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Pane" type="tt:ReferenceToken">
        <xs:annotation>
          <xs:documentation>Reference to the configuration of the streaming and coding parameters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Area" type="tt:Rectangle">
        <xs:annotation>
          <xs:documentation>Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="Layout">
    <xs:annotation>
      <xs:documentation>A layout describes a set of Video windows that are displayed simultaniously on a display.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PaneLayout" type="tt:PaneLayout" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of panes assembling the display layout.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:LayoutExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="LayoutExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="CodingCapabilities">
    <xs:annotation>
      <xs:documentation>This type contains the Audio and Video coding capabilities of a display service.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="AudioEncodingCapabilities" type="tt:AudioEncoderConfigurationOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device supports audio encoding this section describes the supported codecs and their configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioDecodingCapabilities" type="tt:AudioDecoderConfigurationOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the device supports audio decoding this section describes the supported codecs and their settings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoDecodingCapabilities" type="tt:VideoDecoderConfigurationOptions">
        <xs:annotation>
          <xs:documentation>This section describes the supported video codesc and their configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="LayoutOptions">
    <xs:annotation>
      <xs:documentation>The options supported for a display layout.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PaneLayoutOptions" type="tt:PaneLayoutOptions" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Lists the possible Pane Layouts of the Video Output</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:LayoutOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="LayoutOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PaneLayoutOptions">
    <xs:annotation>
      <xs:documentation>Description of a pane layout describing a complete display layout.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Area" type="tt:Rectangle" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:PaneOptionExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PaneOptionExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <!--End, Display Related Types-->
  <!--===============================-->
  <!--===============================-->
  <!--Receiver Types-->
  <!--===============================-->
  <xs:complexType name="Receiver">
    <xs:annotation>
      <xs:documentation>Description of a receiver, including its token and configuration.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Token" type="tt:ReferenceToken">
        <xs:annotation>
          <xs:documentation>Unique identifier of the receiver.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Configuration" type="tt:ReceiverConfiguration">
        <xs:annotation>
          <xs:documentation>Describes the configuration of the receiver.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ReceiverConfiguration">
    <xs:annotation>
      <xs:documentation>Describes the configuration of a receiver.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Mode" type="tt:ReceiverMode">
        <xs:annotation>
          <xs:documentation>The following connection modes are defined:</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MediaUri" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Details of the URI to which the receiver should connect.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StreamSetup" type="tt:StreamSetup">
        <xs:annotation>
          <xs:documentation>Stream connection parameters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ReceiverMode">
    <xs:annotation>
      <xs:documentation>Specifies a receiver connection mode.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AutoConnect">
        <xs:annotation>
          <xs:documentation>The receiver connects on demand, as required by consumers of the media streams.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AlwaysConnect">
        <xs:annotation>
          <xs:documentation>The receiver attempts to maintain a persistent connection to the configured endpoint.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NeverConnect">
        <xs:annotation>
          <xs:documentation>The receiver does not attempt to connect.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>This case should never happen.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="ReceiverState">
    <xs:annotation>
      <xs:documentation>Specifies the current connection state of the receiver.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="NotConnected">
        <xs:annotation>
          <xs:documentation>The receiver is not connected.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Connecting">
        <xs:annotation>
          <xs:documentation>The receiver is attempting to connect.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Connected">
        <xs:annotation>
          <xs:documentation>The receiver is connected.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>This case should never happen.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="ReceiverStateInformation">
    <xs:annotation>
      <xs:documentation>Contains information about a receiver's current state.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="State" type="tt:ReceiverState">
        <xs:annotation>
          <xs:documentation>The connection state of the receiver may have one of the following states:</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AutoCreated" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether or not the receiver was created automatically.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Receiver Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Storage Types-->
  <!--===============================-->
  <xs:simpleType name="ReceiverReference">
    <xs:restriction base="tt:ReferenceToken"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="RecordingReference">
    <xs:restriction base="tt:ReferenceToken"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="SourceReference">
    <xs:sequence>
      <xs:element name="Token" type="tt:ReferenceToken"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional" default="http://www.onvif.org/ver10/schema/Receiver"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="TrackReference">
    <xs:restriction base="tt:ReferenceToken"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="Description">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="DateTimeRange">
    <xs:sequence>
      <xs:element name="From" type="xs:dateTime"/>
      <xs:element name="Until" type="xs:dateTime"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingSummary">
    <xs:sequence>
      <xs:element name="DataFrom" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The earliest point in time where there is recorded data on the device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DataUntil" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The most recent point in time where there is recorded data on the device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NumberRecordings" type="xs:int">
        <xs:annotation>
          <xs:documentation>The device contains this many recordings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SearchScope">
    <xs:annotation>
      <xs:documentation>A structure for defining a limited scope when searching in recorded data.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="IncludedSources" type="tt:SourceReference" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IncludedRecordings" type="tt:RecordingReference" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RecordingInformationFilter" type="tt:XPathExpression" minOccurs="0">
        <xs:annotation>
          <xs:documentation>An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:SearchScopeExtension" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Extension point</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SearchScopeExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EventFilter">
    <xs:complexContent>
      <xs:extension base="wsnt:FilterType">
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="PTZPositionFilter">
    <xs:sequence>
      <xs:element name="MinPosition" type="tt:PTZVector">
        <xs:annotation>
          <xs:documentation>The lower boundary of the PTZ volume to look for.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaxPosition" type="tt:PTZVector">
        <xs:annotation>
          <xs:documentation>The upper boundary of the PTZ volume to look for.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EnterOrExit" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>If true, search for when entering the specified PTZ volume.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataFilter">
    <xs:sequence>
      <xs:element name="MetadataStreamFilter" type="tt:XPathExpression"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="XPathExpression">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="FindRecordingResultList">
    <xs:sequence>
      <xs:element name="SearchState" type="tt:SearchState">
        <xs:annotation>
          <xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RecordingInformation" type="tt:RecordingInformation" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A RecordingInformation structure for each found recording matching the search.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindEventResultList">
    <xs:sequence>
      <xs:element name="SearchState" type="tt:SearchState">
        <xs:annotation>
          <xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Result" type="tt:FindEventResult" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A FindEventResult structure for each found event matching the search.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindEventResult">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>The recording where this event was found. Empty string if no recording is associated with this event.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TrackToken" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>A reference to the track where this event was found. Empty string if no track is associated with this event.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Time" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The time when the event occured.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Event" type="wsnt:NotificationMessageHolderType">
        <xs:annotation>
          <xs:documentation>The description of the event.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StartStateEvent" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindPTZPositionResultList">
    <xs:sequence>
      <xs:element name="SearchState" type="tt:SearchState">
        <xs:annotation>
          <xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Result" type="tt:FindPTZPositionResult" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A FindPTZPositionResult structure for each found PTZ position matching the search.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindPTZPositionResult">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>A reference to the recording containing the PTZ position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TrackToken" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>A reference to the metadata track containing the PTZ position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Time" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The time when the PTZ position was valid.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Position" type="tt:PTZVector">
        <xs:annotation>
          <xs:documentation>The PTZ position.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindMetadataResultList">
    <xs:sequence>
      <xs:element name="SearchState" type="tt:SearchState">
        <xs:annotation>
          <xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Result" type="tt:FindMetadataResult" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A FindMetadataResult structure for each found set of Metadata matching the search.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="FindMetadataResult">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>A reference to the recording containing the metadata.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TrackToken" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>A reference to the metadata track containing the matching metadata.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Time" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The point in time when the matching metadata occurs in the metadata track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="SearchState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Queued">
        <xs:annotation>
          <xs:documentation>The search is queued and not yet started.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Searching">
        <xs:annotation>
          <xs:documentation>The search is underway and not yet completed.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Completed">
        <xs:annotation>
          <xs:documentation>The search has been completed and no new results will be found.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>The state of the search is unknown. (This is not a valid response from GetSearchState.)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:simpleType name="JobToken">
    <xs:restriction base="tt:ReferenceToken"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RecordingInformation">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference"/>
      <xs:element name="Source" type="tt:RecordingSourceInformation">
        <xs:annotation>
          <xs:documentation>Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
					recording is intended to record related material, there is just one source. It is indicates the physical location or the
					major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EarliestRecording" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="LatestRecording" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="Content" type="tt:Description"/>
      <xs:element name="Track" type="tt:TrackInformation" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RecordingStatus" type="tt:RecordingStatus"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingSourceInformation">
    <xs:annotation>
      <xs:documentation>A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SourceId" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Identifier for the source chosen by the client that creates the structure.
				This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name" type="tt:Name">
        <xs:annotation>
          <xs:documentation>Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="tt:Description">
        <xs:annotation>
          <xs:documentation>Informative description of the physical location of the source, e.g. the coordinates on a map.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description" type="tt:Description">
        <xs:annotation>
          <xs:documentation>Informative description of the source.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="RecordingStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Initiated"/>
      <xs:enumeration value="Recording"/>
      <xs:enumeration value="Stopped"/>
      <xs:enumeration value="Removing"/>
      <xs:enumeration value="Removed"/>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>This case should never happen.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="TrackInformation">
    <xs:sequence>
      <xs:element name="TrackToken" type="tt:TrackReference"/>
      <xs:element name="TrackType" type="tt:TrackType">
        <xs:annotation>
          <xs:documentation>Type of the track: "Video", "Audio" or "Metadata".
					The track shall only be able to hold data of that type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description" type="tt:Description">
        <xs:annotation>
          <xs:documentation>Informative description of the contents of the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DataFrom" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The start date and time of the oldest recorded data in the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DataTo" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The stop date and time of the newest recorded data in the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="TrackType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Video"/>
      <xs:enumeration value="Audio"/>
      <xs:enumeration value="Metadata"/>
      <xs:enumeration value="Extended">
        <xs:annotation>
          <xs:documentation>Placeholder for future extension.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="MediaAttributes">
    <xs:annotation>
      <xs:documentation>A set of media attributes valid for a recording at a point in time or for a time interval.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>A reference to the recording that has these attributes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TrackAttributes" type="tt:TrackAttributes" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>A set of attributes for each track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="From" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The attributes are valid from this point in time in the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Until" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TrackAttributes">
    <xs:sequence>
      <xs:element name="TrackInformation" type="tt:TrackInformation">
        <xs:annotation>
          <xs:documentation>The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VideoAttributes" type="tt:VideoAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the track is a video track, exactly one of this structure shall be present and contain the video attributes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AudioAttributes" type="tt:AudioAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MetadataAttributes" type="tt:MetadataAttributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:TrackAttributesExtension" minOccurs="0">
        <xs:annotation>
          <xs:documentation/>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TrackAttributesExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="VideoAttributes">
    <xs:sequence>
      <xs:element name="Bitrate" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Average bitrate in kbps.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Width" type="xs:int">
        <xs:annotation>
          <xs:documentation>The width of the video in pixels.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Height" type="xs:int">
        <xs:annotation>
          <xs:documentation>The height of the video in pixels.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Encoding" type="tt:VideoEncoding">
        <xs:annotation>
          <xs:documentation>Used video codec, either Jpeg, H.264 or Mpeg4</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Framerate" type="xs:float">
        <xs:annotation>
          <xs:documentation>Average framerate in frames per second.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AudioAttributes">
    <xs:sequence>
      <xs:element name="Bitrate" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The bitrate in kbps.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Encoding" type="tt:AudioEncoding">
        <xs:annotation>
          <xs:documentation>Audio codec used for encoding the audio (either G.711, G.726 or AAC)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Samplerate" type="xs:int">
        <xs:annotation>
          <xs:documentation>The sample rate in kHz.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataAttributes">
    <xs:sequence>
      <xs:element name="CanContainPTZ" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates that there can be PTZ data in the metadata track in the specified time interval.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CanContainAnalytics" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates that there can be analytics data in the metadata track in the specified time interval.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CanContainNotifications" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates that there can be notifications in the metadata track in the specified time interval.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="PtzSpaces" type="tt:StringAttrList">
      <xs:annotation>
        <xs:documentation>List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--RecordingService Types-->
  <!--===============================-->
  <!--===============================-->
  <xs:simpleType name="RecordingJobReference">
    <xs:restriction base="tt:ReferenceToken"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RecordingConfiguration">
    <xs:sequence>
      <xs:element name="Source" type="tt:RecordingSourceInformation">
        <xs:annotation>
          <xs:documentation>Information about the source of the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Content" type="tt:Description">
        <xs:annotation>
          <xs:documentation>Informative description of the source.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaximumRetentionTime" type="xs:duration">
        <xs:annotation>
          <xs:documentation>Sspecifies the maximum time that data in any track within the
				recording shall be stored. The device shall delete any data older than the maximum retention
				time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
				the device shall not limit the retention time of stored data, except by resource constraints.
				Whatever the value of MaximumRetentionTime, the device may automatically delete
				recordings to free up storage space for new recordings.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="TrackConfiguration">
    <xs:sequence>
      <xs:element name="TrackType" type="tt:TrackType">
        <xs:annotation>
          <xs:documentation>Type of the track. It shall be equal to the strings “Video”,
				“Audio” or “Metadata”. The track shall only be able to hold data of that type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description" type="tt:Description">
        <xs:annotation>
          <xs:documentation>Informative description of the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="GetRecordingsResponseItem">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>Token of the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Configuration" type="tt:RecordingConfiguration">
        <xs:annotation>
          <xs:documentation>Configuration of the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tracks" type="tt:GetTracksResponseList">
        <xs:annotation>
          <xs:documentation>List of tracks.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="GetTracksResponseList">
    <xs:sequence>
      <xs:element name="Track" type="tt:GetTracksResponseItem" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Configuration of a track.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="GetTracksResponseItem">
    <xs:sequence>
      <xs:element name="TrackToken" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>Token of the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Configuration" type="tt:TrackConfiguration">
        <xs:annotation>
          <xs:documentation>Configuration of the track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobConfiguration">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>Identifies the recording to which this job shall store the received data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Mode" type="tt:RecordingJobMode">
        <xs:annotation>
          <xs:documentation>
            The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
				to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.
            <br/>
            The only valid values for Mode shall be “Idle” and “Active”.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Priority" type="xs:int">
        <xs:annotation>
          <xs:documentation>This shall be a positive number. If there are multiple recording jobs that store data to
				the same track, the device will only store the data for the recording job with the highest
				priority. The priority is specified per recording job, but the device shall determine the priority
				of each track individually. If there are two recording jobs with the same priority, the device
				shall record the data corresponding to the recording job that was activated the latest.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Source" type="tt:RecordingJobSource" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Source of the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RecordingJobConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="RecordingJobMode">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RecordingJobConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobSource">
    <xs:sequence>
      <xs:element name="SourceToken" type="tt:SourceReference" minOccurs="0">
        <xs:annotation>
          <xs:documentation>This field shall be a reference to the source of the data. The type of the source
				is determined by the attribute Type in the SourceToken structure. If Type is
				http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
				the device shall receive the data over the network. If Type is
				http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
				device to obtain data from a profile that exists on the local device.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AutoCreateReceiver" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If this field is TRUE, and if the SourceToken is omitted, the device
				shall create a receiver object (through the receiver service) and assign the
				ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
				from the device, the AutoCreateReceiver field shall never be present.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tracks" type="tt:RecordingJobTrack" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of tracks associated with the recording.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RecordingJobSourceExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobSourceExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobTrack">
    <xs:sequence>
      <xs:element name="SourceTag" type="xs:string">
        <xs:annotation>
          <xs:documentation>If the received RTSP stream contains multiple tracks of the same type, the
						SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Destination" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>The destination is the tracktoken of the track to which the device shall store the
				received data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobStateInformation">
    <xs:sequence>
      <xs:element name="RecordingToken" type="tt:RecordingReference">
        <xs:annotation>
          <xs:documentation>Identification of the recording that the recording job records to.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="State" type="tt:RecordingJobState">
        <xs:annotation>
          <xs:documentation>Holds the aggregated state over the whole RecordingJobInformation structure.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Sources" type="tt:RecordingJobStateSource" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Identifies the data source of the recording job.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:RecordingJobStateInformationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobStateInformationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="RecordingJobState">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="RecordingJobStateSource">
    <xs:sequence>
      <xs:element name="SourceToken" type="tt:SourceReference">
        <xs:annotation>
          <xs:documentation>Identifies the data source of the recording job.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="State" type="tt:RecordingJobState">
        <xs:annotation>
          <xs:documentation>Holds the aggregated state over all substructures of RecordingJobStateSource.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tracks" type="tt:RecordingJobStateTracks">
        <xs:annotation>
          <xs:documentation>List of track items.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobStateTracks">
    <xs:sequence>
      <xs:element name="Track" type="tt:RecordingJobStateTrack" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="RecordingJobStateTrack">
    <xs:sequence>
      <xs:element name="SourceTag" type="xs:string">
        <xs:annotation>
          <xs:documentation>Identifies the track of the data source that provides the data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Destination" type="tt:TrackReference">
        <xs:annotation>
          <xs:documentation>Indicates the destination track.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optionally holds an implementation defined string value that describes the error.
				The string should be in the English language.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="State" type="tt:RecordingJobState">
        <xs:annotation>
          <xs:documentation>Provides the job state of the track. The valid
				values of state shall be “Idle”, “Active” and “Error”. If state equals “Error”, the Error field may be filled in with an implementation defined value.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="GetRecordingJobsResponseItem">
    <xs:sequence>
      <xs:element name="JobToken" type="tt:RecordingJobReference"/>
      <xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, RecordingService Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Replay Types-->
  <!--===============================-->
  <xs:complexType name="ReplayConfiguration">
    <xs:annotation>
      <xs:documentation>Configuration parameters for the replay service.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SessionTimeout" type="xs:duration">
        <xs:annotation>
          <xs:documentation>The RTSP session timeout.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Replay Types-->
  <!--===============================-->
  <!--===============================-->
  <!--===============================-->
  <!--Analytics Device Types-->
  <!--===============================-->
  <xs:complexType name="AnalyticsEngine">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsDeviceEngineConfiguration"/>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsDeviceEngineConfiguration">
    <xs:sequence>
      <xs:element name="EngineConfiguration" type="tt:EngineConfiguration" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:AnalyticsDeviceEngineConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsDeviceEngineConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="EngineConfiguration">
    <xs:sequence>
      <xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration"/>
      <xs:element name="AnalyticsEngineInputInfo" type="tt:AnalyticsEngineInputInfo"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineInputInfo">
    <xs:sequence>
      <xs:element name="InputInfo" type="tt:Config" minOccurs="0"/>
      <xs:element name="Extension" type="tt:AnalyticsEngineInputInfoExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineInputInfoExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineInput">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="SourceIdentification" type="tt:SourceIdentification"/>
          <xs:element name="VideoInput" type="tt:VideoEncoderConfiguration"/>
          <xs:element name="MetadataInput" type="tt:MetadataInput"/>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SourceIdentification">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Token" type="tt:ReferenceToken" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:SourceIdentificationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="SourceIdentificationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataInput">
    <xs:sequence>
      <xs:element name="MetadataConfig" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Extension" type="tt:MetadataInputExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MetadataInputExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsEngineControl">
    <xs:complexContent>
      <xs:extension base="tt:ConfigurationEntity">
        <xs:sequence>
          <xs:element name="EngineToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Token of the analytics engine (AnalyticsEngine) being controlled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EngineConfigToken" type="tt:ReferenceToken">
            <xs:annotation>
              <xs:documentation>Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="InputToken" type="tt:ReferenceToken" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>Tokens of the input (AnalyticsEngineInput) configuration applied.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ReceiverToken" type="tt:ReferenceToken" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Multicast" type="tt:MulticastConfiguration" minOccurs="0"/>
          <xs:element name="Subscription" type="tt:Config"/>
          <xs:element name="Mode" type="tt:ModeOfOperation"/>
          <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="ModeOfOperation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Idle"/>
      <xs:enumeration value="Active"/>
      <xs:enumeration value="Unknown">
        <xs:annotation>
          <xs:documentation>This case should never happen.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="AnalyticsStateInformation">
    <xs:sequence>
      <xs:element name="AnalyticsEngineControlToken" type="tt:ReferenceToken">
        <xs:annotation>
          <xs:documentation>Token of the control object whose status is requested.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="State" type="tt:AnalyticsState"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="AnalyticsState">
    <xs:sequence>
      <xs:element name="Error" type="xs:string" minOccurs="0"/>
      <xs:element name="State" type="xs:string"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <!--End, Analytics Device Types-->
  <!--===============================-->
  <!--=========================================-->
  <!--Action event payload Types-->
  <!--=========================================-->
  <!--===============================-->
  <xs:complexType name="ActionEngineEventPayload">
    <xs:annotation>
      <xs:documentation>Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="RequestInfo" type="soapenv:Envelope" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Request Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ResponseInfo" type="soapenv:Envelope" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Response Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fault" type="soapenv:Fault" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Fault Message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:ActionEngineEventPayloadExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ActionEngineEventPayloadExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--=========================================-->
  <!--End, Action event payload Types-->
  <!--=========================================-->
  <!--=========================================-->
  <!--Begin, Audio event types-->
  <!--=========================================-->
  <xs:simpleType name="AudioClassType">
    <xs:annotation>
      <xs:documentation>AudioClassType acceptable values are;
		   gun_shot, scream, glass_breaking, tire_screech</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="AudioClassCandidate">
    <xs:sequence>
      <xs:element name="Type" type="tt:AudioClassType">
        <xs:annotation>
          <xs:documentation>Indicates audio class label</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Likelihood" type="xs:float">
        <xs:annotation>
          <xs:documentation>A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="AudioClassDescriptor">
    <xs:sequence>
      <xs:element name="ClassCandidate" type="tt:AudioClassCandidate" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Array of audio class label and class probability</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:AudioClassDescriptorExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="AudioClassDescriptorExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--=========================================-->
  <!--End, Audio event types-->
  <!--=========================================-->
  <!--==================================-->
  <!--Begin, OSD Device Types-->
  <!--==================================-->
  <xs:complexType name="OSDReference">
    <xs:simpleContent>
      <xs:extension base="tt:ReferenceToken">
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--===============================-->
  <xs:simpleType name="OSDType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Text"/>
      <xs:enumeration value="Image"/>
      <xs:enumeration value="Extended"/>
    </xs:restriction>
  </xs:simpleType>
  <!--===============================-->
  <xs:complexType name="OSDPosConfiguration">
    <xs:sequence>
      <xs:element name="Type" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            For OSD position type, following are the pre-defined:
            <ul>
              <li>UpperLeft</li>
              <li>UpperRight</li>
              <li>LowerLeft</li>
              <li>LowerRight</li>
              <li>Custom</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Pos" type="tt:Vector" minOccurs="0"/>
      <xs:element name="Extension" type="tt:OSDPosConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDPosConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDColor">
    <xs:annotation>
      <xs:documentation>The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Color" type="tt:Color"/>
    </xs:sequence>
    <xs:attribute name="Transparent" type="xs:int" use="optional"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDTextConfiguration">
    <xs:sequence>
      <xs:element name="Type" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The following OSD Text Type are defined:
            <ul>
              <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
              <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
              <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
              <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DateFormat" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:
            <ul>
              <li>M/d/yyyy - e.g. 3/6/2013</li>
              <li>MM/dd/yyyy - e.g. 03/06/2013</li>
              <li>dd/MM/yyyy - e.g. 06/03/2013</li>
              <li>yyyy/MM/dd - e.g. 2013/03/06</li>
              <li>yyyy-MM-dd - e.g. 2013-06-03</li>
              <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
              <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
              <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TimeFormat" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:
            <ul>
              <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
              <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
              <li>H:mm:ss - e.g. 14:14:21</li>
              <li>HH:mm:ss - e.g. 14:14:21</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FontSize" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Font size of the text in pt.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FontColor" type="tt:OSDColor" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Font color of the text.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BackgroundColor" type="tt:OSDColor" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Background color of the text.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PlainText" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The content of text to be displayed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDTextConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDTextConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDImgConfiguration">
    <xs:sequence>
      <xs:element name="ImgPath" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>The URI of the image which to be displayed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDImgConfigurationExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDImgConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ColorspaceRange">
    <xs:sequence>
      <xs:element name="X" type="tt:FloatRange"/>
      <xs:element name="Y" type="tt:FloatRange"/>
      <xs:element name="Z" type="tt:FloatRange"/>
      <xs:element name="Colorspace" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="ColorOptions">
    <xs:annotation>
      <xs:documentation>
        Describe the option of the color supported. Either list each color or define the range of color value. The following values are acceptable for Colourspace attribute.
        <ul>
          <li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr colourspace</li>
          <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
          <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
          <li>http://www.onvif.org/ver10/colorspace/HSV - HSV colourspace</li>
        </ul>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element name="ColorList" type="tt:Color" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>List the supported color.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ColorspaceRange" type="tt:ColorspaceRange" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>Define the rang of color supported.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDColorOptions">
    <xs:annotation>
      <xs:documentation>Describe the option of the color and its transparency.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Color" type="tt:ColorOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional list of supported colors.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Transparent" type="tt:IntRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Range of the transparent level. Larger means more tranparent.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDColorOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDColorOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDTextOptions">
    <xs:sequence>
      <xs:element name="Type" type="xs:string" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FontSizeRange" type="tt:IntRange" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Range of the font size value.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DateFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported date format.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TimeFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of supported time format.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FontColor" type="tt:OSDColorOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of supported font color.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BackgroundColor" type="tt:OSDColorOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>List of supported background color.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDTextOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDTextOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDImgOptions">
    <xs:sequence>
      <xs:element name="ImagePath" type="xs:anyURI" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List of avaiable uris of image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDImgOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDImgOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDConfiguration">
    <xs:complexContent>
      <xs:extension base="tt:DeviceEntity">
        <xs:sequence>
          <xs:element name="VideoSourceConfigurationToken" type="tt:OSDReference">
            <xs:annotation>
              <xs:documentation>Reference to the video source configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" type="tt:OSDType">
            <xs:annotation>
              <xs:documentation>Type of OSD.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Position" type="tt:OSDPosConfiguration">
            <xs:annotation>
              <xs:documentation>Position configuration of OSD.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TextString" type="tt:OSDTextConfiguration" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Text configuration of OSD. It shall be present when the value of Type field is Text.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Image" type="tt:OSDImgConfiguration" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Image configuration of OSD. It shall be present when the value of Type field is Image</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Extension" type="tt:OSDConfigurationExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute processContents="lax"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDConfigurationExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="MaximumNumberOfOSDs">
    <xs:attribute name="Total" type="xs:int" use="required"/>
    <xs:attribute name="Image" type="xs:int"/>
    <xs:attribute name="PlainText" type="xs:int"/>
    <xs:attribute name="Date" type="xs:int"/>
    <xs:attribute name="Time" type="xs:int"/>
    <xs:attribute name="DateAndTime" type="xs:int"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDConfigurationOptions">
    <xs:sequence>
      <xs:element name="MaximumNumberOfOSDs" type="tt:MaximumNumberOfOSDs">
        <xs:annotation>
          <xs:documentation>The maximum number of OSD configurations supported for the specificate video source configuration. If a device limits the number of instances by OSDType, it should indicate the supported number via the related attribute.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Type" type="tt:OSDType" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PositionOption" type="xs:string" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            List available OSD position type. Following are the pre-defined:
            <ul>
              <li>UpperLeft</li>
              <li>UpperRight</li>
              <li>LowerLeft</li>
              <li>LowerRight</li>
              <li>Custom</li>
            </ul>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TextOption" type="tt:OSDTextOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ImageOption" type="tt:OSDImgOptions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Extension" type="tt:OSDConfigurationOptionsExtension" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--===============================-->
  <xs:complexType name="OSDConfigurationOptionsExtension">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>
  <!--=========================================-->
  <!--End, OSD Device Types-->
  <!--=========================================-->
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2005/05/xmlmime</con:url><con:content><![CDATA[<!--W3C XML Schema defined in the Describing Media Content of Binary Data in XML
   specification
     http://www.w3.org/TR/xml-media-types

   Copyright © 2005 World Wide Web Consortium,
  
   (Massachusetts Institute of Technology, European Research Consortium for
   Informatics and Mathematics, Keio University). All Rights Reserved. This
   work is distributed under the W3C® Software License [1] in the hope that
   it will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
   [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231

   $Id: xmlmime.xsd,v 1.1 2005/04/25 17:08:35 hugo Exp $-->
<xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
  <xs:attribute name="contentType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:minLength value="3"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="expectedContentTypes" type="xs:string"/>
  <xs:complexType name="base64Binary">
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute ref="xmime:contentType"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="hexBinary">
    <xs:simpleContent>
      <xs:extension base="xs:hexBinary">
        <xs:attribute ref="xmime:contentType"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://schemas.xmlsoap.org/soap/envelope/</con:url><con:content><![CDATA[<!--Schema for the SOAP/1.1 envelope

Portions © 2001 DevelopMentor. 
© 2001 W3C (Massachusetts Institute of Technology, Institut National de Recherche en Informatique et en Automatique, Keio University). All Rights Reserved.  
 
This document is governed by the W3C Software License [1] as described in the FAQ [2].
[1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
[2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD 
By obtaining, using and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions:

Permission to use, copy, modify, and distribute this software and its documentation, with or without modification,  for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the software and documentation or portions thereof, including modifications, that you make:

1.  The full text of this NOTICE in a location viewable to users of the redistributed or derivative work. 

2.  Any pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, a short notice of the following form (hypertext is preferred, text is permitted) should be used within the body of any redistributed or derivative code: "Copyright © 2001 World Wide Web Consortium, (Massachusetts Institute of Technology, Institut National de Recherche en Informatique et en Automatique, Keio University). All Rights Reserved. http://www.w3.org/Consortium/Legal/" 

3.  Notice of any changes or modifications to the W3C files, including the date changes were made. (We recommend you provide URIs to the location from which the code is derived.)   

Original W3C files; http://www.w3.org/2001/06/soap-envelope
Changes made: 
     - reverted namespace to http://schemas.xmlsoap.org/soap/envelope/
     - reverted mustUnderstand to only allow 0 and 1 as lexical values
	 - made encodingStyle a global attribute 20020825
	 - removed default value from mustUnderstand attribute declaration

THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.

COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.

The name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0"/>
      <xs:element ref="tns:Body" minOccurs="1"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/wsn/b-2.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.

OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.

Copyright (C) OASIS Open (2004-2006). All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English. 

The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema targetNamespace="http://docs.oasis-open.org/wsn/b-2" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--======================== Imports  ============================-->
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://docs.oasis-open.org/wsrf/bf-2.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://docs.oasis-open.org/wsn/t-1.xsd"/>
  <!--===================== Misc. Helper Types =====================-->
  <xsd:complexType name="QueryExpressionType" mixed="true">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="TopicExpressionType" mixed="true">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
    <xsd:anyAttribute/>
  </xsd:complexType>
  <xsd:complexType name="FilterType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=============== Resource Property Related  ===================-->
  <!--======== Resource Properties for NotificationProducer ========-->
  <xsd:element name="TopicExpression" type="wsnt:TopicExpressionType"/>
  <xsd:element name="FixedTopicSet" type="xsd:boolean" default="true"/>
  <xsd:element name="TopicExpressionDialect" type="xsd:anyURI"/>
  <xsd:element name="NotificationProducerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="wsnt:TopicExpression" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="wsnt:FixedTopicSet" minOccurs="0" maxOccurs="1"/>
        <xsd:element ref="wsnt:TopicExpressionDialect" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="wstop:TopicSet" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--======== Resource Properties for SubscriptionManager =========-->
  <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Filter" type="wsnt:FilterType"/>
  <xsd:element name="SubscriptionPolicy" type="wsnt:SubscriptionPolicyType"/>
  <xsd:element name="CreationTime" type="xsd:dateTime"/>
  <xsd:element name="SubscriptionManagerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="wsnt:ConsumerReference" minOccurs="1" maxOccurs="1"/>
        <xsd:element ref="wsnt:Filter" minOccurs="0" maxOccurs="1"/>
        <xsd:element ref="wsnt:SubscriptionPolicy" minOccurs="0" maxOccurs="1"/>
        <xsd:element ref="wsnt:CreationTime" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================= Notification Metadata  =====================-->
  <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
  <xsd:element name="ProducerReference" type="wsa:EndpointReferenceType"/>
  <!--================== Message Helper Types  =====================-->
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element ref="wsnt:SubscriptionReference" minOccurs="0" maxOccurs="1"/>
      <xsd:element ref="wsnt:Topic" minOccurs="0" maxOccurs="1"/>
      <xsd:element ref="wsnt:ProducerReference" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any namespace="##any" processContents="lax" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotificationMessage" type="wsnt:NotificationMessageHolderType"/>
  <!--========== Message Types for NotificationConsumer  ===========-->
  <xsd:element name="Notify">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="wsnt:NotificationMessage" minOccurs="1" maxOccurs="unbounded"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--========== Message Types for NotificationProducer  ===========-->
  <xsd:simpleType name="AbsoluteOrRelativeTimeType">
    <xsd:union memberTypes="xsd:dateTime xsd:duration"/>
  </xsd:simpleType>
  <xsd:element name="CurrentTime" type="xsd:dateTime"/>
  <xsd:element name="TerminationTime" nillable="true" type="xsd:dateTime"/>
  <xsd:element name="ProducerProperties" type="wsnt:QueryExpressionType"/>
  <xsd:element name="MessageContent" type="wsnt:QueryExpressionType"/>
  <xsd:element name="UseRaw">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="Subscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType" minOccurs="1" maxOccurs="1"/>
        <xsd:element name="Filter" type="wsnt:FilterType" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="InitialTerminationTime" type="wsnt:AbsoluteOrRelativeTimeType" nillable="true" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="SubscriptionPolicy" minOccurs="0" maxOccurs="1">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType" minOccurs="1" maxOccurs="1"/>
        <xsd:element ref="wsnt:CurrentTime" minOccurs="0" maxOccurs="1"/>
        <xsd:element ref="wsnt:TerminationTime" minOccurs="0" maxOccurs="1"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessage">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessageResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="SubscribeCreationFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeCreationFailedFault" type="wsnt:SubscribeCreationFailedFaultType"/>
  <xsd:complexType name="InvalidFilterFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="UnknownFilter" type="xsd:QName" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidFilterFault" type="wsnt:InvalidFilterFaultType"/>
  <xsd:complexType name="TopicExpressionDialectUnknownFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicExpressionDialectUnknownFault" type="wsnt:TopicExpressionDialectUnknownFaultType"/>
  <xsd:complexType name="InvalidTopicExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidTopicExpressionFault" type="wsnt:InvalidTopicExpressionFaultType"/>
  <xsd:complexType name="TopicNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNotSupportedFault" type="wsnt:TopicNotSupportedFaultType"/>
  <xsd:complexType name="MultipleTopicsSpecifiedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="MultipleTopicsSpecifiedFault" type="wsnt:MultipleTopicsSpecifiedFaultType"/>
  <xsd:complexType name="InvalidProducerPropertiesExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidProducerPropertiesExpressionFault" type="wsnt:InvalidProducerPropertiesExpressionFaultType"/>
  <xsd:complexType name="InvalidMessageContentExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidMessageContentExpressionFault" type="wsnt:InvalidMessageContentExpressionFaultType"/>
  <xsd:complexType name="UnrecognizedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="UnrecognizedPolicy" type="xsd:QName" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnrecognizedPolicyRequestFault" type="wsnt:UnrecognizedPolicyRequestFaultType"/>
  <xsd:complexType name="UnsupportedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="UnsupportedPolicy" type="xsd:QName" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnsupportedPolicyRequestFault" type="wsnt:UnsupportedPolicyRequestFaultType"/>
  <xsd:complexType name="NotifyMessageNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NotifyMessageNotSupportedFault" type="wsnt:NotifyMessageNotSupportedFaultType"/>
  <xsd:complexType name="UnacceptableInitialTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element name="MaximumTime" type="xsd:dateTime" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableInitialTerminationTimeFault" type="wsnt:UnacceptableInitialTerminationTimeFaultType"/>
  <xsd:complexType name="NoCurrentMessageOnTopicFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NoCurrentMessageOnTopicFault" type="wsnt:NoCurrentMessageOnTopicFaultType"/>
  <!--======== Message Types for PullPoint  ========================-->
  <xsd:element name="GetMessages">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="MaximumNumber" type="xsd:nonNegativeInteger" minOccurs="0"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetMessagesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="wsnt:NotificationMessage" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToGetMessagesFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToGetMessagesFault" type="wsnt:UnableToGetMessagesFaultType"/>
  <xsd:complexType name="UnableToDestroyPullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroyPullPointFault" type="wsnt:UnableToDestroyPullPointFaultType"/>
  <!--======== Message Types for Create PullPoint  =================-->
  <xsd:element name="CreatePullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="PullPoint" type="wsa:EndpointReferenceType"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToCreatePullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToCreatePullPointFault" type="wsnt:UnableToCreatePullPointFaultType"/>
  <!--======== Message Types for Base SubscriptionManager  =========-->
  <xsd:element name="Renew">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="TerminationTime" type="wsnt:AbsoluteOrRelativeTimeType" nillable="true" minOccurs="1" maxOccurs="1"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RenewResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="wsnt:TerminationTime" minOccurs="1" maxOccurs="1"/>
        <xsd:element ref="wsnt:CurrentTime" minOccurs="0" maxOccurs="1"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnacceptableTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element name="MaximumTime" type="xsd:dateTime" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableTerminationTimeFault" type="wsnt:UnacceptableTerminationTimeFaultType"/>
  <xsd:element name="Unsubscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UnsubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToDestroySubscriptionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroySubscriptionFault" type="wsnt:UnableToDestroySubscriptionFaultType"/>
  <!--====== Message Types for Pausable SubscriptionManager  =======-->
  <xsd:element name="PauseSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PauseSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PauseFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PauseFailedFault" type="wsnt:PauseFailedFaultType"/>
  <xsd:complexType name="ResumeFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResumeFailedFault" type="wsnt:ResumeFailedFaultType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<!--W3C XML Schema defined in the Web Services Addressing 1.0 specification
    http://www.w3.org/TR/ws-addr-core

   Copyright © 2005 World Wide Web Consortium,

   (Massachusetts Institute of Technology, European Research Consortium for
   Informatics and Mathematics, Keio University). All Rights Reserved. This
   work is distributed under the W3C® Software License [1] in the hope that
   it will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

   [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231

   $Id: ws-addr.xsd,v 1.4 2008/07/14 18:48:47 plehegar Exp $-->
<xs:schema targetNamespace="http://www.w3.org/2005/08/addressing" blockDefault="#all" elementFormDefault="qualified" finalDefault="" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType" mixed="false">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element name="ReferenceParameters" type="tns:ReferenceParametersType" minOccurs="0"/>
      <xs:element ref="tns:Metadata" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="ReferenceParametersType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType name="MetadataType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType name="RelatesToType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional" default="http://www.w3.org/2005/08/addressing/reply"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType name="AttributedURIType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType name="AttributedUnsignedLongType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType name="AttributedQNameType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType name="AttributedAnyType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType name="ProblemActionType" mixed="false">
    <xs:sequence>
      <xs:element ref="tns:Action" minOccurs="0"/>
      <xs:element name="SoapAction" minOccurs="0" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/wsrf/bf-2.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification, can be obtained from the OASIS Executive Director. 

OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director. 

Copyright (C) OASIS Open (2005). All Rights Reserved. 

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English. 

The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.oasis-open.org/wsrf/bf-2" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd">
    <xsd:annotation>
      <xsd:documentation>Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below</xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <!--====================== BaseFault Types =======================-->
  <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
  <xsd:complexType name="BaseFaultType">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Originator" type="wsa:EndpointReferenceType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ErrorCode" minOccurs="0" maxOccurs="1">
        <xsd:complexType>
          <xsd:complexContent mixed="true">
            <xsd:extension base="xsd:anyType">
              <xsd:attribute name="dialect" type="xsd:anyURI" use="required"/>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Description" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="FaultCause" minOccurs="0" maxOccurs="1">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/wsn/t-1.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.

OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.

Copyright (C) OASIS Open (2004-2006). All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English. 

The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema targetNamespace="http://docs.oasis-open.org/wsn/t-1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--=============== utility type definitions  ====================-->
  <xsd:complexType name="Documentation" mixed="true">
    <xsd:sequence>
      <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded" namespace="##any"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExtensibleDocumented" abstract="true" mixed="false">
    <xsd:sequence>
      <xsd:element name="documentation" type="wstop:Documentation" minOccurs="0"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="QueryExpressionType" mixed="true">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <!--================== Topic-Namespace Related  ================-->
  <xsd:complexType name="TopicNamespaceType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element name="Topic" minOccurs="0" maxOccurs="unbounded">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="wstop:TopicType">
                  <xsd:attribute name="parent" type="wstop:ConcreteTopicExpression"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute name="final" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNamespace" type="wstop:TopicNamespaceType">
    <xsd:unique name="rootTopicUniqueness">
      <xsd:selector xpath="wstop:Topic"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>
  <xsd:attribute name="topicNamespaceLocation" type="xsd:anyURI"/>
  <!--===================== Topic Related  =========================-->
  <xsd:complexType name="TopicType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element name="MessagePattern" type="wstop:QueryExpressionType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="Topic" type="wstop:TopicType" minOccurs="0" maxOccurs="unbounded">
            <xsd:unique name="childTopicUniqueness">
              <xsd:selector xpath="wstop:topic"/>
              <xsd:field xpath="@name"/>
            </xsd:unique>
          </xsd:element>
          <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" use="required" type="xsd:NCName"/>
        <xsd:attribute name="messageTypes">
          <xsd:simpleType>
            <xsd:list itemType="xsd:QName"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="final" type="xsd:boolean" default="false"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================ Topic Set Related  ===================-->
  <xsd:complexType name="TopicSetType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicSet" type="wstop:TopicSetType"/>
  <xsd:attribute name="topic" type="xsd:boolean" default="false"/>
  <!--================ Topic Expression Related  ===================-->
  <xsd:simpleType name="FullTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>TopicPathExpression  ::=   TopicPath ( '|' TopicPath )*  
        TopicPath       ::=   RootTopic ChildTopicExpression* 
        RootTopic       ::=   NamespacePrefix? ('//')? (NCName | '*')  
        NamespacePrefix ::=   NCName ':'      
        ChildTopicExpression ::=   '/' '/'? (QName | NCName | '*'| '.')</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*(\|([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConcreteTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    ConcreteTopicPath    ::=   RootTopic ChildTopic*    
    RootTopic            ::=   QName  
    ChildTopic           ::=   '/' (QName | NCName)</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)(/([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimpleTopicExpression">
    <xsd:restriction base="xsd:QName">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    RootTopic            ::=   QName</xsd:documentation>
      </xsd:annotation>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2004/08/xop/include</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/2004/08/xop/include" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2004/08/xop/include">
  <xs:element name="Include" type="tns:Include"/>
  <xs:complexType name="Include">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="href" type="xs:anyURI" use="required"/>
    <xs:anyAttribute namespace="##other"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter" name="AddIPAddressFilter" bindingOperationName="AddIPAddressFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:AddIPAddressFilter>
         <wsdl:IPAddressFilter>
            <sch:Type>?</sch:Type>
            <!--Zero or more repetitions:-->
            <sch:IPv4Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv4Address>
            <!--Zero or more repetitions:-->
            <sch:IPv6Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv6Address>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:IPAddressFilter>
      </wsdl:AddIPAddressFilter>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilterRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/AddScopes" name="AddScopes" bindingOperationName="AddScopes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:AddScopes>
         <!--1 or more repetitions:-->
         <wsdl:ScopeItem>?</wsdl:ScopeItem>
      </wsdl:AddScopes>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/AddScopesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate" name="CreateCertificate" bindingOperationName="CreateCertificate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:CreateCertificate>
         <!--Optional:-->
         <wsdl:CertificateID>?</wsdl:CertificateID>
         <!--Optional:-->
         <wsdl:Subject>?</wsdl:Subject>
         <!--Optional:-->
         <wsdl:ValidNotBefore>?</wsdl:ValidNotBefore>
         <!--Optional:-->
         <wsdl:ValidNotAfter>?</wsdl:ValidNotAfter>
      </wsdl:CreateCertificate>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration" name="CreateDot1XConfiguration" bindingOperationName="CreateDot1XConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:CreateDot1XConfiguration>
         <wsdl:Dot1XConfiguration>
            <sch:Dot1XConfigurationToken>?</sch:Dot1XConfigurationToken>
            <sch:Identity>?</sch:Identity>
            <!--Optional:-->
            <sch:AnonymousID>?</sch:AnonymousID>
            <sch:EAPMethod>?</sch:EAPMethod>
            <!--Zero or more repetitions:-->
            <sch:CACertificateID>?</sch:CACertificateID>
            <!--Optional:-->
            <sch:EAPMethodConfiguration>
               <!--Optional:-->
               <sch:TLSConfiguration>
                  <sch:CertificateID>?</sch:CertificateID>
                  <!--You may enter ANY elements at this point-->
               </sch:TLSConfiguration>
               <!--Optional:-->
               <sch:Password>?</sch:Password>
               <!--Optional:-->
               <sch:Extension>
                  <!--You may enter ANY elements at this point-->
               </sch:Extension>
            </sch:EAPMethodConfiguration>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:Dot1XConfiguration>
      </wsdl:CreateDot1XConfiguration>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/CreateUsers" name="CreateUsers" bindingOperationName="CreateUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:CreateUsers>
         <!--1 or more repetitions:-->
         <wsdl:User>
            <sch:Username>?</sch:Username>
            <!--Optional:-->
            <sch:Password>?</sch:Password>
            <sch:UserLevel>?</sch:UserLevel>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:User>
      </wsdl:CreateUsers>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/CreateUsersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates" name="DeleteCertificates" bindingOperationName="DeleteCertificates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:DeleteCertificates>
         <!--1 or more repetitions:-->
         <wsdl:CertificateID>?</wsdl:CertificateID>
      </wsdl:DeleteCertificates>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration" name="DeleteDot1XConfiguration" bindingOperationName="DeleteDot1XConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:DeleteDot1XConfiguration>
         <!--Zero or more repetitions:-->
         <wsdl:Dot1XConfigurationToken>?</wsdl:Dot1XConfigurationToken>
      </wsdl:DeleteDot1XConfiguration>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers" name="DeleteUsers" bindingOperationName="DeleteUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:DeleteUsers>
         <!--1 or more repetitions:-->
         <wsdl:Username>?</wsdl:Username>
      </wsdl:DeleteUsers>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy" name="GetAccessPolicy" bindingOperationName="GetAccessPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetAccessPolicy/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetCACertificates" name="GetCACertificates" bindingOperationName="GetCACertificates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetCACertificates/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities" name="GetCapabilities" bindingOperationName="GetCapabilities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetCapabilities>
         <!--Zero or more repetitions:-->
         <wsdl:Category>?</wsdl:Category>
      </wsdl:GetCapabilities>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilitiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation" name="GetCertificateInformation" bindingOperationName="GetCertificateInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetCertificateInformation>
         <wsdl:CertificateID>?</wsdl:CertificateID>
      </wsdl:GetCertificateInformation>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetCertificates" name="GetCertificates" bindingOperationName="GetCertificates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetCertificates/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus" name="GetCertificatesStatus" bindingOperationName="GetCertificatesStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetCertificatesStatus/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatusRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode" name="GetClientCertificateMode" bindingOperationName="GetClientCertificateMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetClientCertificateMode/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation" name="GetDeviceInformation" bindingOperationName="GetDeviceInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope">
<s:Header>
<!--
<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><wsse:UsernameToken><wsse:Username>admin</wsse:Username><wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">QIi8saSxYdmwotFSHfzWNzxrcUk=</wsse:Password><wsse:Nonce>87WOGGDSFaCR/VmQQiWnxw==</wsse:Nonce><wsu:Created>2015-05-25T14:39:51Z</wsu:Created></wsse:UsernameToken></wsse:Security>
-->
<Security s:mustUnderstand="1"
xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
	<UsernameToken>
		<Username>user1</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">o9Pv3czBUu4B+mUJRqkFsIz/CNY=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">39VOCjFTqEGHdamjw1XvBVkAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-22T13:46:38.170Z</Created>
	</UsernameToken>
</Security>

</s:Header>
<s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<GetDeviceInformation xmlns="http://www.onvif.org/ver10/device/wsdl"/>
</s:Body>
</s:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode" name="GetDiscoveryMode" bindingOperationName="GetDiscoveryMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDiscoveryMode/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDNS" name="GetDNS" bindingOperationName="GetDNS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDNS/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDNSRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities" name="GetDot11Capabilities" bindingOperationName="GetDot11Capabilities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDot11Capabilities>
         <!--You may enter ANY elements at this point-->
      </wsdl:GetDot11Capabilities>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDot11CapabilitiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDot11Status" name="GetDot11Status" bindingOperationName="GetDot11Status" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDot11Status>
         <wsdl:InterfaceToken>?</wsdl:InterfaceToken>
      </wsdl:GetDot11Status>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDot11StatusRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration" name="GetDot1XConfiguration" bindingOperationName="GetDot1XConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDot1XConfiguration>
         <wsdl:Dot1XConfigurationToken>?</wsdl:Dot1XConfigurationToken>
      </wsdl:GetDot1XConfiguration>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations" name="GetDot1XConfigurations" bindingOperationName="GetDot1XConfigurations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDot1XConfigurations/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses" name="GetDPAddresses" bindingOperationName="GetDPAddresses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDPAddresses/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddressesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS" name="GetDynamicDNS" bindingOperationName="GetDynamicDNS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetDynamicDNS/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNSRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetEndpointReference" name="GetEndpointReference" bindingOperationName="GetEndpointReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetEndpointReference/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReferenceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetHostname" name="GetHostname" bindingOperationName="GetHostname" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetHostname/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetHostnameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter" name="GetIPAddressFilter" bindingOperationName="GetIPAddressFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetIPAddressFilter/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilterRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway" name="GetNetworkDefaultGateway" bindingOperationName="GetNetworkDefaultGateway" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetNetworkDefaultGateway/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGatewayRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces" name="GetNetworkInterfaces" bindingOperationName="GetNetworkInterfaces" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetNetworkInterfaces/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfacesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols" name="GetNetworkProtocols" bindingOperationName="GetNetworkProtocols" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetNetworkProtocols/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocolsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetNTP" name="GetNTP" bindingOperationName="GetNTP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetNTP/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetNTPRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request" name="GetPkcs10Request" bindingOperationName="GetPkcs10Request" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:xm="http://www.w3.org/2005/05/xmlmime" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetPkcs10Request>
         <wsdl:CertificateID>?</wsdl:CertificateID>
         <!--Optional:-->
         <wsdl:Subject>?</wsdl:Subject>
         <!--Optional:-->
         <wsdl:Attributes xm:contentType="application/?">
            <sch:Data>cid:1173126133060</sch:Data>
         </wsdl:Attributes>
      </wsdl:GetPkcs10Request>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10RequestRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs" name="GetRelayOutputs" bindingOperationName="GetRelayOutputs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetRelayOutputs/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode" name="GetRemoteDiscoveryMode" bindingOperationName="GetRemoteDiscoveryMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetRemoteDiscoveryMode/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetRemoteUser" name="GetRemoteUser" bindingOperationName="GetRemoteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="WsdlSettings@enable-mtom">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[
<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope"
xmlns:a="http://www.w3.org/2005/08/addressing">
<s:Header>
<!--
<Security s:mustUnderstand="1" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
-->

<Security>
	<UsernameToken>
		<Username>admin</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">wRHUFc1slwB8LaMm7QJnLaiD4cI=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">aN6VJLJZfkCkkjpXT6GbX1UAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-13T13:44:47.631Z</Created>
	</UsernameToken>
</Security     >



<a:Action s:mustUnderstand="1">http://www.onvif.org/ver10/device/wsdl/GetScopes</a:Action>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<GetScopes xmlns="http://www.onvif.org/ver10/device/wsdl">
<n1>5.9</n1>
<n2>15.99</n2>
</GetScopes>
</s:Body></s:Envelope>


<!--
<a:Action s:mustUnderstand="1">http://Microsoft.Samples.Http/Subtract</a:Action>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<Subtract xmlns="http://Microsoft.Samples.Http">
<n1>5.9</n1>
<n2>15.99</n2>
</Subtract>
</s:Body></s:Envelope>
-->
<!--
<a:Action s:mustUnderstand="1">http://Microsoft.Samples.Http/Divide</a:Action>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<Divide xmlns="http://Microsoft.Samples.Http">
<n1>5.9</n1>
<n2>15.99</n2>
</Divide>
</s:Body></s:Envelope>

-->
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUserRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetScopes" name="Add" bindingOperationName="GetScopes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Add" wssPasswordType="" sslKeystore="" useWsAddressing="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@encode_attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@inline-response-attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[
<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope"
xmlns:a="http://www.w3.org/2005/08/addressing">
<s:Header>

<!-- user/pass creds -->
<!--
<Security s:mustUnderstand="1"
xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
	<UsernameToken>
		<Username>user</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">o9Pv3czBUu4B+mUJRqkFsIz/CNY=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">39VOCjFTqEGHdamjw1XvBVkAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-22T13:46:38.170Z</Created>
	</UsernameToken>
</Security>
-->
<!-- admin/admin creds -->
<!-- -->
<Security>
	<UsernameToken>
		<Username>admin</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">wRHUFc1slwB8LaMm7QJnLaiD4cI=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">aN6VJLJZfkCkkjpXT6GbX1UAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-13T13:44:47.631Z</Created>
	</UsernameToken>
</Security     >


<!--
<a:Action s:mustUnderstand="1">http://www.onvif.org/ver10/device/wsdl/GetScopes</a:Action>
-->
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<GetScopes xmlns="http://www.onvif.org/ver10/device/wsdl">
<n1>5.9</n1>
<n2>15.99</n2>
</GetScopes>
</s:Body></s:Envelope>


<!--
<a:Action s:mustUnderstand="1">http://Microsoft.Samples.Http/Subtract</a:Action>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<Subtract xmlns="http://Microsoft.Samples.Http">
<n1>5.9</n1>
<n2>15.99</n2>
</Subtract>
</s:Body></s:Envelope>
-->
<!--
<a:Action s:mustUnderstand="1">http://Microsoft.Samples.Http/Divide</a:Action>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<Divide xmlns="http://Microsoft.Samples.Http">
<n1>5.9</n1>
<n2>15.99</n2>
</Divide>
</s:Body></s:Envelope>

-->
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetScopesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="user_creds"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope"
xmlns:a="http://www.w3.org/2005/08/addressing">
<s:Header>
<Security s:mustUnderstand="1"
xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
	<UsernameToken>
		<Username>user</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">o9Pv3czBUu4B+mUJRqkFsIz/CNY=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">39VOCjFTqEGHdamjw1XvBVkAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-22T13:46:38.170Z</Created>
	</UsernameToken>
</Security>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<GetScopes xmlns="http://www.onvif.org/ver10/device/wsdl">
<n1>5.9</n1>
<n2>15.99</n2>
</GetScopes>
</s:Body></s:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/AddRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="admin_creds"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope"
xmlns:a="http://www.w3.org/2005/08/addressing">
<s:Header>
<Security s:mustUnderstand="1"
xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
	<UsernameToken>
		<Username>admin</Username>
		<Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">wRHUFc1slwB8LaMm7QJnLaiD4cI=</Password>
		<Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">aN6VJLJZfkCkkjpXT6GbX1UAAAAAAA==</Nonce>
		<Created xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">2015-05-13T13:44:47.631Z</Created>
	</UsernameToken>
</Security     >
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<GetScopes xmlns="http://www.onvif.org/ver10/device/wsdl">
<n1>5.9</n1>
<n2>15.99</n2>
</GetScopes>
</s:Body></s:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/AddRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call name="no_creds"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope"
xmlns:a="http://www.w3.org/2005/08/addressing">
<s:Header>
<a:MessageID>urn:uuid:fe273794-dfc6-4c15-887c-3d43055c74cb</a:MessageID>
<a:ReplyTo>
	<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
</a:ReplyTo>
<a:To s:mustUnderstand="1">http://192.168.1.170/onvif/device_service</a:To>
</s:Header>
<s:Body>
<GetScopes xmlns="http://www.onvif.org/ver10/device/wsdl">
<n1>5.9</n1>
<n2>15.99</n2>
</GetScopes>
</s:Body></s:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/AddRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities" name="GetServiceCapabilities" bindingOperationName="GetServiceCapabilities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetServiceCapabilities/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilitiesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetServices" name="GetServices" bindingOperationName="GetServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetServices>
         <wsdl:IncludeCapability>?</wsdl:IncludeCapability>
      </wsdl:GetServices>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetServicesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup" name="GetSystemBackup" bindingOperationName="GetSystemBackup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetSystemBackup/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackupRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime" name="GetSystemDateAndTime" bindingOperationName="GetSystemDateAndTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetSystemDateAndTime/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTimeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog" name="GetSystemLog" bindingOperationName="GetSystemLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetSystemLog>
         <wsdl:LogType>?</wsdl:LogType>
      </wsdl:GetSystemLog>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLogRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation" name="GetSystemSupportInformation" bindingOperationName="GetSystemSupportInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetSystemSupportInformation/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetSystemUris" name="GetSystemUris" bindingOperationName="GetSystemUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetSystemUris/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUrisRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetUsers" name="GetUsers" bindingOperationName="GetUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetUsers/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetUsersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl" name="GetWsdlUrl" bindingOperationName="GetWsdlUrl" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetWsdlUrl/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrlRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration" name="GetZeroConfiguration" bindingOperationName="GetZeroConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:GetZeroConfiguration/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/LoadCACertificates" name="LoadCACertificates" bindingOperationName="LoadCACertificates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header/>
   <soap:Body>
      <wsdl:LoadCACertificates>
         <!--1 or more repetitions:-->
         <wsdl:CACertificate>
            <sch:CertificateID>?</sch:CertificateID>
            <sch:Certificate xm:contentType="application/?">
               <sch:Data>cid:376135226282</sch:Data>
            </sch:Certificate>
         </wsdl:CACertificate>
      </wsdl:LoadCACertificates>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates" name="LoadCertificates" bindingOperationName="LoadCertificates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header/>
   <soap:Body>
      <wsdl:LoadCertificates>
         <!--1 or more repetitions:-->
         <wsdl:NVTCertificate>
            <sch:CertificateID>?</sch:CertificateID>
            <sch:Certificate xm:contentType="application/?">
               <sch:Data>cid:1304916343925</sch:Data>
            </sch:Certificate>
         </wsdl:NVTCertificate>
      </wsdl:LoadCertificates>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey" name="LoadCertificateWithPrivateKey" bindingOperationName="LoadCertificateWithPrivateKey" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header/>
   <soap:Body>
      <wsdl:LoadCertificateWithPrivateKey>
         <!--1 or more repetitions:-->
         <wsdl:CertificateWithPrivateKey>
            <!--Optional:-->
            <sch:CertificateID>?</sch:CertificateID>
            <sch:Certificate xm:contentType="application/?">
               <sch:Data>cid:260348170931</sch:Data>
            </sch:Certificate>
            <sch:PrivateKey xm:contentType="application/?">
               <sch:Data>cid:527595573953</sch:Data>
            </sch:PrivateKey>
            <!--You may enter ANY elements at this point-->
         </wsdl:CertificateWithPrivateKey>
      </wsdl:LoadCertificateWithPrivateKey>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKeyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter" name="RemoveIPAddressFilter" bindingOperationName="RemoveIPAddressFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:RemoveIPAddressFilter>
         <wsdl:IPAddressFilter>
            <sch:Type>?</sch:Type>
            <!--Zero or more repetitions:-->
            <sch:IPv4Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv4Address>
            <!--Zero or more repetitions:-->
            <sch:IPv6Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv6Address>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:IPAddressFilter>
      </wsdl:RemoveIPAddressFilter>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilterRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes" name="RemoveScopes" bindingOperationName="RemoveScopes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:RemoveScopes>
         <!--1 or more repetitions:-->
         <wsdl:ScopeItem>?</wsdl:ScopeItem>
      </wsdl:RemoveScopes>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem" name="RestoreSystem" bindingOperationName="RestoreSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema" xmlns:xm="http://www.w3.org/2005/05/xmlmime" xmlns:inc="http://www.w3.org/2004/08/xop/include">
   <soap:Header/>
   <soap:Body>
      <wsdl:RestoreSystem>
         <!--1 or more repetitions:-->
         <wsdl:BackupFiles>
            <sch:Name>?</sch:Name>
            <sch:Data xm:contentType="application/?">
               <inc:Include href="?">
                  <!--You may enter ANY elements at this point-->
               </inc:Include>
            </sch:Data>
         </wsdl:BackupFiles>
      </wsdl:RestoreSystem>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystemRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks" name="ScanAvailableDot11Networks" bindingOperationName="ScanAvailableDot11Networks" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:ScanAvailableDot11Networks>
         <wsdl:InterfaceToken>?</wsdl:InterfaceToken>
      </wsdl:ScanAvailableDot11Networks>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11NetworksRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand" name="SendAuxiliaryCommand" bindingOperationName="SendAuxiliaryCommand" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SendAuxiliaryCommand>
         <wsdl:AuxiliaryCommand>?</wsdl:AuxiliaryCommand>
      </wsdl:SendAuxiliaryCommand>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommandRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy" name="SetAccessPolicy" bindingOperationName="SetAccessPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:xm="http://www.w3.org/2005/05/xmlmime" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetAccessPolicy>
         <wsdl:PolicyFile xm:contentType="application/?">
            <sch:Data>cid:473638307392</sch:Data>
         </wsdl:PolicyFile>
      </wsdl:SetAccessPolicy>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus" name="SetCertificatesStatus" bindingOperationName="SetCertificatesStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetCertificatesStatus>
         <!--Zero or more repetitions:-->
         <wsdl:CertificateStatus>
            <sch:CertificateID>?</sch:CertificateID>
            <sch:Status>?</sch:Status>
            <!--You may enter ANY elements at this point-->
         </wsdl:CertificateStatus>
      </wsdl:SetCertificatesStatus>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatusRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode" name="SetClientCertificateMode" bindingOperationName="SetClientCertificateMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetClientCertificateMode>
         <wsdl:Enabled>?</wsdl:Enabled>
      </wsdl:SetClientCertificateMode>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode" name="SetDiscoveryMode" bindingOperationName="SetDiscoveryMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetDiscoveryMode>
         <wsdl:DiscoveryMode>?</wsdl:DiscoveryMode>
      </wsdl:SetDiscoveryMode>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetDNS" name="SetDNS" bindingOperationName="SetDNS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetDNS>
         <wsdl:FromDHCP>?</wsdl:FromDHCP>
         <!--Zero or more repetitions:-->
         <wsdl:SearchDomain>?</wsdl:SearchDomain>
         <!--Zero or more repetitions:-->
         <wsdl:DNSManual>
            <sch:Type>?</sch:Type>
            <!--Optional:-->
            <sch:IPv4Address>?</sch:IPv4Address>
            <!--Optional:-->
            <sch:IPv6Address>?</sch:IPv6Address>
         </wsdl:DNSManual>
      </wsdl:SetDNS>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetDNSRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration" name="SetDot1XConfiguration" bindingOperationName="SetDot1XConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetDot1XConfiguration>
         <wsdl:Dot1XConfiguration>
            <sch:Dot1XConfigurationToken>?</sch:Dot1XConfigurationToken>
            <sch:Identity>?</sch:Identity>
            <!--Optional:-->
            <sch:AnonymousID>?</sch:AnonymousID>
            <sch:EAPMethod>?</sch:EAPMethod>
            <!--Zero or more repetitions:-->
            <sch:CACertificateID>?</sch:CACertificateID>
            <!--Optional:-->
            <sch:EAPMethodConfiguration>
               <!--Optional:-->
               <sch:TLSConfiguration>
                  <sch:CertificateID>?</sch:CertificateID>
                  <!--You may enter ANY elements at this point-->
               </sch:TLSConfiguration>
               <!--Optional:-->
               <sch:Password>?</sch:Password>
               <!--Optional:-->
               <sch:Extension>
                  <!--You may enter ANY elements at this point-->
               </sch:Extension>
            </sch:EAPMethodConfiguration>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:Dot1XConfiguration>
      </wsdl:SetDot1XConfiguration>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses" name="SetDPAddresses" bindingOperationName="SetDPAddresses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetDPAddresses>
         <!--Zero or more repetitions:-->
         <wsdl:DPAddress>
            <sch:Type>?</sch:Type>
            <!--Optional:-->
            <sch:IPv4Address>?</sch:IPv4Address>
            <!--Optional:-->
            <sch:IPv6Address>?</sch:IPv6Address>
            <!--Optional:-->
            <sch:DNSname>?</sch:DNSname>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:DPAddress>
      </wsdl:SetDPAddresses>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddressesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS" name="SetDynamicDNS" bindingOperationName="SetDynamicDNS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetDynamicDNS>
         <wsdl:Type>?</wsdl:Type>
         <!--Optional:-->
         <wsdl:Name>?</wsdl:Name>
         <!--Optional:-->
         <wsdl:TTL>?</wsdl:TTL>
      </wsdl:SetDynamicDNS>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNSRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetHostname" name="SetHostname" bindingOperationName="SetHostname" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetHostname>
         <wsdl:Name>?</wsdl:Name>
      </wsdl:SetHostname>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP" name="SetHostnameFromDHCP" bindingOperationName="SetHostnameFromDHCP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetHostnameFromDHCP>
         <wsdl:FromDHCP>?</wsdl:FromDHCP>
      </wsdl:SetHostnameFromDHCP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCPRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter" name="SetIPAddressFilter" bindingOperationName="SetIPAddressFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetIPAddressFilter>
         <wsdl:IPAddressFilter>
            <sch:Type>?</sch:Type>
            <!--Zero or more repetitions:-->
            <sch:IPv4Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv4Address>
            <!--Zero or more repetitions:-->
            <sch:IPv6Address>
               <sch:Address>?</sch:Address>
               <sch:PrefixLength>?</sch:PrefixLength>
            </sch:IPv6Address>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:IPAddressFilter>
      </wsdl:SetIPAddressFilter>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilterRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway" name="SetNetworkDefaultGateway" bindingOperationName="SetNetworkDefaultGateway" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetNetworkDefaultGateway>
         <!--Zero or more repetitions:-->
         <wsdl:IPv4Address>?</wsdl:IPv4Address>
         <!--Zero or more repetitions:-->
         <wsdl:IPv6Address>?</wsdl:IPv6Address>
      </wsdl:SetNetworkDefaultGateway>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGatewayRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces" name="SetNetworkInterfaces" bindingOperationName="SetNetworkInterfaces" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetNetworkInterfaces>
         <wsdl:InterfaceToken>?</wsdl:InterfaceToken>
         <wsdl:NetworkInterface>
            <!--Optional:-->
            <sch:Enabled>?</sch:Enabled>
            <!--Optional:-->
            <sch:Link>
               <sch:AutoNegotiation>?</sch:AutoNegotiation>
               <sch:Speed>?</sch:Speed>
               <sch:Duplex>?</sch:Duplex>
            </sch:Link>
            <!--Optional:-->
            <sch:MTU>?</sch:MTU>
            <!--Optional:-->
            <sch:IPv4>
               <!--Optional:-->
               <sch:Enabled>?</sch:Enabled>
               <!--Zero or more repetitions:-->
               <sch:Manual>
                  <sch:Address>?</sch:Address>
                  <sch:PrefixLength>?</sch:PrefixLength>
               </sch:Manual>
               <!--Optional:-->
               <sch:DHCP>?</sch:DHCP>
            </sch:IPv4>
            <!--Optional:-->
            <sch:IPv6>
               <!--Optional:-->
               <sch:Enabled>?</sch:Enabled>
               <!--Optional:-->
               <sch:AcceptRouterAdvert>?</sch:AcceptRouterAdvert>
               <!--Zero or more repetitions:-->
               <sch:Manual>
                  <sch:Address>?</sch:Address>
                  <sch:PrefixLength>?</sch:PrefixLength>
               </sch:Manual>
               <!--Optional:-->
               <sch:DHCP>?</sch:DHCP>
            </sch:IPv6>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
               <!--Zero or more repetitions:-->
               <sch:Dot3>
                  <!--You may enter ANY elements at this point-->
               </sch:Dot3>
               <!--Zero or more repetitions:-->
               <sch:Dot11>
                  <sch:SSID>cid:243064999018</sch:SSID>
                  <sch:Mode>?</sch:Mode>
                  <sch:Alias>?</sch:Alias>
                  <sch:Priority>?</sch:Priority>
                  <sch:Security>
                     <sch:Mode>?</sch:Mode>
                     <!--Optional:-->
                     <sch:Algorithm>?</sch:Algorithm>
                     <!--Optional:-->
                     <sch:PSK>
                        <!--Optional:-->
                        <sch:Key>cid:1147891284483</sch:Key>
                        <!--Optional:-->
                        <sch:Passphrase>?</sch:Passphrase>
                        <!--Optional:-->
                        <sch:Extension>
                           <!--You may enter ANY elements at this point-->
                        </sch:Extension>
                     </sch:PSK>
                     <!--Optional:-->
                     <sch:Dot1X>?</sch:Dot1X>
                     <!--Optional:-->
                     <sch:Extension>
                        <!--You may enter ANY elements at this point-->
                     </sch:Extension>
                  </sch:Security>
                  <!--You may enter ANY elements at this point-->
               </sch:Dot11>
               <!--Optional:-->
               <sch:Extension>
                  <!--You may enter ANY elements at this point-->
               </sch:Extension>
            </sch:Extension>
         </wsdl:NetworkInterface>
      </wsdl:SetNetworkInterfaces>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfacesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols" name="SetNetworkProtocols" bindingOperationName="SetNetworkProtocols" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetNetworkProtocols>
         <!--1 or more repetitions:-->
         <wsdl:NetworkProtocols>
            <sch:Name>?</sch:Name>
            <sch:Enabled>?</sch:Enabled>
            <!--1 or more repetitions:-->
            <sch:Port>?</sch:Port>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:NetworkProtocols>
      </wsdl:SetNetworkProtocols>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocolsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetNTP" name="SetNTP" bindingOperationName="SetNTP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetNTP>
         <wsdl:FromDHCP>?</wsdl:FromDHCP>
         <!--Zero or more repetitions:-->
         <wsdl:NTPManual>
            <sch:Type>?</sch:Type>
            <!--Optional:-->
            <sch:IPv4Address>?</sch:IPv4Address>
            <!--Optional:-->
            <sch:IPv6Address>?</sch:IPv6Address>
            <!--Optional:-->
            <sch:DNSname>?</sch:DNSname>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:NTPManual>
      </wsdl:SetNTP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetNTPRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings" name="SetRelayOutputSettings" bindingOperationName="SetRelayOutputSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetRelayOutputSettings>
         <wsdl:RelayOutputToken>?</wsdl:RelayOutputToken>
         <wsdl:Properties>
            <sch:Mode>?</sch:Mode>
            <sch:DelayTime>?</sch:DelayTime>
            <sch:IdleState>?</sch:IdleState>
         </wsdl:Properties>
      </wsdl:SetRelayOutputSettings>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettingsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState" name="SetRelayOutputState" bindingOperationName="SetRelayOutputState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetRelayOutputState>
         <wsdl:RelayOutputToken>?</wsdl:RelayOutputToken>
         <wsdl:LogicalState>?</wsdl:LogicalState>
      </wsdl:SetRelayOutputState>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputStateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode" name="SetRemoteDiscoveryMode" bindingOperationName="SetRemoteDiscoveryMode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetRemoteDiscoveryMode>
         <wsdl:RemoteDiscoveryMode>?</wsdl:RemoteDiscoveryMode>
      </wsdl:SetRemoteDiscoveryMode>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryModeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetRemoteUser" name="SetRemoteUser" bindingOperationName="SetRemoteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetRemoteUser>
         <!--Optional:-->
         <wsdl:RemoteUser>
            <sch:Username>?</sch:Username>
            <!--Optional:-->
            <sch:Password>?</sch:Password>
            <sch:UseDerivedPassword>?</sch:UseDerivedPassword>
            <!--You may enter ANY elements at this point-->
         </wsdl:RemoteUser>
      </wsdl:SetRemoteUser>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUserRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetScopes" name="SetScopes" bindingOperationName="SetScopes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetScopes>
         <!--1 or more repetitions:-->
         <wsdl:Scopes>?</wsdl:Scopes>
      </wsdl:SetScopes>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetScopesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime" name="SetSystemDateAndTime" bindingOperationName="SetSystemDateAndTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetSystemDateAndTime>
         <wsdl:DateTimeType>?</wsdl:DateTimeType>
         <wsdl:DaylightSavings>?</wsdl:DaylightSavings>
         <!--Optional:-->
         <wsdl:TimeZone>
            <sch:TZ>?</sch:TZ>
         </wsdl:TimeZone>
         <!--Optional:-->
         <wsdl:UTCDateTime>
            <sch:Time>
               <sch:Hour>?</sch:Hour>
               <sch:Minute>?</sch:Minute>
               <sch:Second>?</sch:Second>
            </sch:Time>
            <sch:Date>
               <sch:Year>?</sch:Year>
               <sch:Month>?</sch:Month>
               <sch:Day>?</sch:Day>
            </sch:Date>
         </wsdl:UTCDateTime>
      </wsdl:SetSystemDateAndTime>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTimeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault" name="SetSystemFactoryDefault" bindingOperationName="SetSystemFactoryDefault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetSystemFactoryDefault>
         <wsdl:FactoryDefault>?</wsdl:FactoryDefault>
      </wsdl:SetSystemFactoryDefault>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefaultRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetUser" name="SetUser" bindingOperationName="SetUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:sch="http://www.onvif.org/ver10/schema">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetUser>
         <!--1 or more repetitions:-->
         <wsdl:User>
            <sch:Username>?</sch:Username>
            <!--Optional:-->
            <sch:Password>?</sch:Password>
            <sch:UserLevel>?</sch:UserLevel>
            <!--Optional:-->
            <sch:Extension>
               <!--You may enter ANY elements at this point-->
            </sch:Extension>
         </wsdl:User>
      </wsdl:SetUser>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetUserRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration" name="SetZeroConfiguration" bindingOperationName="SetZeroConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SetZeroConfiguration>
         <wsdl:InterfaceToken>?</wsdl:InterfaceToken>
         <wsdl:Enabled>?</wsdl:Enabled>
      </wsdl:SetZeroConfiguration>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade" name="StartFirmwareUpgrade" bindingOperationName="StartFirmwareUpgrade" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:StartFirmwareUpgrade/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgradeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/StartSystemRestore" name="StartSystemRestore" bindingOperationName="StartSystemRestore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:StartSystemRestore/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestoreRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/SystemReboot" name="SystemReboot" bindingOperationName="SystemReboot" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl">
   <soap:Header/>
   <soap:Body>
      <wsdl:SystemReboot/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/SystemRebootRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware" name="UpgradeSystemFirmware" bindingOperationName="UpgradeSystemFirmware" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.1.170/onvif/device_service</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:wsdl="http://www.onvif.org/ver10/device/wsdl" xmlns:xm="http://www.w3.org/2005/05/xmlmime" xmlns:inc="http://www.w3.org/2004/08/xop/include">
   <soap:Header/>
   <soap:Body>
      <wsdl:UpgradeSystemFirmware>
         <wsdl:Firmware xm:contentType="application/?">
            <inc:Include href="?">
               <!--You may enter ANY elements at this point-->
            </inc:Include>
         </wsdl:Firmware>
      </wsdl:UpgradeSystemFirmware>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmwareRequest"/></con:call></con:operation></con:interface><con:testSuite name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:sensitiveInformation/></con:soapui-project>